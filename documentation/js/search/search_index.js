var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/AlertService.html",[0,0.519,1,1.034]],["body/injectables/AlertService.html",[0,0.52,1,1.037,2,0.805,3,0.1,4,0.1,5,0.068,6,1.691,7,0.228,8,1.037,9,5.08,10,3.462,11,3.462,12,3.462,13,3.462,14,0.723,15,2.248,16,2.711,17,2.283,18,1.07,19,2.248,20,1.138,21,0.024,22,1.001,23,0.782,24,0.665,25,1.979,26,2.945,27,2.248,28,3.212,29,1.339,30,3.462,31,1.607,32,2.248,33,3.088,34,3.462,35,3.855,36,4.242,37,2.248,38,1.036,39,3.462,40,2.248,41,0.567,42,1.285,43,2.248,44,0.714,45,1.912,46,0.758,47,0.228,48,2.248,49,2.248,50,1.191,51,1.526,52,0.249,53,0.134,54,0.977,55,2.248,56,1.691,57,3.462,58,2.248,59,2.248,60,2.248,61,1.191,62,2.248,63,3.177,64,2.248,65,0.777,66,3.592,67,4.604,68,3.177,69,3.592,70,1.912,71,2.605,72,3.177,73,3.177,74,1.192,75,3.592,76,1.691,77,2.248,78,2.943,79,1.621,80,1.686,81,3.592,82,5.821,83,4.242,84,2.598,85,2.871,86,1.71,87,3.592,88,5.821,89,3.592,90,2.248,91,2.945,92,1.192,93,2.248,94,0.97,95,4.743,96,1.921,97,3.462,98,3.462,99,2.083,100,3.462,101,3.462,102,0.97,103,1.036,104,1.708,105,0.97,106,2.945,107,4.222,108,1.691,109,2.248,110,2.248,111,2.945,112,2.248,113,1.285,114,1.691,115,1.394,116,2.902,117,2.248,118,1.394,119,4.222,120,2.248,121,2.248,122,2.248,123,2.248,124,2.248,125,3.462,126,1.494,127,1.318,128,3.462,129,3.462,130,1.318,131,3.462,132,1.402,133,2.248,134,0.007,135,0.011,136,0.007]],["title/components/AppComponent.html",[137,0.767,138,1.491]],["body/components/AppComponent.html",[3,0.14,4,0.14,5,0.094,7,0.319,8,1.328,14,0.926,18,1.166,20,0.698,21,0.024,22,0.772,23,0.532,24,0.408,29,1.252,38,2.043,41,0.676,44,0.998,46,1.059,47,0.319,50,2.957,52,0.347,53,0.187,54,1.662,56,4.596,61,1.664,80,0.887,134,0.01,135,0.014,136,0.01,137,1.142,138,2.408,139,2.349,140,1.796,141,1.796,142,2.672,143,1.796,144,2.954,145,2.767,146,2.751,147,2.043,148,4.433,149,0.87,150,2.367,151,4.371,152,5.581,153,3.978,154,3.141,155,4.148,156,4.724,157,4.724,158,2.709,159,6.278,160,3.141,161,3.141,162,3.141,163,1.356,164,4.596,165,3.79,166,5.197,167,3.489,168,3.013,169,4.433,170,2.043,171,3.141,172,1.272,173,2.187,174,2.364,175,2.672,176,2.364,177,2.672,178,2.133,179,3.141,180,3.141,181,3.141,182,3.141,183,3.141,184,3.141,185,3.141,186,3.141,187,3.141,188,3.772,189,4.433,190,1.125,191,2.534,192,2.534,193,1.796,194,1.796,195,1.796,196,1.796,197,1.356,198,1.796,199,1.356,200,1.796,201,1.356,202,1.796,203,1.356,204,1.549,205,1.796,206,1.796]],["title/modules/AppModule.html",[207,1.098,208,2.345]],["body/modules/AppModule.html",[1,1.815,3,0.136,4,0.136,5,0.092,17,2.454,21,0.024,41,0.783,42,3.463,46,1.033,47,0.311,52,0.339,53,0.183,134,0.01,135,0.014,136,0.01,138,2.898,145,1.322,156,3.277,157,3.277,170,1.412,172,1.241,173,2.722,174,2.305,175,2.606,176,2.305,177,2.606,190,1.097,207,0.973,208,4.869,209,1.241,210,1.412,211,2.5,212,2.685,213,2.685,214,1.511,215,2.606,216,2.606,217,2.606,218,2.606,219,2.606,220,3.759,221,2.792,222,2.792,223,2.792,224,3.463,225,2.17,226,3.463,227,3.463,228,2.308,229,1.623,230,3.063,231,2.148,232,4.355,233,4.311,234,3.063,235,1.901,236,3.063,237,1.901,238,1.901,239,1.751,240,2.49,241,1.751,242,1.901,243,2.685,244,1.511,245,3.063,246,2.606,247,2.606,248,1.751,249,1.751,250,2.148,251,4.355,252,2.606,253,2.305,254,4.355,255,1.751,256,4.355,257,3.063,258,3.063,259,3.063,260,1.751,261,4.355,262,1.241,263,3.277,264,3.063,265,3.063,266,3.063,267,3.063,268,3.063,269,3.063]],["title/modules/AppRoutingModule.html",[207,1.098,220,2.143]],["body/modules/AppRoutingModule.html",[3,0.2,4,0.2,5,0.135,21,0.023,41,0.68,47,0.456,52,0.497,53,0.268,65,0.827,134,0.014,135,0.018,136,0.014,165,3.051,167,3.051,168,2.217,172,1.82,204,2.217,209,1.82,214,2.217,220,3.492,231,2.217,250,2.776,270,4.493,271,3.823,272,3.515,273,3.051,274,3.051,275,2.832,276,2.982,277,2.316,278,4.493,279,4.235,280,4.493,281,4.493,282,5.758,283,4.493,284,3.997,285,4.493,286,4.493,287,4.493,288,4.493,289,4.493,290,4.493,291,4.493,292,4.493]],["title/injectables/AuthGuardService.html",[0,0.519,272,1.83]],["body/injectables/AuthGuardService.html",[0,0.863,2,1.662,3,0.207,4,0.207,5,0.14,7,0.471,8,1.72,14,0.969,18,1.303,20,1.031,21,0.023,22,0.697,23,0.689,24,0.602,29,1.31,41,0.69,47,0.471,52,0.513,53,0.277,74,1.31,134,0.015,135,0.018,136,0.015,146,2.879,149,1.127,150,2.646,158,2.89,172,1.879,272,3.043,284,4.155,293,5.544,294,3.948,295,3.725,296,4.641,297,4.641,298,4.641,299,3.043,300,4.641,301,4.641,302,3.151,303,4.641,304,4.641]],["title/injectables/AuthenticationService.html",[0,0.519,158,1.491]],["body/injectables/AuthenticationService.html",[0,0.584,1,1.779,2,0.938,3,0.117,4,0.117,5,0.079,7,0.266,8,1.164,14,0.968,16,2.931,18,1.344,20,1.139,21,0.024,22,0.862,23,0.713,24,0.665,25,2.649,29,1.62,38,1.207,41,0.689,46,0.883,47,0.266,52,0.513,53,0.277,54,1.546,65,0.715,74,1.62,79,0.784,80,1.308,92,1.308,116,2.135,127,1.764,132,1.06,134,0.008,135,0.012,136,0.008,146,1.625,149,0.762,153,3.398,155,3.481,158,1.677,163,1.677,204,1.917,260,1.497,262,1.06,295,2.649,299,2.455,302,1.778,305,1.625,306,3.487,307,3.146,308,3.146,309,3.481,310,4.317,311,3.858,312,3.886,313,2.618,314,3.896,315,3.487,316,4.033,317,3.886,318,2.924,319,1.591,320,2.902,321,2.618,322,2.649,323,2.924,324,2.618,325,2.618,326,2.618,327,2.924,328,2.618,329,3.146,330,2.924,331,2.618,332,2.924,333,2.286,334,2.618,335,2.875,336,2.618,337,2.618,338,1.497,339,1.625,340,2.411,341,0.938,342,1.06,343,1.06,344,1.778,345,1.497,346,1.97,347,1.97,348,1.479,349,1.625,350,2.649,351,1.778,352,1.97,353,1.97,354,1.97,355,1.97,356,1.97,357,1.97,358,1.97,359,1.97,360,1.97,361,3.858,362,1.625,363,3.858,364,1.97,365,1.292,366,1.97,367,1.97,368,1.677,369,1.97,370,1.97,371,1.13,372,1.06,373,1.625,374,1.625,375,1.625,376,1.625,377,1.207,378,1.97,379,1.97,380,1.97,381,1.97,382,2.924,383,2.924,384,1.97,385,1.97,386,0.883,387,1.97,388,1.97,389,1.97,390,1.97,391,1.97,392,1.97,393,1.97,394,1.97,395,1.97]],["title/classes/BarcodeData.html",[53,0.206,396,1.974]],["body/classes/BarcodeData.html",[1,1.283,3,0.102,4,0.102,5,0.069,7,0.233,14,1.081,17,1.735,18,1.003,20,0.511,21,0.024,22,0.821,24,0.738,28,2.368,31,1.827,33,1.06,41,0.649,44,0.731,47,0.233,52,0.254,53,0.287,54,1.605,65,0.788,74,1.355,78,1.427,79,1.702,80,1.355,84,1.624,85,2.368,86,2.096,92,0.649,94,0.992,96,1.944,99,1.738,102,1.848,103,1.06,104,1.738,105,1.848,115,1.427,116,1.974,118,1.427,126,2.357,127,0.875,130,1.341,132,0.931,134,0.007,135,0.011,136,0.007,137,0.783,144,1.06,145,0.992,147,1.06,149,0.691,150,3.131,168,2.553,173,1.134,221,1.974,222,1.974,223,1.974,225,1.534,235,1.427,237,1.427,238,1.427,239,1.315,240,2.448,241,1.315,242,1.427,248,1.315,249,1.315,319,1.011,365,1.134,386,1.445,396,2.959,397,1.315,398,1.427,399,2.742,400,1.867,401,3.211,402,3.211,403,2.3,404,2.3,405,3.223,406,2.3,407,2.3,408,2.3,409,1.867,410,2.909,411,1.562,412,1.134,413,1.562,414,1.427,415,1.427,416,1.562,417,2.979,418,1.562,419,1.562,420,1.562,421,1.562,422,1.562,423,1.562,424,1.562,425,1.562,426,1.562,427,3.249,428,1.562,429,1.562,430,1.562,431,1.562,432,1.562,433,1.218,434,1.562,435,1.562,436,1.562,437,1.562,438,1.562,439,2.393,440,2.448,441,1.562,442,2.393,443,2.393,444,1.562,445,1.562,446,2.393,447,1.562,448,2.186,449,2.393,450,1.562,451,1.562,452,2.393,453,1.562,454,2.186,455,2.393,456,1.562,457,1.562,458,1.562,459,1.562,460,1.562,461,1.562,462,1.562,463,1.562,464,2.909,465,1.562,466,1.562,467,1.562,468,1.562,469,1.562,470,1.562,471,2.909,472,1.562,473,1.562,474,1.562,475,1.562,476,2.186,477,1.562,478,2.393,479,1.562,480,1.562,481,1.562,482,1.562,483,1.562,484,1.562,485,1.562,486,1.562,487,2.393,488,1.562,489,1.562,490,1.562,491,1.315,492,1.315,493,1.315,494,1.315,495,1.315,496,1.315,497,1.218,498,0.992,499,1.218,500,1.134]],["title/components/BarcodePage.html",[44,1.098,137,0.767]],["body/components/BarcodePage.html",[1,1.519,3,0.076,4,0.076,5,0.052,7,0.174,8,0.836,14,0.937,17,2.054,18,1.371,20,0.997,21,0.024,22,0.882,23,0.691,24,0.582,28,0.845,29,1.657,31,1.831,33,1.877,38,2.436,41,0.585,44,1.294,47,0.174,50,2.158,52,0.19,53,0.243,54,1.432,61,0.908,65,0.65,74,1.15,78,1.063,79,1.584,80,1.657,84,1.286,85,2.009,86,1.816,92,0.788,94,1.205,96,1.948,99,1.377,102,1.936,103,0.79,104,1.377,105,1.936,115,1.063,116,2.067,118,1.063,126,2.076,127,0.652,130,1.063,132,0.694,134,0.005,135,0.009,136,0.005,137,0.785,138,0.739,139,1.479,140,0.979,141,0.979,143,0.979,144,2.436,145,2.282,147,1.286,149,0.548,150,2.83,163,2.282,168,2.773,173,0.845,190,0.614,191,1.596,192,1.596,193,0.979,194,0.979,195,0.979,196,0.979,197,0.739,198,0.979,199,0.739,200,0.979,201,0.739,202,0.979,203,0.739,204,0.845,205,0.979,206,0.979,221,2.337,222,2.337,223,2.337,225,1.816,235,1.063,237,1.063,238,1.063,239,0.979,240,2.749,241,0.979,242,1.063,248,0.979,249,0.979,319,0.834,365,0.845,386,1.191,396,2.749,398,1.063,399,2.376,400,0.908,401,1.063,402,1.063,409,1.872,410,3.266,411,1.896,412,1.377,413,2.399,414,1.063,415,1.063,416,2.399,417,2.527,418,2.399,419,2.399,420,2.399,421,1.164,422,2.399,423,2.399,424,1.164,425,1.164,426,2.399,427,3.414,428,2.399,429,2.399,430,1.164,431,1.164,432,1.164,433,2.158,434,1.164,435,1.164,436,1.164,437,2.766,438,1.164,439,1.896,440,2.019,441,1.164,442,1.896,443,1.896,444,2.766,445,1.164,446,1.896,447,1.164,448,1.732,449,1.896,450,2.766,451,1.164,452,1.896,453,1.164,454,1.732,455,1.896,456,2.766,457,1.164,458,1.164,459,1.164,460,2.766,461,1.164,462,1.896,463,1.164,464,2.399,465,1.896,466,1.164,467,1.896,468,1.164,469,2.766,470,1.164,471,2.399,472,1.164,473,1.164,474,1.164,475,2.766,476,1.732,477,1.164,478,1.896,479,1.164,480,1.896,481,1.164,482,1.164,483,1.164,484,1.164,485,1.164,486,1.164,487,1.896,488,1.164,489,1.164,490,1.164,491,0.979,492,0.979,493,0.979,494,0.979,495,0.979,496,0.979,497,0.908,498,0.739,499,0.908,500,0.845,501,1.063,502,2.792,503,2.792,504,2.792,505,2.792,506,1.713,507,2.792,508,1.713,509,1.713,510,1.713,511,1.713,512,1.713,513,1.713,514,1.713,515,1.713,516,1.713,517,1.713,518,1.713,519,1.713,520,1.713,521,1.713,522,1.713,523,1.713,524,1.713,525,1.713,526,1.713,527,1.713,528,1.713,529,3.466,530,2.792]],["title/modules/BarcodePageModule.html",[207,1.098,531,2.345]],["body/modules/BarcodePageModule.html",[3,0.199,4,0.199,5,0.135,21,0.023,41,0.759,44,2.18,46,1.509,47,0.454,52,0.495,53,0.267,65,0.823,134,0.014,135,0.018,136,0.014,137,0.994,170,2.061,172,1.812,190,1.602,207,1.421,209,1.812,210,2.061,211,3.025,212,2.37,213,2.37,214,2.207,228,2.974,229,2.37,231,2.207,243,2.974,244,2.207,250,2.769,255,3.208,272,2.974,273,3.038,274,3.038,275,2.826,276,2.37,277,1.509,284,2.775,531,4.591,532,3.806,533,3.806,534,4.473,535,3.482,536,2.557,537,4.473,538,2.775]],["title/interfaces/Bookstand.html",[102,1.491,539,0.975]],["body/interfaces/Bookstand.html",[3,0.203,4,0.203,5,0.137,7,0.463,21,0.023,23,0.836,24,0.927,79,2.118,86,2.699,102,2.453,103,2.104,134,0.015,135,0.018,136,0.015,149,1.115,319,1.53,497,3.433,498,2.974,539,1.289,540,2.104,541,3.885,542,5.512,543,6.479,544,6.479,545,4.278]],["title/injectables/BookstandService.html",[0,0.519,221,1.592]],["body/injectables/BookstandService.html",[0,0.702,2,1.211,3,0.151,4,0.151,5,0.102,7,0.343,8,1.398,14,0.975,18,1.263,20,1.281,21,0.024,22,0.866,23,0.751,24,0.748,29,1.627,41,0.638,47,0.343,52,0.374,53,0.202,54,0.955,65,1.151,74,1.707,86,1.37,92,0.955,99,1.668,102,2.765,105,1.46,126,1.46,127,1.287,130,1.777,134,0.011,135,0.015,136,0.011,221,2.151,226,3.574,277,1.944,341,2.166,342,1.37,343,1.37,348,1.777,368,2.487,371,2.487,372,2.334,373,2.098,374,2.098,375,2.098,376,2.098,377,2.463,386,1.574,497,2.473,542,3.971,546,2.877,547,4.668,548,4.668,549,5.764,550,4.668,551,3.382,552,3.382,553,4.668,554,3.382,555,4.668,556,3.382,557,3.382,558,4.668,559,3.382,560,3.382,561,1.933,562,2.832,563,3.971,564,2.896,565,2.877,566,3.382,567,3.382,568,3.382,569,4.668,570,3.382,571,3.382,572,3.382,573,3.382,574,3.382,575,3.382,576,2.877,577,1.792,578,2.832,579,2.098,580,3.382,581,1.933,582,3.382,583,3.382,584,1.933]],["title/interfaces/Brand.html",[105,1.491,539,0.975]],["body/interfaces/Brand.html",[3,0.23,4,0.23,5,0.156,7,0.525,21,0.022,22,1.016,23,0.736,24,0.877,79,1.958,86,2.738,105,2.647,134,0.017,135,0.02,136,0.017,149,1.203,319,1.544,539,1.461,540,2.384,585,4.401]],["title/injectables/BrandService.html",[0,0.519,222,1.592]],["body/injectables/BrandService.html",[0,0.728,2,1.279,3,0.159,4,0.159,5,0.107,7,0.362,8,1.451,14,1.149,18,1.288,20,1.222,21,0.024,22,0.826,23,0.708,24,0.714,29,1.665,41,0.682,47,0.362,52,0.395,53,0.213,65,1.17,74,1.665,92,1.008,104,1.761,105,2.806,130,1.844,134,0.011,135,0.015,136,0.011,222,2.232,262,1.446,277,1.989,341,2.207,342,1.446,343,1.446,348,1.844,368,2.545,371,2.545,372,2.227,377,2.534,386,1.634,454,3.006,561,2.041,562,2.913,563,4.122,564,3.006,565,5.244,577,1.892,578,2.913,579,2.216,581,2.041,584,2.041,586,3.038,587,4.845,588,4.845,589,4.845,590,3.571,591,4.845,592,3.571,593,4.845,594,3.571,595,3.571,596,4.845,597,3.571,598,2.041,599,2.041,600,1.892,601,1.892,602,2.041,603,3.571,604,4.845,605,3.571,606,3.571]],["title/interfaces/Category.html",[96,1.399,539,0.975]],["body/interfaces/Category.html",[3,0.23,4,0.23,5,0.156,7,0.525,21,0.022,23,0.736,24,0.877,79,1.958,86,2.738,96,2.484,134,0.017,135,0.02,136,0.017,149,1.203,319,1.544,499,3.582,539,1.461,540,2.384,607,4.401]],["title/injectables/CategoryService.html",[0,0.519,223,1.592]],["body/injectables/CategoryService.html",[0,0.728,2,1.279,3,0.159,4,0.159,5,0.107,7,0.362,8,1.451,14,1.149,18,1.288,20,1.222,21,0.024,22,0.826,23,0.708,24,0.714,29,1.665,41,0.682,47,0.362,52,0.395,53,0.213,65,1.17,74,1.665,92,1.008,96,2.679,130,1.844,134,0.011,135,0.015,136,0.011,223,2.232,262,1.446,277,1.989,341,2.207,342,1.446,343,1.446,348,1.844,368,2.545,371,2.545,372,2.227,377,2.534,386,1.634,448,3.006,499,2.567,561,2.041,562,2.913,564,3.006,577,1.892,578,2.913,579,2.216,581,2.041,584,2.041,598,2.041,599,2.041,600,1.892,601,1.892,602,2.041,608,3.038,609,4.845,610,4.845,611,5.896,612,4.845,613,3.571,614,4.845,615,3.571,616,4.845,617,3.571,618,3.571,619,4.845,620,3.571,621,4.845,622,3.571,623,3.571,624,3.571,625,3.571]],["title/classes/ClassDropdownMe.html",[53,0.206,427,1.974]],["body/classes/ClassDropdownMe.html",[1,1.283,3,0.102,4,0.102,5,0.069,7,0.233,14,1.081,17,1.735,18,1.003,20,0.511,21,0.024,22,0.903,24,0.738,28,1.134,31,1.827,33,1.06,41,0.649,44,0.731,47,0.233,52,0.254,53,0.287,54,1.605,65,0.788,74,1.355,78,1.427,79,1.702,80,1.655,84,1.624,85,2.892,86,2.096,92,0.649,94,0.992,96,1.944,99,1.738,102,1.848,103,1.06,104,1.738,105,1.848,115,1.427,116,1.974,118,1.427,126,2.357,127,0.875,130,1.341,132,0.931,134,0.007,135,0.011,136,0.007,137,0.783,144,1.06,145,0.992,147,1.06,149,0.691,150,3.131,168,2.553,173,1.134,221,1.974,222,1.974,223,1.974,225,1.534,235,1.427,237,1.427,238,1.427,239,1.315,240,2.448,241,1.315,242,1.427,248,1.315,249,1.315,319,1.011,351,1.562,365,1.134,386,1.445,396,2.744,397,1.315,398,1.427,399,2.742,400,1.218,401,1.427,402,1.427,405,3.223,409,1.867,410,2.909,411,1.562,412,1.134,413,1.562,414,1.427,415,1.427,416,1.562,417,2.979,418,1.562,419,1.562,420,1.562,421,1.562,422,1.562,423,1.562,424,1.562,425,1.562,426,1.562,427,3.352,428,1.562,429,1.562,430,1.562,431,1.562,432,1.562,433,1.218,434,1.562,435,1.562,436,1.562,437,1.562,438,1.562,439,2.393,440,2.448,441,1.562,442,2.393,443,2.393,444,1.562,445,1.562,446,2.393,447,1.562,448,2.186,449,2.393,450,1.562,451,1.562,452,2.393,453,1.562,454,2.186,455,2.393,456,1.562,457,1.562,458,1.562,459,1.562,460,1.562,461,1.562,462,1.562,463,1.562,464,2.909,465,1.562,466,1.562,467,1.562,468,1.562,469,1.562,470,1.562,471,2.909,472,1.562,473,1.562,474,1.562,475,1.562,476,2.186,477,1.562,478,2.393,479,1.562,480,1.562,481,1.562,482,1.562,483,1.562,484,1.562,485,1.562,486,1.562,487,2.393,488,1.562,489,1.562,490,1.562,491,1.315,492,1.315,493,1.315,494,1.315,495,1.315,496,1.315,497,1.218,498,0.992,499,1.218,500,1.738,626,2.3,627,2.3,628,2.3,629,2.3]],["title/classes/ClassItems.html",[53,0.206,491,1.974]],["body/classes/ClassItems.html",[1,1.204,3,0.093,4,0.093,5,0.063,7,0.211,14,1.032,17,1.628,18,1.247,20,0.462,21,0.024,22,0.788,23,0.752,24,0.859,28,1.026,31,1.881,33,0.958,41,0.627,44,0.661,47,0.211,52,0.23,53,0.272,54,1.547,65,0.74,74,1.285,78,1.291,79,1.641,80,1.285,84,1.502,85,2.244,86,2.297,92,0.587,94,0.898,96,2.297,99,2.586,102,1.735,103,0.958,104,2.586,105,1.735,115,1.291,116,1.852,118,1.291,126,2.262,127,0.792,130,1.241,132,0.842,134,0.007,135,0.01,136,0.007,137,0.724,144,0.958,145,0.898,147,0.958,149,0.64,150,3.215,168,2.437,173,1.026,221,1.852,222,1.852,223,1.852,225,1.44,235,1.291,237,1.291,238,1.291,239,1.189,240,2.298,241,1.189,242,1.291,248,1.189,249,1.189,319,0.949,365,1.026,386,1.356,396,2.601,397,1.189,398,1.291,399,2.618,400,1.102,401,1.291,402,1.291,405,4.389,409,1.727,410,2.73,411,1.413,412,1.026,413,1.413,414,1.291,415,1.291,416,1.413,417,2.823,418,1.413,419,1.413,420,1.413,421,1.413,422,1.413,423,1.413,424,1.413,425,1.413,426,1.413,427,3.132,428,1.413,429,1.413,430,1.413,431,1.413,432,1.413,433,1.102,434,1.413,435,1.413,436,1.413,437,1.413,438,1.413,439,2.214,440,2.298,441,1.413,442,2.214,443,2.214,444,1.413,445,1.413,446,2.214,447,1.413,448,2.023,449,2.214,450,1.413,451,1.413,452,2.214,453,1.413,454,2.023,455,2.214,456,1.413,457,1.413,458,1.413,459,1.413,460,1.413,461,1.413,462,1.413,463,1.413,464,2.73,465,1.413,466,1.413,467,1.413,468,1.413,469,1.413,470,1.413,471,2.73,472,1.413,473,1.413,474,1.413,475,1.413,476,2.023,477,1.413,478,2.214,479,1.413,480,1.413,481,1.413,482,1.413,483,1.413,484,1.413,485,1.413,486,1.413,487,2.214,488,1.413,489,1.413,490,1.413,491,1.863,492,2.825,493,2.825,494,2.825,495,2.825,496,2.825,497,1.102,498,0.898,499,1.102,500,1.026,545,4.389,630,2.08,631,2.08,632,2.08,633,2.08,634,2.08,635,2.08,636,2.08,637,2.08,638,2.08,639,2.08,640,2.08]],["title/components/DashboardPage.html",[137,0.767,197,1.491]],["body/components/DashboardPage.html",[3,0.137,4,0.226,5,0.093,7,0.312,8,1.309,14,0.643,18,1.22,20,0.684,21,0.023,22,0.764,23,0.61,24,0.399,29,1.234,31,1.663,38,2.013,41,0.483,44,0.978,47,0.312,50,2.93,52,0.34,53,0.184,56,4.162,61,1.631,79,1.309,80,1.234,92,1.234,134,0.01,135,0.014,136,0.01,137,1.129,138,1.328,139,2.315,140,1.759,141,1.759,143,1.759,144,2.939,145,2.839,147,2.013,149,0.857,150,2.341,151,4.322,153,3.431,158,2.387,163,1.886,164,4.162,165,3.966,166,4.705,167,4.12,168,3.245,178,2.09,188,3.718,190,1.102,191,2.498,192,2.498,193,1.759,194,1.759,195,1.759,196,1.759,197,2.387,198,1.759,199,1.328,200,1.759,201,2.193,202,1.759,203,1.328,204,1.518,205,1.759,206,1.759,362,2.711,399,2.315,409,2.692,412,2.155,417,2.711,433,2.93,501,1.91,529,3.718,579,2.711,641,2.618,642,5.081,643,4.37,644,5.081,645,2.618,646,3.078,647,3.078,648,3.078,649,3.078,650,3.078,651,3.078,652,3.078,653,4.37,654,5.081,655,3.718,656,4.37,657,3.718,658,4.37,659,4.37,660,3.288,661,4.37,662,3.718,663,4.37,664,4.37,665,4.37,666,4.37,667,4.37,668,4.37,669,4.37,670,4.37,671,4.37,672,4.37,673,3.718,674,4.37,675,4.37,676,4.37,677,3.078,678,2.316,679,3.078,680,2.618,681,2.618,682,3.078,683,3.078,684,3.078,685,2.316,686,2.316]],["title/modules/DashboardPageModule.html",[207,1.098,687,2.345]],["body/modules/DashboardPageModule.html",[3,0.197,4,0.197,5,0.133,21,0.023,41,0.766,46,1.492,47,0.449,52,0.489,53,0.264,65,0.814,134,0.014,135,0.018,136,0.014,137,0.983,170,2.038,172,1.791,190,1.584,197,2.954,207,1.406,209,1.791,210,2.038,211,3.01,212,2.344,213,2.344,214,2.182,228,2.953,229,2.344,231,2.182,233,3.763,243,2.953,244,2.182,250,2.749,255,3.186,272,2.953,273,3.004,274,3.004,275,2.812,276,2.344,277,1.492,284,2.744,535,3.458,536,2.529,538,2.744,687,4.578,688,3.763,689,3.763,690,4.423,691,4.423,692,4.423]],["title/interfaces/DropDownBookstand.html",[539,0.975,693,2.345]],["body/interfaces/DropDownBookstand.html",[3,0.218,4,0.218,5,0.148,7,0.498,21,0.023,22,1.022,23,0.767,24,0.897,79,1.989,80,1.92,85,3.356,134,0.016,135,0.019,136,0.016,149,1.166,319,1.667,500,2.419,539,1.677,540,2.26,693,4.034,694,3.691]],["title/interfaces/DropDownMe.html",[500,1.704,539,0.975]],["body/interfaces/DropDownMe.html",[3,0.218,4,0.218,5,0.148,7,0.498,21,0.023,22,1.022,23,0.767,24,0.897,79,1.989,80,1.92,85,3.356,134,0.016,135,0.019,136,0.016,149,1.166,319,1.667,500,2.93,539,1.677,540,2.26,693,3.331,694,3.691]],["title/components/HomePage.html",[137,0.767,199,1.491]],["body/components/HomePage.html",[3,0.197,4,0.197,5,0.133,21,0.023,22,0.838,41,0.489,44,1.406,47,0.449,50,3.394,52,0.489,53,0.264,61,2.344,134,0.014,135,0.018,136,0.014,137,1.356,138,1.909,139,2.953,140,2.529,141,2.529,143,2.529,144,3.19,145,2.988,147,2.568,165,3.785,173,2.749,190,1.584,191,3.186,192,3.186,193,2.529,194,2.529,195,2.529,196,2.529,197,1.909,198,2.529,199,2.764,200,2.529,201,1.909,202,2.529,203,1.909,204,2.182,205,2.529,206,2.529,412,2.749,501,2.744,657,4.742,695,3.763,696,6.102,697,5.573,698,5.573,699,5.573,700,5.573,701,5.573,702,5.573]],["title/modules/HomePageModule.html",[207,1.098,703,2.345]],["body/modules/HomePageModule.html",[3,0.206,4,0.206,5,0.139,21,0.023,41,0.754,46,1.558,47,0.469,52,0.511,53,0.276,134,0.015,135,0.018,136,0.015,137,1.026,170,2.128,172,1.871,190,1.654,199,2.981,207,1.468,209,1.871,210,2.128,211,3.07,212,2.447,213,2.447,214,2.278,228,3.034,229,2.447,231,2.278,243,3.034,244,2.278,250,2.825,255,3.273,276,2.447,277,1.558,535,3.553,536,2.64,703,4.628,704,3.93,705,3.93,706,4.619,707,4.619,708,4.619]],["title/interfaces/IBarcode.html",[400,1.83,539,0.975]],["body/interfaces/IBarcode.html",[3,0.224,4,0.224,5,0.151,7,0.51,21,0.022,23,0.775,24,0.903,28,3.304,134,0.016,135,0.019,136,0.016,149,1.183,299,3.423,319,1.642,400,3.195,401,4.156,402,4.156,539,1.42,540,2.317,709,4.279]],["title/interfaces/Items.html",[31,1.315,539,0.975]],["body/interfaces/Items.html",[3,0.173,4,0.173,5,0.117,7,0.394,21,0.023,22,0.862,23,0.859,24,0.934,31,1.951,79,2.159,80,1.097,85,1.917,86,2.73,96,2.47,99,3.009,102,2.633,103,1.791,104,3.009,134,0.012,135,0.016,136,0.012,149,1.006,319,1.61,492,3.487,493,3.487,494,3.487,495,3.487,496,3.487,497,2.059,498,1.677,499,2.059,539,1.097,540,1.791,545,5.072,710,3.306]],["title/injectables/ItemsNewValueHandlerService.html",[0,0.519,42,1.974]],["body/injectables/ItemsNewValueHandlerService.html",[0,0.84,1,1.331,2,1.591,3,0.198,4,0.198,5,0.134,7,0.451,8,1.674,14,1.168,18,1.168,20,1.242,21,0.023,22,0.84,23,0.533,24,0.725,29,1.254,33,2.817,38,2.047,41,0.766,42,3.195,44,2.145,45,3.78,47,0.451,52,0.491,53,0.265,54,1.254,113,3.195,134,0.014,135,0.018,136,0.014,225,1.591,262,1.799,338,2.54,341,1.591,342,1.799,343,1.799,348,2.127,598,2.54,599,2.54,600,2.354,601,2.354,602,2.54,711,3.78,712,6.115,713,4.443,714,4.443,715,4.443,716,4.443,717,3.343,718,4.443]],["title/injectables/ItemsService.html",[0,0.519,17,1.399]],["body/injectables/ItemsService.html",[0,0.62,2,1.017,3,0.126,4,0.126,5,0.085,7,0.288,8,1.235,14,0.862,17,1.67,18,1.273,20,1.312,21,0.024,22,0.887,23,0.749,24,0.766,29,1.667,31,2.029,33,2.456,41,0.653,47,0.288,52,0.314,53,0.169,54,0.802,63,2.137,65,1.171,74,1.72,81,4.132,87,4.132,89,4.132,91,3.509,96,1.15,99,1.401,104,1.401,106,2.416,113,3.047,114,2.137,126,1.225,127,1.081,130,1.57,134,0.009,135,0.013,136,0.009,225,2.115,262,1.15,277,1.992,341,2.182,342,1.15,343,1.15,348,1.57,368,2.548,371,2.548,372,2.391,373,1.762,374,1.762,375,1.762,376,1.762,377,2.721,386,1.391,492,3.047,493,2.776,494,2.776,495,2.776,496,2.776,561,2.358,562,3.129,564,2.559,576,2.416,577,1.505,578,2.999,581,1.623,584,2.358,598,1.623,599,1.623,600,1.505,601,1.505,602,1.623,717,2.137,719,2.416,720,4.124,721,4.124,722,4.857,723,5.661,724,4.124,725,4.124,726,2.416,727,2.84,728,4.124,729,2.84,730,4.124,731,2.84,732,4.124,733,2.84,734,2.84,735,4.124,736,2.84,737,4.124,738,2.84,739,4.124,740,2.84,741,3.509,742,2.84,743,2.84,744,2.84,745,2.84,746,2.84,747,4.124,748,2.84,749,2.137]],["title/components/LoginPage.html",[137,0.767,201,1.491]],["body/components/LoginPage.html",[1,1.548,3,0.08,4,0.08,5,0.054,7,0.182,8,0.867,9,2.464,14,0.605,16,2.391,17,2.093,18,1.16,20,0.643,21,0.024,22,0.629,23,0.551,24,0.376,25,2.083,26,1.525,28,1.428,29,1.296,31,0.682,33,1.334,35,2.179,36,1.349,38,2.116,41,0.631,44,0.57,46,0.605,47,0.182,50,2.216,52,0.198,53,0.107,54,1.568,61,0.95,65,0.533,66,1.525,67,2.464,68,1.349,69,1.525,70,2.464,71,1.349,72,1.349,73,1.349,75,1.525,80,0.818,83,3.148,84,0.826,92,0.818,94,1.805,108,2.179,113,1.655,116,1.334,126,0.774,130,0.682,132,1.694,134,0.006,135,0.009,136,0.006,137,0.809,138,0.774,139,1.534,140,1.025,141,1.025,143,1.025,144,2.478,145,2.462,147,1.334,149,0.568,150,1.679,158,1.805,163,1.25,178,1.217,190,0.642,191,1.655,192,1.655,193,1.025,194,1.025,195,1.025,196,1.025,197,0.774,198,1.025,199,0.774,200,1.025,201,1.805,202,1.025,203,0.774,204,2.063,205,1.025,206,1.025,225,1.851,227,2.954,239,1.025,246,1.525,247,1.525,248,1.025,249,1.025,260,1.025,279,4.722,299,1.93,308,2.474,314,3.509,319,0.423,320,1.534,322,1.655,329,1.217,333,0.884,335,3.047,344,1.217,345,1.025,362,1.797,365,0.884,372,0.726,386,1.229,399,1.534,409,1.93,412,1.428,433,2.216,440,1.025,476,1.797,501,1.112,562,0.95,645,1.525,655,2.464,660,1.349,673,2.464,678,4.047,680,1.525,681,2.464,685,3.695,686,1.349,750,1.525,751,3.643,752,2.896,753,3.099,754,3.099,755,4.183,756,3.559,757,2.896,758,3.643,759,3.099,760,3.559,761,1.792,762,1.792,763,1.792,764,1.792,765,1.792,766,2.896,767,1.792,768,1.792,769,1.966,770,2.464,771,2.464,772,2.464,773,2.896,774,2.896,775,2.896,776,3.148,777,2.896,778,2.896,779,1.792,780,1.792,781,1.792,782,1.792,783,4.591,784,4.183,785,3.643,786,1.792,787,1.525,788,1.792,789,1.792,790,1.792,791,1.792,792,1.792,793,1.525,794,1.792,795,1.792,796,1.792,797,1.792,798,1.792,799,1.792,800,1.792,801,1.792,802,1.792,803,1.792,804,1.792,805,1.792,806,1.792,807,3.099,808,3.906,809,2.464,810,1.792,811,3.906,812,3.906,813,3.099,814,1.792,815,3.559,816,3.099,817,3.559,818,2.464,819,4.576,820,2.464,821,4.396,822,3.099,823,2.464,824,1.525,825,1.525,826,3.099,827,3.099,828,3.559,829,2.464,830,3.099,831,1.349,832,3.099,833,2.464,834,1.525,835,3.906,836,1.525,837,2.464,838,1.525,839,1.792,840,3.643,841,1.792,842,3.643,843,2.896,844,2.896,845,3.643,846,1.792,847,1.792,848,1.792,849,1.792,850,1.792,851,1.792,852,1.792,853,1.792,854,1.792]],["title/modules/LoginPageModule.html",[207,1.098,855,2.345]],["body/modules/LoginPageModule.html",[3,0.203,4,0.203,5,0.137,21,0.023,41,0.751,46,1.536,47,0.462,52,0.504,53,0.272,65,0.838,134,0.015,135,0.018,136,0.015,137,1.012,170,2.099,172,1.845,190,1.631,201,2.973,207,1.448,209,1.845,210,2.099,211,3.051,212,2.414,213,2.414,214,2.247,228,3.008,229,2.414,231,2.247,243,3.008,244,2.247,250,2.8,255,3.245,275,2.85,276,2.414,277,1.536,535,3.522,536,2.604,538,2.826,855,4.612,856,3.876,857,3.876,858,4.555,859,4.555]],["title/injectables/LoginService.html",[0,0.519,224,1.974]],["body/injectables/LoginService.html",[0,0.763,1,1.942,2,1.37,3,0.17,4,0.17,5,0.115,7,0.388,8,1.52,14,1.06,18,1.267,20,1.127,21,0.023,22,0.763,23,0.683,24,0.659,29,1.433,41,0.717,47,0.388,52,0.423,53,0.228,54,1.712,65,1.048,74,1.433,80,1.08,83,4.562,92,1.08,134,0.012,135,0.016,136,0.012,149,0.996,163,1.651,170,2.338,224,2.901,262,1.549,277,1.29,320,3.343,322,3.254,338,2.187,341,1.37,342,1.549,343,1.549,348,1.931,350,3.607,368,2.19,371,2.457,577,2.027,578,2.027,598,2.901,599,2.187,600,2.027,601,2.027,753,4.844,769,2.598,770,4.317,771,4.317,772,4.317,776,3.818,831,3.818,860,3.255,861,6.063,862,3.826,863,3.826,864,3.826,865,5.074,866,3.826,867,4.317,868,5.074,869,5.074,870,5.074,871,3.826,872,3.826,873,3.826,874,3.826]],["title/modules/MemberRoutingModule.html",[207,1.098,875,2.599]],["body/modules/MemberRoutingModule.html",[3,0.215,4,0.215,5,0.145,21,0.023,41,0.73,47,0.489,52,0.533,53,0.288,65,0.887,134,0.015,135,0.019,136,0.015,167,3.274,168,2.378,172,1.952,209,1.952,211,2.378,231,2.378,243,3.115,244,2.378,250,2.9,271,4.102,272,3.361,273,3.274,274,3.274,275,2.923,276,2.554,277,1.983,282,5.002,284,3.648,538,2.991,875,4.424,876,4.821,877,4.821,878,4.821]],["title/components/RegisterPage.html",[137,0.767,203,1.491]],["body/components/RegisterPage.html",[3,0.116,4,0.116,5,0.079,7,0.265,8,1.163,14,0.811,16,2.929,18,1.24,20,0.863,21,0.024,22,0.77,23,0.466,24,0.504,25,2.647,28,2.829,29,1.446,31,0.995,33,1.789,35,2.921,36,2.921,38,2.361,41,0.512,44,0.831,46,0.882,47,0.265,50,2.714,51,3.479,52,0.289,53,0.156,54,1.307,61,1.386,65,0.481,68,2.921,71,2.921,72,2.921,73,1.968,76,1.968,80,1.096,84,1.205,94,1.675,111,2.225,113,1.495,132,1.572,134,0.008,135,0.012,136,0.008,137,1.029,138,1.129,139,2.057,140,1.495,141,1.495,143,1.495,144,2.81,145,2.632,147,1.789,149,0.762,150,2.133,158,2.211,163,1.675,164,2.921,178,1.776,190,0.937,191,2.219,192,2.219,193,1.495,194,1.495,195,1.495,196,1.495,197,1.129,198,1.495,199,1.129,200,1.495,201,1.129,202,1.495,203,2.211,204,3.173,205,1.495,206,1.495,279,2.921,295,2.647,320,2.057,335,1.622,350,2.219,372,1.059,399,2.057,409,2.453,412,1.915,433,2.714,501,1.622,660,1.968,678,2.921,685,3.484,686,1.968,754,3.939,759,3.303,760,4.359,769,1.776,776,2.921,807,2.225,808,3.939,809,2.225,811,4.359,812,4.359,813,3.939,815,4.359,816,3.939,817,4.359,818,3.303,819,4.879,820,3.303,821,5.051,822,2.225,823,2.225,824,2.225,825,2.225,826,3.303,827,3.303,828,3.939,829,3.303,830,3.303,831,1.968,832,2.225,833,3.303,834,2.225,835,2.225,836,2.225,837,2.225,838,2.225,879,2.225,880,4.63,881,3.882,882,4.63,883,5.123,884,3.882,885,2.615,886,3.882,887,2.615,888,2.615,889,2.615,890,3.882,891,2.615,892,2.615,893,2.615,894,3.882,895,2.615,896,2.615,897,2.615,898,3.882,899,3.303,900,2.615,901,3.882,902,2.615,903,2.615,904,3.882,905,2.615,906,2.615,907,2.615,908,2.615]],["title/modules/RegisterPageModule.html",[207,1.098,909,2.345]],["body/modules/RegisterPageModule.html",[3,0.203,4,0.203,5,0.137,21,0.023,41,0.751,46,1.536,47,0.462,52,0.504,53,0.272,65,0.838,134,0.015,135,0.018,136,0.015,137,1.012,170,2.099,172,1.845,190,1.631,203,2.973,207,1.448,209,1.845,210,2.099,211,3.051,212,2.414,213,2.414,214,2.247,228,3.008,229,2.414,231,2.247,243,3.008,244,2.247,250,2.8,255,3.245,275,2.85,276,2.414,277,1.536,535,3.522,536,2.604,538,2.826,909,4.612,910,3.876,911,3.876,912,4.555,913,4.555]],["title/classes/Response.html",[53,0.206,127,1.315]],["body/classes/Response.html",[0,0.641,1,1.494,3,0.132,4,0.132,5,0.09,7,0.302,14,0.891,16,2.439,18,1.254,21,0.024,22,0.641,23,0.742,25,1.701,41,0.712,46,1.004,47,0.302,52,0.552,53,0.298,54,1.628,65,0.785,74,1.694,79,1.278,92,1.204,116,2.298,127,2.073,132,1.205,134,0.01,135,0.014,136,0.01,146,1.847,149,0.837,153,2.647,155,2.897,158,1.284,260,1.701,262,1.205,295,1.701,299,1.577,302,2.021,305,1.847,306,2.239,307,2.021,308,2.021,309,2.897,310,3.753,311,2.239,314,3.386,315,2.239,316,3.386,318,2.239,319,1.623,320,2.642,322,2.439,323,2.239,327,2.239,329,2.897,330,2.239,332,2.239,333,2.104,335,2.647,338,1.701,339,1.847,340,2.647,341,1.066,342,1.205,343,1.205,344,2.021,345,1.701,346,2.239,347,2.239,348,1.624,349,1.847,350,2.851,351,2.021,352,2.239,353,2.239,354,3.753,355,3.753,356,3.753,357,3.753,358,3.753,359,3.753,360,2.239,361,4.099,362,1.847,363,4.099,364,2.239,365,1.468,366,2.239,367,2.239,368,1.841,369,2.239,370,2.239,371,1.284,372,1.205,373,1.847,374,1.847,375,1.847,376,1.847,377,1.371,378,2.239,379,2.239,380,2.239,381,2.239,382,3.21,383,3.21,384,2.239,385,2.239,386,1.004,387,2.239,388,2.239,389,2.239,390,2.239,391,2.239,392,2.239,393,2.239,394,2.239,395,2.239,397,1.701,914,2.976,915,2.976,916,2.976,917,2.976,918,2.976,919,2.976]],["title/injectables/SessionService.html",[0,0.519,225,1.237]],["body/injectables/SessionService.html",[0,0.654,2,1.095,3,0.136,4,0.136,5,0.092,7,0.31,14,1.058,18,1.449,20,1.295,21,0.024,22,0.876,23,0.608,24,0.756,29,1.645,38,2.685,41,0.338,47,0.31,52,0.338,53,0.183,54,1.937,65,1.015,74,1.645,76,3.274,80,1.829,94,1.877,108,4.944,134,0.01,135,0.014,136,0.01,149,0.854,163,1.877,225,1.558,299,2.922,307,3.438,319,1.376,333,3.364,793,5.417,920,2.602,921,5.063,922,5.063,923,5.063,924,5.063,925,5.063,926,5.063,927,4.35,928,5.063,929,5.063,930,4.35,931,3.059,932,3.059,933,3.059,934,3.059,935,3.059,936,3.059,937,3.059,938,3.059,939,3.059,940,3.059,941,3.059,942,3.059,943,3.059,944,3.059,945,3.059,946,3.059,947,3.059,948,3.059,949,3.059,950,3.059,951,3.059,952,3.059,953,3.059,954,3.059,955,3.059,956,3.059,957,4.35,958,4.35,959,3.059,960,5.827,961,3.059,962,5.515,963,3.059,964,4.35,965,3.059,966,3.059,967,3.059,968,3.059,969,3.059,970,3.059,971,3.059,972,3.059,973,3.059,974,4.35,975,3.059,976,3.059,977,3.059,978,3.059,979,4.35,980,3.059,981,3.059]],["title/interfaces/Storehouses.html",[498,1.491,539,0.975]],["body/interfaces/Storehouses.html",[3,0.23,4,0.23,5,0.156,7,0.525,21,0.022,23,0.736,24,0.877,79,1.958,86,2.738,103,3.115,134,0.017,135,0.02,136,0.017,149,1.203,319,1.544,498,2.647,539,1.461,540,2.384,982,4.401]],["title/injectables/StorehousesService.html",[0,0.519,226,1.974]],["body/injectables/StorehousesService.html",[0,0.681,1,0.97,2,1.16,3,0.144,4,0.144,5,0.097,7,0.329,8,1.357,14,1.091,18,1.289,20,1.257,21,0.024,22,0.85,23,0.715,24,0.734,29,1.681,41,0.682,47,0.329,52,0.358,53,0.193,65,1.165,74,1.741,92,0.914,103,2.407,126,2.254,130,1.988,134,0.01,135,0.014,136,0.01,226,2.589,262,1.312,277,2.008,319,1.233,338,1.851,341,2.209,342,1.312,343,1.312,348,1.724,368,2.441,371,2.254,372,2.115,377,2.087,386,1.762,440,1.851,498,2.833,561,2.589,562,2.4,564,3.241,577,1.716,578,2.768,579,2.009,581,1.851,584,1.851,598,1.851,599,1.851,600,1.716,601,1.716,602,1.851,749,2.437,983,2.755,984,5.223,985,4.529,986,5.657,987,5.657,988,4.529,989,3.239,990,4.529,991,3.239,992,4.529,993,3.239,994,4.529,995,3.239,996,3.239,997,4.529,998,3.239,999,4.529,1000,5.223,1001,3.239,1002,3.239,1003,4.529,1004,3.853,1005,3.239,1006,3.239,1007,3.239]],["title/classes/User.html",[53,0.206,333,1.704]],["body/classes/User.html",[0,0.65,1,1.509,3,0.135,4,0.135,5,0.091,7,0.308,14,1.052,16,2.471,18,1.052,20,0.673,21,0.024,22,0.907,23,0.659,24,0.393,25,1.732,41,0.715,46,1.022,47,0.308,52,0.557,53,0.301,54,1.639,65,0.795,74,1.704,79,0.908,92,1.22,116,2.321,127,1.917,132,1.227,134,0.01,135,0.014,136,0.01,146,1.88,149,0.848,153,2.682,155,2.935,158,1.308,260,1.732,262,1.227,295,1.732,299,1.606,302,2.058,305,1.88,306,2.281,307,2.058,308,2.058,309,2.935,310,3.791,311,2.281,314,3.421,315,2.281,316,3.421,318,2.281,319,1.635,320,2.669,322,2.471,323,2.281,327,2.281,329,2.935,330,2.281,332,2.281,333,2.485,335,2.682,338,1.732,339,1.88,340,2.682,341,1.085,342,1.227,343,1.227,344,2.058,345,1.732,346,2.281,347,2.281,348,1.645,349,1.88,350,3.552,351,2.935,352,2.281,353,2.281,354,2.281,355,2.281,356,2.281,357,2.281,358,2.281,359,2.281,360,2.281,361,4.133,362,1.88,363,4.133,364,2.281,365,1.495,366,2.281,367,2.281,368,1.865,369,2.281,370,2.281,371,1.308,372,1.227,373,1.88,374,1.88,375,1.88,376,1.88,377,1.396,378,2.281,379,2.281,380,2.281,381,2.281,382,3.252,383,3.252,384,2.281,385,2.281,386,1.022,387,2.281,388,2.281,389,2.281,390,2.281,391,2.281,392,2.281,393,2.281,394,2.281,395,2.281,397,1.732,1008,4.322,1009,3.031]],["title/injectables/UserApiService.html",[0,0.519,227,1.974]],["body/injectables/UserApiService.html",[0,0.517,2,0.799,3,0.099,4,0.099,5,0.067,7,0.226,8,1.031,14,0.719,18,1.33,20,1.352,21,0.024,22,0.914,23,0.697,24,0.79,29,1.718,41,0.642,47,0.226,52,0.247,53,0.133,54,1.186,65,1.14,74,1.748,80,0.971,84,1.027,92,0.971,94,0.962,113,1.275,114,1.678,126,0.962,130,0.849,132,0.903,134,0.007,135,0.011,136,0.007,149,0.675,163,1.485,224,3.214,225,1.932,227,1.967,262,0.903,263,1.678,277,2.089,316,2.337,319,0.992,320,1.181,322,1.275,333,3.001,341,1.692,342,0.903,343,0.903,345,1.275,348,1.31,350,1.275,368,2.713,371,2.505,372,2.184,377,2.675,386,0.752,561,1.967,562,3.076,577,1.181,578,2.858,581,1.275,584,2.402,602,1.275,717,1.678,726,1.897,749,1.678,756,2.927,787,1.897,867,1.897,899,1.897,1004,1.897,1010,5.477,1011,1.897,1012,4.201,1013,3.441,1014,3.441,1015,3.441,1016,4.724,1017,3.441,1018,3.441,1019,3.441,1020,3.441,1021,3.441,1022,3.441,1023,3.441,1024,2.23,1025,3.441,1026,2.23,1027,3.441,1028,2.23,1029,3.441,1030,2.23,1031,2.23,1032,3.441,1033,2.23,1034,4.201,1035,3.441,1036,4.724,1037,2.23,1038,3.441,1039,2.23,1040,3.441,1041,4.724,1042,2.23,1043,3.441,1044,2.23,1045,3.441,1046,4.201,1047,2.23,1048,2.23,1049,2.23,1050,1.897,1051,1.897,1052,5.104,1053,2.23,1054,2.23,1055,2.23,1056,3.441,1057,2.23,1058,2.23,1059,2.23,1060,2.23,1061,3.441,1062,2.23,1063,2.23,1064,2.23,1065,2.23,1066,2.23,1067,3.441,1068,2.23,1069,2.23,1070,3.441,1071,3.441,1072,2.23,1073,2.23,1074,2.23,1075,2.23,1076,2.23,1077,2.23,1078,2.23,1079,2.23,1080,2.23,1081,2.23,1082,2.23,1083,2.23,1084,2.23,1085,3.441,1086,3.441,1087,2.23]],["title/coverage.html",[1088,4.029]],["body/coverage.html",[0,1.026,1,1.006,5,0.101,6,3.496,17,1.36,21,0.023,23,0.403,31,1.279,42,1.92,44,1.067,51,2.281,53,0.36,92,0.948,96,1.36,102,1.45,105,1.45,127,1.279,134,0.011,135,0.015,136,0.011,137,1.386,138,1.45,142,2.858,158,1.45,197,1.45,199,1.45,201,1.45,203,1.45,221,1.548,222,1.548,223,1.548,224,1.92,225,1.203,226,1.92,227,1.92,272,1.78,293,2.858,294,2.858,305,3.566,333,1.657,339,2.084,340,2.084,341,1.203,349,2.084,396,1.92,398,3.566,400,1.78,415,3.969,427,1.92,491,1.92,498,1.45,500,1.657,539,1.84,541,2.858,546,2.858,585,2.858,586,2.858,607,2.858,608,2.858,641,2.858,693,2.281,694,3.496,695,2.858,709,2.858,710,2.858,711,2.858,719,2.858,741,6.204,750,2.858,860,2.858,879,2.858,920,2.858,982,2.858,983,2.858,1010,2.858,1011,2.858,1088,2.858,1089,3.359,1090,3.359,1091,3.359,1092,5.747,1093,6.519,1094,6.033,1095,5.326,1096,5.747,1097,4.646,1098,3.359,1099,6.033,1100,3.359,1101,5.326,1102,4.531,1103,4.531,1104,3.359,1105,3.359,1106,2.858,1107,3.953,1108,2.858,1109,3.359,1110,3.359]],["title/dependencies.html",[210,1.917,1111,2.874]],["body/dependencies.html",[5,0.121,21,0.023,46,1.361,47,0.41,63,3.037,134,0.013,135,0.017,136,0.013,156,3.037,157,3.037,172,1.635,173,3.306,174,3.037,176,3.037,210,1.86,240,2.307,241,2.307,244,1.991,252,4.471,253,3.955,260,2.307,263,3.955,345,3.004,348,1.536,414,2.504,536,2.307,600,2.139,601,2.785,662,3.434,1050,3.434,1051,3.434,1112,6.795,1113,4.036,1114,4.036,1115,6.419,1116,4.036,1117,4.036,1118,4.036,1119,5.256,1120,4.036,1121,4.036,1122,4.036,1123,4.036,1124,4.036,1125,4.036,1126,6.931,1127,4.036,1128,6.931,1129,4.036,1130,4.036,1131,4.036,1132,4.036,1133,4.036,1134,4.036,1135,4.036,1136,4.036,1137,4.036,1138,4.036,1139,4.036,1140,4.036,1141,4.036,1142,4.036,1143,4.036,1144,4.036,1145,4.036,1146,4.036,1147,4.036,1148,4.036,1149,5.256,1150,4.036,1151,4.036,1152,4.036]],["title/index.html",[7,0.351,1153,2.938]],["body/index.html",[1,1.723,2,1.4,17,2.33,21,0.023,42,3.289,44,1.828,134,0.012,135,0.016,136,0.012,138,2.87,139,2.071,170,1.801,190,1.4,197,2.483,199,2.483,201,2.483,203,2.483,207,1.242,208,4.944,209,1.583,210,1.801,211,1.928,212,2.071,213,2.071,214,1.928,215,3.326,216,3.326,217,3.326,218,3.326,219,3.326,220,3.57,221,2.651,222,2.651,223,2.651,224,3.289,225,2.061,226,3.289,227,3.289,228,2.727,229,2.071,275,1.801,397,2.234,531,4.152,532,3.326,533,3.326,540,1.801,687,4.152,688,3.326,689,3.326,703,4.152,704,3.326,705,3.326,855,4.152,856,3.326,857,3.326,909,4.152,910,3.326,911,3.326,1153,3.326,1154,5.147,1155,3.909,1156,3.909,1157,3.909,1158,3.909]],["title/modules.html",[209,1.918]],["body/modules.html",[21,0.019,134,0.016,135,0.019,136,0.016,208,3.477,209,2.073,220,3.177,253,5.255,531,3.477,687,3.477,703,3.477,855,3.477,875,3.853,909,3.477,1159,6.983,1160,6.983,1161,7.112,1162,6.096,1163,6.096]],["title/routes.html",[275,2.182]],["body/routes.html",[21,0.021,134,0.018,135,0.021,136,0.018,275,2.616]],["title/miscellaneous/variables.html",[1164,2.445,1165,3.539]],["body/miscellaneous/variables.html",[6,3.452,7,0.466,21,0.023,23,0.828,51,3.872,80,1.921,84,2.114,94,1.98,134,0.015,135,0.018,136,0.015,163,2.936,295,2.622,305,2.846,309,3.115,319,1.532,339,3.537,340,3.537,341,2.042,349,3.537,769,3.872,1102,3.903,1103,5.521,1106,3.903,1107,5.521,1108,3.903,1164,3.903,1165,3.903,1166,4.587,1167,6.204,1168,4.587,1169,4.587,1170,4.587,1171,4.587,1172,4.587,1173,4.587,1174,5.701]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":741,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["0.0.3",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["0.8em",{"_index":839,"title":{},"body":{"components/LoginPage.html":{}}}],["0.9em",{"_index":824,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["0/1",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":815,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["1",{"_index":63,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":895,"title":{},"body":{"components/RegisterPage.html":{}}}],["100",{"_index":843,"title":{},"body":{"components/LoginPage.html":{}}}],["1000",{"_index":59,"title":{},"body":{"injectables/AlertService.html":{}}}],["10px",{"_index":825,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["12",{"_index":1156,"title":{},"body":{"index.html":{}}}],["16px",{"_index":833,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["19",{"_index":1158,"title":{},"body":{"index.html":{}}}],["1px",{"_index":826,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["2",{"_index":64,"title":{},"body":{"injectables/AlertService.html":{}}}],["2.0.2",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":812,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["240px",{"_index":853,"title":{},"body":{"components/LoginPage.html":{}}}],["3.1.9",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":850,"title":{},"body":{"components/LoginPage.html":{}}}],["30px",{"_index":817,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["35vh",{"_index":682,"title":{},"body":{"components/DashboardPage.html":{}}}],["399f8b",{"_index":814,"title":{},"body":{"components/LoginPage.html":{}}}],["4.0.0",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["488aff",{"_index":847,"title":{},"body":{"components/LoginPage.html":{}}}],["5",{"_index":1157,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["509287",{"_index":908,"title":{},"body":{"components/RegisterPage.html":{}}}],["50px",{"_index":810,"title":{},"body":{"components/LoginPage.html":{}}}],["51cfb1",{"_index":838,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["56ca96",{"_index":686,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["6",{"_index":1155,"title":{},"body":{"index.html":{}}}],["6.0.1",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["7.1.4",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":854,"title":{},"body":{"components/LoginPage.html":{}}}],["8",{"_index":1154,"title":{},"body":{"index.html":{}}}],["8.0.1",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["_authorizationuser",{"_index":921,"title":{},"body":{"injectables/SessionService.html":{}}}],["_currenttheme",{"_index":922,"title":{},"body":{"injectables/SessionService.html":{}}}],["_currentuser",{"_index":923,"title":{},"body":{"injectables/SessionService.html":{}}}],["_isadmin",{"_index":924,"title":{},"body":{"injectables/SessionService.html":{}}}],["_role",{"_index":925,"title":{},"body":{"injectables/SessionService.html":{}}}],["access_token",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["accessors",{"_index":927,"title":{},"body":{"injectables/SessionService.html":{}}}],["account",{"_index":776,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{}}}],["active",{"_index":1056,"title":{},"body":{"injectables/UserApiService.html":{}}}],["actual_component",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["add",{"_index":579,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"components/DashboardPage.html":{},"injectables/StorehousesService.html":{}}}],["addnewadminuser",{"_index":1013,"title":{},"body":{"injectables/UserApiService.html":{}}}],["addnewadminuser(user",{"_index":1023,"title":{},"body":{"injectables/UserApiService.html":{}}}],["addnewbookstand",{"_index":547,"title":{},"body":{"injectables/BookstandService.html":{}}}],["addnewbookstand(bookstand",{"_index":553,"title":{},"body":{"injectables/BookstandService.html":{}}}],["addnewbrand",{"_index":587,"title":{},"body":{"injectables/BrandService.html":{}}}],["addnewbrand(brand",{"_index":591,"title":{},"body":{"injectables/BrandService.html":{}}}],["addnewcategory",{"_index":609,"title":{},"body":{"injectables/CategoryService.html":{}}}],["addnewcategory(category",{"_index":614,"title":{},"body":{"injectables/CategoryService.html":{}}}],["addnewitem",{"_index":720,"title":{},"body":{"injectables/ItemsService.html":{}}}],["addnewitem(item",{"_index":728,"title":{},"body":{"injectables/ItemsService.html":{}}}],["addnewstorehouses",{"_index":984,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["addnewstorehouses(storehouses",{"_index":990,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["addnewuser",{"_index":1014,"title":{},"body":{"injectables/UserApiService.html":{}}}],["addnewuser(user",{"_index":1025,"title":{},"body":{"injectables/UserApiService.html":{}}}],["admin",{"_index":1066,"title":{},"body":{"injectables/UserApiService.html":{}}}],["advanced",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["again",{"_index":868,"title":{},"body":{"injectables/LoginService.html":{}}}],["alert",{"_index":51,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alert.notify",{"_index":55,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert.present",{"_index":898,"title":{},"body":{"components/RegisterPage.html":{}}}],["alert.service",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{}}}],["alertcontroller",{"_index":16,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["alertct",{"_index":66,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["alertct.present",{"_index":75,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["alertctrl",{"_index":25,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["alertservice",{"_index":1,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsNewValueHandlerService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["align",{"_index":35,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["android",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["angular/compiler/src/core",{"_index":691,"title":{},"body":{"modules/DashboardPageModule.html":{}}}],["angular/core",{"_index":47,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["angular/core/testing",{"_index":781,"title":{},"body":{"components/LoginPage.html":{}}}],["angular/forms",{"_index":536,"title":{},"body":{"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{}}}],["api",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["api.service",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPage.html":{}}}],["api.service.ts",{"_index":1011,"title":{},"body":{"injectables/UserApiService.html":{},"coverage.html":{}}}],["api.service.ts:108",{"_index":1026,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:117",{"_index":1028,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:127",{"_index":1042,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:13",{"_index":1047,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:14",{"_index":1022,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:22",{"_index":1030,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:32",{"_index":1044,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:42",{"_index":1039,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:52",{"_index":1037,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:65",{"_index":1031,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:76",{"_index":1033,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:93",{"_index":1024,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api_url",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url}/register",{"_index":872,"title":{},"body":{"injectables/LoginService.html":{}}}],["api_url}/users",{"_index":1045,"title":{},"body":{"injectables/UserApiService.html":{}}}],["app",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["app.component",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":138,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["application/json",{"_index":578,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["application/x",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/ItemsService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["appmodule",{"_index":208,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppages",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardPage.html":{}}}],["approutingmodule",{"_index":220,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["array",{"_index":1001,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["async",{"_index":9,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["auth",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["auth(username",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["authentication.service",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authenticationservice",{"_index":158,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{},"coverage.html":{}}}],["authenticationstate",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["authguardservice",{"_index":272,"title":{"injectables/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/MemberRoutingModule.html":{},"coverage.html":{}}}],["author",{"_index":676,"title":{},"body":{"components/DashboardPage.html":{}}}],["authorization",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["authorizationuser",{"_index":928,"title":{},"body":{"injectables/SessionService.html":{}}}],["authorizationuser(value",{"_index":966,"title":{},"body":{"injectables/SessionService.html":{}}}],["authservice",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["autocenterjwtclientid",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1163,"title":{},"body":{"modules.html":{}}}],["await",{"_index":67,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["axios",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["axios.delete(path",{"_index":581,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["axios.get(path",{"_index":561,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["axios.patch(path",{"_index":1082,"title":{},"body":{"injectables/UserApiService.html":{}}}],["axios.post(path",{"_index":577,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["axios.put(path",{"_index":584,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["axiospromise",{"_index":602,"title":{},"body":{"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["background",{"_index":685,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["bad_credentials",{"_index":777,"title":{},"body":{"components/LoginPage.html":{}}}],["bar",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["barcode",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/MemberRoutingModule.html":{}}}],["barcode'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["barcode.page",{"_index":537,"title":{},"body":{"modules/BarcodePageModule.html":{}}}],["barcode.page.html",{"_index":411,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["barcode.page.scss",{"_index":413,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["barcode/barcode.module#barcodepagemodule",{"_index":878,"title":{},"body":{"modules/MemberRoutingModule.html":{}}}],["barcodedata",{"_index":396,"title":{"classes/BarcodeData.html":{}},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{}}}],["barcodepage",{"_index":44,"title":{"components/BarcodePage.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["barcodepagemodule",{"_index":531,"title":{"modules/BarcodePageModule.html":{}},"body":{"modules/BarcodePageModule.html":{},"index.html":{},"modules.html":{}}}],["barcodescanner",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"dependencies.html":{}}}],["barcodescanneroptions",{"_index":410,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["basic",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["battery",{"_index":894,"title":{},"body":{"components/RegisterPage.html":{}}}],["bearer",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["behaviorsubject",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["behaviorsubject(false",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["beta.21",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["beta.23",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["blank",{"_index":698,"title":{},"body":{"components/HomePage.html":{}}}],["body",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["bookstand",{"_index":102,"title":{"interfaces/Bookstand.html":{}},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"coverage.html":{}}}],["bookstand.id",{"_index":443,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["bookstand.numberbookstand",{"_index":569,"title":{},"body":{"injectables/BookstandService.html":{}}}],["bookstand.storehouses.location",{"_index":442,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["bookstand.storehouses[0].id",{"_index":583,"title":{},"body":{"injectables/BookstandService.html":{}}}],["bookstand.storehouses_location",{"_index":570,"title":{},"body":{"injectables/BookstandService.html":{}}}],["bookstands",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["bookstands/delete/${bookstand.id",{"_index":580,"title":{},"body":{"injectables/BookstandService.html":{}}}],["bookstands/new",{"_index":568,"title":{},"body":{"injectables/BookstandService.html":{}}}],["bookstands/update/${bookstand.id",{"_index":582,"title":{},"body":{"injectables/BookstandService.html":{}}}],["bookstandservice",{"_index":221,"title":{"injectables/BookstandService.html":{}},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{},"index.html":{}}}],["bookstandslist",{"_index":423,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["boolean",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"interfaces/IBarcode.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["border",{"_index":819,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["bottom",{"_index":811,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["box",{"_index":813,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["brand",{"_index":105,"title":{"interfaces/Brand.html":{}},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{}}}],["brand.id",{"_index":455,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["brand.name",{"_index":454,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BrandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["brand/delete/${brand.id",{"_index":605,"title":{},"body":{"injectables/BrandService.html":{}}}],["brand/update/${brand.id",{"_index":606,"title":{},"body":{"injectables/BrandService.html":{}}}],["brandname",{"_index":604,"title":{},"body":{"injectables/BrandService.html":{}}}],["brands",{"_index":104,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BrandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["brands/new",{"_index":603,"title":{},"body":{"injectables/BrandService.html":{}}}],["brandservice",{"_index":222,"title":{"injectables/BrandService.html":{}},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BrandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{},"index.html":{}}}],["brandslist",{"_index":420,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["break",{"_index":1068,"title":{},"body":{"injectables/UserApiService.html":{}}}],["browse",{"_index":1161,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":837,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["btoa(token_auth_username",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["bugs",{"_index":672,"title":{},"body":{"components/DashboardPage.html":{}}}],["button",{"_index":848,"title":{},"body":{"components/LoginPage.html":{}}}],["buttons",{"_index":72,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["canactivate",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/MemberRoutingModule.html":{}}}],["cancel",{"_index":107,"title":{},"body":{"injectables/AlertService.html":{}}}],["cancelled",{"_index":401,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/IBarcode.html":{}}}],["card",{"_index":677,"title":{},"body":{"components/DashboardPage.html":{}}}],["catch",{"_index":1073,"title":{},"body":{"injectables/UserApiService.html":{}}}],["catch((error",{"_index":130,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["catch(err",{"_index":473,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["categories",{"_index":421,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["categorieslist",{"_index":422,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["category",{"_index":96,"title":{"interfaces/Category.html":{}},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{},"coverage.html":{}}}],["category.id",{"_index":449,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["category.namecategory",{"_index":448,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["category/delete/${category.id",{"_index":624,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category/new",{"_index":623,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category/update/${category.id",{"_index":625,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categoryservice",{"_index":223,"title":{"injectables/CategoryService.html":{}},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{},"index.html":{}}}],["center",{"_index":818,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["checked",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{}}}],["checktoken",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["class",{"_index":53,"title":{"classes/BarcodeData.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"classes/Response.html":{},"classes/User.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["classdropdownme",{"_index":427,"title":{"classes/ClassDropdownMe.html":{}},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{}}}],["classes",{"_index":397,"title":{},"body":{"classes/BarcodeData.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"classes/Response.html":{},"classes/User.html":{},"index.html":{}}}],["classitems",{"_index":491,"title":{"classes/ClassItems.html":{}},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{}}}],["click",{"_index":658,"title":{},"body":{"components/DashboardPage.html":{}}}],["close",{"_index":62,"title":{},"body":{"injectables/AlertService.html":{}}}],["cluster_appmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_barcodepagemodule",{"_index":532,"title":{},"body":{"modules/BarcodePageModule.html":{},"index.html":{}}}],["cluster_barcodepagemodule_declarations",{"_index":533,"title":{},"body":{"modules/BarcodePageModule.html":{},"index.html":{}}}],["cluster_dashboardpagemodule",{"_index":688,"title":{},"body":{"modules/DashboardPageModule.html":{},"index.html":{}}}],["cluster_dashboardpagemodule_declarations",{"_index":689,"title":{},"body":{"modules/DashboardPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":704,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":705,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":856,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":857,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule",{"_index":910,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":911,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["col",{"_index":832,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["color",{"_index":835,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["commonmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{}}}],["compat",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":137,"title":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}},"body":{"components/AppComponent.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["components",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["connect",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["connect.ts",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log('body",{"_index":575,"title":{},"body":{"injectables/BookstandService.html":{}}}],["console.log('bookstand",{"_index":566,"title":{},"body":{"injectables/BookstandService.html":{}}}],["console.log('brand",{"_index":563,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{}}}],["console.log('category",{"_index":621,"title":{},"body":{"injectables/CategoryService.html":{}}}],["console.log('confirm",{"_index":112,"title":{},"body":{"injectables/AlertService.html":{}}}],["console.log('error",{"_index":1087,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log('item",{"_index":739,"title":{},"body":{"injectables/ItemsService.html":{}}}],["console.log('response",{"_index":1004,"title":{},"body":{"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["console.log('storehouses",{"_index":1000,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["console.log('this.storage",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["console.log(body",{"_index":576,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/ItemsService.html":{}}}],["console.log(bookstand",{"_index":567,"title":{},"body":{"injectables/BookstandService.html":{}}}],["console.log(err",{"_index":1077,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log(error",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["console.log(localstorage",{"_index":956,"title":{},"body":{"injectables/SessionService.html":{}}}],["console.log(path",{"_index":1080,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log(response",{"_index":749,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["console.log(response.data",{"_index":999,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["console.log(this.sessionservice.currentuser",{"_index":792,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(this.storage",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["console.log(updateuserrequest",{"_index":1081,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log(user",{"_index":1061,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log(userlist",{"_index":1060,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log(userrole",{"_index":1064,"title":{},"body":{"injectables/UserApiService.html":{}}}],["const",{"_index":65,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"modules/DashboardPageModule.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["constructor(alertctrl",{"_index":15,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(alertservice",{"_index":862,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(auth",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(authservice",{"_index":645,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{}}}],["constructor(barcodepage",{"_index":713,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{}}}],["constructor(barcodescanner",{"_index":506,"title":{},"body":{"components/BarcodePage.html":{}}}],["constructor(id",{"_index":630,"title":{},"body":{"classes/ClassItems.html":{}}}],["constructor(name",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/ClassDropdownMe.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["constructor(nav",{"_index":885,"title":{},"body":{"components/RegisterPage.html":{}}}],["constructor(platform",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":651,"title":{},"body":{"components/DashboardPage.html":{}}}],["constructor(public",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(sessionservice",{"_index":726,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/UserApiService.html":{}}}],["constructor(storage",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(storehousesservice",{"_index":551,"title":{},"body":{"injectables/BookstandService.html":{}}}],["constructor(text",{"_index":403,"title":{},"body":{"classes/BarcodeData.html":{}}}],["content",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["cordova",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["corner",{"_index":661,"title":{},"body":{"components/DashboardPage.html":{}}}],["cors",{"_index":1083,"title":{},"body":{"injectables/UserApiService.html":{}}}],["coverage",{"_index":1088,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":673,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{}}}],["createaccount",{"_index":755,"title":{},"body":{"components/LoginPage.html":{}}}],["created",{"_index":903,"title":{},"body":{"components/RegisterPage.html":{}}}],["createsuccess",{"_index":882,"title":{},"body":{"components/RegisterPage.html":{}}}],["creating",{"_index":906,"title":{},"body":{"components/RegisterPage.html":{}}}],["credentials",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["crypto",{"_index":600,"title":{},"body":{"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/StorehousesService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":599,"title":{},"body":{"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/StorehousesService.html":{}}}],["cssclass",{"_index":109,"title":{},"body":{"injectables/AlertService.html":{}}}],["currenttheme",{"_index":929,"title":{},"body":{"injectables/SessionService.html":{}}}],["currenttheme(value",{"_index":975,"title":{},"body":{"injectables/SessionService.html":{}}}],["currentuser",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"classes/User.html":{}}}],["currentuser(value",{"_index":961,"title":{},"body":{"injectables/SessionService.html":{}}}],["custom_elements_schema",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardPageModule.html":{}}}],["danger",{"_index":802,"title":{},"body":{"components/LoginPage.html":{}}}],["dashboard",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardPage.html":{},"modules/MemberRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["dashboard.page",{"_index":692,"title":{},"body":{"modules/DashboardPageModule.html":{}}}],["dashboard.page.html",{"_index":643,"title":{},"body":{"components/DashboardPage.html":{}}}],["dashboard.page.scss",{"_index":642,"title":{},"body":{"components/DashboardPage.html":{}}}],["dashboard/dashboard.module#dashboardpagemodule",{"_index":877,"title":{},"body":{"modules/MemberRoutingModule.html":{}}}],["dashboardpage",{"_index":197,"title":{"components/DashboardPage.html":{}},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["dashboardpagemodule",{"_index":687,"title":{"modules/DashboardPageModule.html":{}},"body":{"modules/DashboardPageModule.html":{},"index.html":{},"modules.html":{}}}],["data",{"_index":113,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/UserApiService.html":{}}}],["data.newtotalityofitem",{"_index":119,"title":{},"body":{"injectables/AlertService.html":{}}}],["date",{"_index":1076,"title":{},"body":{"injectables/UserApiService.html":{}}}],["debugger",{"_index":114,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{},"injectables/UserApiService.html":{}}}],["declarations",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["declare",{"_index":49,"title":{},"body":{"injectables/AlertService.html":{}}}],["default",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["deletebookstand",{"_index":548,"title":{},"body":{"injectables/BookstandService.html":{}}}],["deletebookstand(bookstand",{"_index":555,"title":{},"body":{"injectables/BookstandService.html":{}}}],["deletebrand",{"_index":588,"title":{},"body":{"injectables/BrandService.html":{}}}],["deletebrand(brand",{"_index":593,"title":{},"body":{"injectables/BrandService.html":{}}}],["deletecategory",{"_index":610,"title":{},"body":{"injectables/CategoryService.html":{}}}],["deletecategory(category",{"_index":616,"title":{},"body":{"injectables/CategoryService.html":{}}}],["deleteitem",{"_index":721,"title":{},"body":{"injectables/ItemsService.html":{}}}],["deleteitem(item",{"_index":730,"title":{},"body":{"injectables/ItemsService.html":{}}}],["deletestorehouse",{"_index":985,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["deletestorehouse(storehouses",{"_index":992,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["deleteuser",{"_index":1015,"title":{},"body":{"injectables/UserApiService.html":{}}}],["deleteuser(user",{"_index":1027,"title":{},"body":{"injectables/UserApiService.html":{}}}],["dependencies",{"_index":210,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["device",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["dfdfdf",{"_index":846,"title":{},"body":{"components/LoginPage.html":{}}}],["directive",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["disabled",{"_index":83,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{}}}],["dismiss",{"_index":897,"title":{},"body":{"components/RegisterPage.html":{}}}],["docs",{"_index":702,"title":{},"body":{"components/HomePage.html":{}}}],["documentation",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["done",{"_index":668,"title":{},"body":{"components/DashboardPage.html":{}}}],["dropdown",{"_index":424,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["dropdownbookstand",{"_index":693,"title":{"interfaces/DropDownBookstand.html":{}},"body":{"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"coverage.html":{}}}],["dropdowninterfacebookstand",{"_index":426,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["dropdowninterfacebrand",{"_index":429,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["dropdowninterfacecategories",{"_index":428,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["dropdownme",{"_index":500,"title":{"interfaces/DropDownMe.html":{}},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"coverage.html":{}}}],["during",{"_index":489,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["dwojki",{"_index":572,"title":{},"body":{"injectables/BookstandService.html":{}}}],["dynamic",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["email",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["empty",{"_index":123,"title":{},"body":{"injectables/AlertService.html":{}}}],["enter",{"_index":667,"title":{},"body":{"components/DashboardPage.html":{}}}],["entrycomponents",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1074,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error",{"_index":132,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["expires_in",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["export",{"_index":52,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["exports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["fail",{"_index":70,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["false",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":841,"title":{},"body":{"components/LoginPage.html":{}}}],["ffffff",{"_index":828,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"dependencies.html":{}}}],["find",{"_index":530,"title":{},"body":{"components/BarcodePage.html":{}}}],["findbookstand",{"_index":502,"title":{},"body":{"components/BarcodePage.html":{}}}],["findbookstand(bookstand",{"_index":462,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["findbrand",{"_index":503,"title":{},"body":{"components/BarcodePage.html":{}}}],["findbrand(brand",{"_index":467,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["findcategory",{"_index":504,"title":{},"body":{"components/BarcodePage.html":{}}}],["findcategory(category",{"_index":465,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["findselecteditemindex",{"_index":460,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["findstorehousesbylocation",{"_index":986,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["findstorehousesbylocation(location",{"_index":994,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["finduserbyusername",{"_index":756,"title":{},"body":{"components/LoginPage.html":{},"injectables/UserApiService.html":{}}}],["finduserbyusername(username",{"_index":1029,"title":{},"body":{"injectables/UserApiService.html":{}}}],["font",{"_index":822,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["form",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/ItemsService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["format",{"_index":402,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/IBarcode.html":{}}}],["formsmodule",{"_index":535,"title":{},"body":{"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{}}}],["full",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getauthorizationuser",{"_index":940,"title":{},"body":{"injectables/SessionService.html":{}}}],["getbookstands",{"_index":549,"title":{},"body":{"injectables/BookstandService.html":{}}}],["getbookstandslist",{"_index":437,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["getbrands",{"_index":565,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{}}}],["getbrandslist",{"_index":450,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["getcategireslis",{"_index":444,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["getcategories",{"_index":611,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getcategorys",{"_index":622,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getcontent",{"_index":861,"title":{},"body":{"injectables/LoginService.html":{}}}],["getcurrenttheme",{"_index":948,"title":{},"body":{"injectables/SessionService.html":{}}}],["getcurrentuser",{"_index":936,"title":{},"body":{"injectables/SessionService.html":{}}}],["getisadmin",{"_index":952,"title":{},"body":{"injectables/SessionService.html":{}}}],["getitem",{"_index":722,"title":{},"body":{"injectables/ItemsService.html":{}}}],["getitem(serialnumberitem",{"_index":732,"title":{},"body":{"injectables/ItemsService.html":{}}}],["getitems",{"_index":723,"title":{},"body":{"injectables/ItemsService.html":{}}}],["getitemslist",{"_index":456,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["getrole",{"_index":944,"title":{},"body":{"injectables/SessionService.html":{}}}],["getstorehouses",{"_index":987,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["getuserlist",{"_index":1016,"title":{},"body":{"injectables/UserApiService.html":{}}}],["graph",{"_index":1162,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":844,"title":{},"body":{"components/LoginPage.html":{}}}],["guard.service",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/MemberRoutingModule.html":{}}}],["guard.service.ts",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:12",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guard.service.ts:8",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["guide",{"_index":657,"title":{},"body":{"components/DashboardPage.html":{},"components/HomePage.html":{}}}],["handler",{"_index":111,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterPage.html":{}}}],["header",{"_index":69,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["headers",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["height",{"_index":681,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{}}}],["height100",{"_index":842,"title":{},"body":{"components/LoginPage.html":{}}}],["here",{"_index":675,"title":{},"body":{"components/DashboardPage.html":{}}}],["hidden",{"_index":684,"title":{},"body":{"components/DashboardPage.html":{}}}],["home",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{}}}],["home'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["home.page",{"_index":707,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":697,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":696,"title":{},"body":{"components/HomePage.html":{}}}],["home/home.module#homepagemodule",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homepage",{"_index":199,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":703,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["http",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["http://192.168.1.159:8080/api/it",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["httpclientmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":598,"title":{},"body":{"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/StorehousesService.html":{}}}],["ibarcode",{"_index":400,"title":{"interfaces/IBarcode.html":{}},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/IBarcode.html":{},"coverage.html":{}}}],["icon",{"_index":56,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/DashboardPage.html":{}}}],["id",{"_index":86,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"interfaces/Storehouses.html":{}}}],["identifier",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1086,"title":{},"body":{"injectables/UserApiService.html":{}}}],["img",{"_index":679,"title":{},"body":{"components/DashboardPage.html":{}}}],["implements",{"_index":399,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["import",{"_index":41,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["important",{"_index":821,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["imports",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{}}}],["incorrect",{"_index":778,"title":{},"body":{"components/LoginPage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["initializeapp",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AlertService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["inner",{"_index":834,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["inputs",{"_index":77,"title":{},"body":{"injectables/AlertService.html":{}}}],["interafce",{"_index":425,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["interface",{"_index":539,"title":{"interfaces/Bookstand.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"interfaces/Storehouses.html":{}},"body":{"interfaces/Bookstand.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"interfaces/Storehouses.html":{},"coverage.html":{}}}],["interfaces",{"_index":540,"title":{},"body":{"interfaces/Bookstand.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"interfaces/Storehouses.html":{},"index.html":{}}}],["invalid",{"_index":1075,"title":{},"body":{"injectables/UserApiService.html":{}}}],["ion",{"_index":678,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["ionic",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/HomePage.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":46,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"classes/User.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{}}}],["ionicmodule.forroot",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["isactivevalue",{"_index":1036,"title":{},"body":{"injectables/UserApiService.html":{}}}],["isadmin",{"_index":793,"title":{},"body":{"components/LoginPage.html":{},"injectables/SessionService.html":{}}}],["isadmin(value",{"_index":980,"title":{},"body":{"injectables/SessionService.html":{}}}],["isauth",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["isauthenticated",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["issue",{"_index":674,"title":{},"body":{"components/DashboardPage.html":{}}}],["itechnologies",{"_index":655,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{}}}],["item",{"_index":33,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["item.bookstand",{"_index":482,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["item.bookstand.value",{"_index":742,"title":{},"body":{"injectables/ItemsService.html":{}}}],["item.bookstands",{"_index":121,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.bookstands.numberbookstand",{"_index":100,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.bookstands.storehouses.location",{"_index":101,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.brands",{"_index":118,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["item.brands.name",{"_index":106,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{}}}],["item.category",{"_index":115,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["item.category.id",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.category.name",{"_index":743,"title":{},"body":{"injectables/ItemsService.html":{}}}],["item.category.namecategory",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.id",{"_index":117,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.itemname",{"_index":87,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{}}}],["item.newnumberitem",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{}}}],["item.numberitem",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{}}}],["item.serialnumberitem",{"_index":81,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsService.html":{}}}],["item.statusitem",{"_index":120,"title":{},"body":{"injectables/AlertService.html":{}}}],["item.value",{"_index":464,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["item/${serialnumberitem",{"_index":748,"title":{},"body":{"injectables/ItemsService.html":{}}}],["item/new2",{"_index":740,"title":{},"body":{"injectables/ItemsService.html":{}}}],["itemname",{"_index":493,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["items",{"_index":31,"title":{"interfaces/Items.html":{}},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"coverage.html":{}}}],["items.service",{"_index":48,"title":{},"body":{"injectables/AlertService.html":{}}}],["items/delete/${item.serialnumberitem",{"_index":746,"title":{},"body":{"injectables/ItemsService.html":{}}}],["items/update",{"_index":747,"title":{},"body":{"injectables/ItemsService.html":{}}}],["itemslist",{"_index":418,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["itemsnewvaluehandler.service",{"_index":43,"title":{},"body":{"injectables/AlertService.html":{}}}],["itemsnewvaluehandlerservice",{"_index":42,"title":{"injectables/ItemsNewValueHandlerService.html":{}},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"injectables/ItemsNewValueHandlerService.html":{},"coverage.html":{},"index.html":{}}}],["itemsservice",{"_index":17,"title":{"injectables/ItemsService.html":{}},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"coverage.html":{},"index.html":{}}}],["js",{"_index":601,"title":{},"body":{"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/StorehousesService.html":{},"dependencies.html":{}}}],["json.parse(isadmin",{"_index":977,"title":{},"body":{"injectables/SessionService.html":{}}}],["json.parse(role",{"_index":969,"title":{},"body":{"injectables/SessionService.html":{}}}],["json.parse(user",{"_index":958,"title":{},"body":{"injectables/SessionService.html":{}}}],["json.stringify(value",{"_index":962,"title":{},"body":{"injectables/SessionService.html":{}}}],["jti",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["keyboard",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":85,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/Items.html":{}}}],["left",{"_index":660,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["lefttrimpipe",{"_index":1049,"title":{},"body":{"injectables/UserApiService.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["licence",{"_index":671,"title":{},"body":{"components/DashboardPage.html":{}}}],["list",{"_index":417,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{}}}],["literal",{"_index":545,"title":{},"body":{"interfaces/Bookstand.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{}}}],["loadchildren",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MemberRoutingModule.html":{}}}],["loading",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["loadingcontroller",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["loadingctrl",{"_index":758,"title":{},"body":{"components/LoginPage.html":{}}}],["localstorage.getitem('isadmin",{"_index":976,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem('role",{"_index":968,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem('token",{"_index":562,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["localstorage.getitem('user",{"_index":957,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem('isadmin",{"_index":981,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem('role",{"_index":973,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem('token",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["localstorage.setitem('user",{"_index":964,"title":{},"body":{"injectables/SessionService.html":{}}}],["location",{"_index":103,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{}}}],["log",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":771,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{}}}],["login",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["login'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["login.page",{"_index":859,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["login.page.html",{"_index":752,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":751,"title":{},"body":{"components/LoginPage.html":{}}}],["login.service",{"_index":1048,"title":{},"body":{"injectables/UserApiService.html":{}}}],["login_success",{"_index":770,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{}}}],["loginpage",{"_index":201,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":855,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"index.html":{},"modules.html":{}}}],["loginservice",{"_index":224,"title":{"injectables/LoginService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"index.html":{}}}],["logo",{"_index":806,"title":{},"body":{"components/LoginPage.html":{}}}],["logout",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/DashboardPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["lost",{"_index":701,"title":{},"body":{"components/HomePage.html":{}}}],["low",{"_index":893,"title":{},"body":{"components/RegisterPage.html":{}}}],["manually",{"_index":666,"title":{},"body":{"components/DashboardPage.html":{}}}],["margin",{"_index":816,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["matching",{"_index":135,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":680,"title":{},"body":{"components/DashboardPage.html":{},"components/LoginPage.html":{}}}],["media",{"_index":851,"title":{},"body":{"components/LoginPage.html":{}}}],["memberroutingmodule",{"_index":875,"title":{"modules/MemberRoutingModule.html":{}},"body":{"modules/MemberRoutingModule.html":{},"modules.html":{}}}],["members",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["members/barcode/barcode.module#barcodepagemodule",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["members/barcode/barcode.page",{"_index":45,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ItemsNewValueHandlerService.html":{}}}],["members/dashboard/dashboard.module#dashboardpagemodule",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["members/member",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["menu",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardPage.html":{}}}],["message",{"_index":36,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["messagelist",{"_index":753,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{}}}],["metadata",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"components/DashboardPage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["min",{"_index":852,"title":{},"body":{"components/LoginPage.html":{}}}],["miscellaneous",{"_index":1164,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":207,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["modules",{"_index":209,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{},"modules.html":{}}}],["name",{"_index":22,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["name?username=${encodeuricomponent(username",{"_index":1053,"title":{},"body":{"injectables/UserApiService.html":{}}}],["namecategory",{"_index":499,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{}}}],["native/barcode",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"dependencies.html":{}}}],["native/core",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["native/http",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["native/http/ngx",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["native/splash",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nav",{"_index":759,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["navcontroller",{"_index":760,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["new",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["newnumberitem",{"_index":496,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["newtotalityofitem",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{}}}],["next",{"_index":663,"title":{},"body":{"components/DashboardPage.html":{}}}],["ngmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{}}}],["ngoninit",{"_index":433,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["ngx",{"_index":1050,"title":{},"body":{"injectables/UserApiService.html":{},"dependencies.html":{}}}],["none",{"_index":830,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["notifications",{"_index":57,"title":{},"body":{"injectables/AlertService.html":{}}}],["null",{"_index":116,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["number",{"_index":79,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/Items.html":{},"classes/Response.html":{},"interfaces/Storehouses.html":{},"classes/User.html":{}}}],["number(data.newtotalityofitem",{"_index":133,"title":{},"body":{"injectables/AlertService.html":{}}}],["number(item.newnumberitem",{"_index":124,"title":{},"body":{"injectables/AlertService.html":{}}}],["numberbookstand",{"_index":497,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{}}}],["numberitem",{"_index":494,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["object",{"_index":769,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["occured",{"_index":773,"title":{},"body":{"components/LoginPage.html":{}}}],["ok",{"_index":73,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["oninit",{"_index":409,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["open",{"_index":670,"title":{},"body":{"components/DashboardPage.html":{}}}],["optional",{"_index":24,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["out",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["overflow",{"_index":683,"title":{},"body":{"components/DashboardPage.html":{}}}],["overview",{"_index":1153,"title":{"index.html":{}},"body":{"index.html":{}}}],["oyster",{"_index":700,"title":{},"body":{"components/HomePage.html":{}}}],["p.title",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1111,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":808,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["password",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["path",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"injectables/ItemsService.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["pathmatch",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phonegap",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["pipes",{"_index":1051,"title":{},"body":{"injectables/UserApiService.html":{},"dependencies.html":{}}}],["placeholder",{"_index":82,"title":{},"body":{"injectables/AlertService.html":{}}}],["placement",{"_index":60,"title":{},"body":{"injectables/AlertService.html":{}}}],["platform",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["plt",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["plugin",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["policy",{"_index":1084,"title":{},"body":{"injectables/UserApiService.html":{}}}],["presentalert",{"_index":883,"title":{},"body":{"components/RegisterPage.html":{}}}],["private",{"_index":54,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["problem",{"_index":905,"title":{},"body":{"components/RegisterPage.html":{}}}],["production",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["promise((resolve",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["properties",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["provide",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["providers",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["public",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["public/login/login.module#loginpagemodule",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["public/register/register.module#registerpagemodule",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["quick",{"_index":656,"title":{},"body":{"components/DashboardPage.html":{}}}],["radius",{"_index":820,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["rc.1",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["redirectto",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh_token",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["register",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["register(credentials",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["register.page",{"_index":913,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["register.page.html",{"_index":881,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":880,"title":{},"body":{"components/RegisterPage.html":{}}}],["registercredentials",{"_index":754,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["registerpage",{"_index":203,"title":{"components/RegisterPage.html":{}},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"coverage.html":{},"index.html":{}}}],["registerpagemodule",{"_index":909,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"index.html":{},"modules.html":{}}}],["reject",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["remaining",{"_index":896,"title":{},"body":{"components/RegisterPage.html":{}}}],["res",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["res.data",{"_index":1059,"title":{},"body":{"injectables/UserApiService.html":{}}}],["reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["resolve(response.access_token",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["resources",{"_index":669,"title":{},"body":{"components/DashboardPage.html":{}}}],["response",{"_index":127,"title":{"classes/Response.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsService.html":{},"classes/Response.html":{},"classes/User.html":{},"coverage.html":{}}}],["response.access_token",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["response.data",{"_index":440,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{},"injectables/StorehousesService.html":{}}}],["response.data.content",{"_index":459,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["result",{"_index":134,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":136,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":74,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"components/DashboardPage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["right",{"_index":801,"title":{},"body":{"components/LoginPage.html":{}}}],["role",{"_index":108,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"injectables/SessionService.html":{}}}],["role(value",{"_index":971,"title":{},"body":{"injectables/SessionService.html":{}}}],["root",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["root'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["rootpage",{"_index":644,"title":{},"body":{"components/DashboardPage.html":{}}}],["router",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["routereusestrategy",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{}}}],["routermodule.forchild",{"_index":708,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":538,"title":{},"body":{"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":275,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberRoutingModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module#memberroutingmodule",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MemberRoutingModule.html":{}}}],["row",{"_index":807,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["run",{"_index":783,"title":{},"body":{"components/LoginPage.html":{}}}],["running",{"_index":774,"title":{},"body":{"components/LoginPage.html":{}}}],["rxjs",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["rxjs/observable",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["scan",{"_index":529,"title":{},"body":{"components/BarcodePage.html":{},"components/DashboardPage.html":{}}}],["scancode",{"_index":469,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["scanneddata",{"_index":416,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["scanner",{"_index":414,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"dependencies.html":{}}}],["scanner/ngx",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["schemas",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["screen",{"_index":662,"title":{},"body":{"components/DashboardPage.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["searchitembycode",{"_index":475,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["searchuser",{"_index":926,"title":{},"body":{"injectables/SessionService.html":{}}}],["secondary",{"_index":110,"title":{},"body":{"injectables/AlertService.html":{}}}],["selecteditem",{"_index":419,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["selector",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["serial",{"_index":78,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["serialnumberitem",{"_index":492,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["server",{"_index":775,"title":{},"body":{"components/LoginPage.html":{}}}],["service",{"_index":564,"title":{},"body":{"injectables/BookstandService.html":{},"injectables/BrandService.html":{},"injectables/CategoryService.html":{},"injectables/ItemsService.html":{},"injectables/StorehousesService.html":{}}}],["services/alert.service",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{}}}],["services/auth",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/MemberRoutingModule.html":{}}}],["services/authentication.service",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["services/bookstand.service",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["services/brand.service",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["services/category.service",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["services/items.service",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{}}}],["services/itemsnewvaluehandler.service",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["services/login.service",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["services/session.service",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{}}}],["services/storehouses.service",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["services/user",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPage.html":{}}}],["session.service",{"_index":717,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"injectables/UserApiService.html":{}}}],["sessionservice",{"_index":225,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/SessionService.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"index.html":{}}}],["set",{"_index":960,"title":{},"body":{"injectables/SessionService.html":{}}}],["set('content",{"_index":874,"title":{},"body":{"injectables/LoginService.html":{}}}],["setauthenticationstate",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setauthenticationstate(value",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["setauthorities",{"_index":757,"title":{},"body":{"components/LoginPage.html":{}}}],["setauthorities(role",{"_index":766,"title":{},"body":{"components/LoginPage.html":{}}}],["setauthorizationuser(value",{"_index":942,"title":{},"body":{"injectables/SessionService.html":{}}}],["setcurrenttheme(value",{"_index":950,"title":{},"body":{"injectables/SessionService.html":{}}}],["setcurrentuser(value",{"_index":938,"title":{},"body":{"injectables/SessionService.html":{}}}],["setisadmin(value",{"_index":954,"title":{},"body":{"injectables/SessionService.html":{}}}],["setnewvalueoftotalityitem",{"_index":712,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{}}}],["setnewvalueoftotalityitem(data",{"_index":715,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{}}}],["setpermissionsforusers",{"_index":1017,"title":{},"body":{"injectables/UserApiService.html":{}}}],["setpermissionsforusers(userlist",{"_index":1032,"title":{},"body":{"injectables/UserApiService.html":{}}}],["setrole(value",{"_index":946,"title":{},"body":{"injectables/SessionService.html":{}}}],["shadow",{"_index":829,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["showerror",{"_index":10,"title":{},"body":{"injectables/AlertService.html":{}}}],["showerror(text",{"_index":26,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{}}}],["showflipcamerabutton",{"_index":432,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["showitem",{"_index":11,"title":{},"body":{"injectables/AlertService.html":{}}}],["showitem(item",{"_index":30,"title":{},"body":{"injectables/AlertService.html":{}}}],["shownotification",{"_index":12,"title":{},"body":{"injectables/AlertService.html":{}}}],["shownotification(from",{"_index":34,"title":{},"body":{"injectables/AlertService.html":{}}}],["showpopup",{"_index":884,"title":{},"body":{"components/RegisterPage.html":{}}}],["showpopup(title",{"_index":890,"title":{},"body":{"components/RegisterPage.html":{}}}],["showsuccess",{"_index":13,"title":{},"body":{"injectables/AlertService.html":{}}}],["showsuccess(text",{"_index":39,"title":{},"body":{"injectables/AlertService.html":{}}}],["showtorchbutton",{"_index":431,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["signup",{"_index":831,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{}}}],["signup(username",{"_index":865,"title":{},"body":{"injectables/LoginService.html":{}}}],["size",{"_index":823,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["solid",{"_index":827,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"modules/BarcodePageModule.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"modules/DashboardPageModule.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"injectables/LoginService.html":{},"modules/MemberRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["splashscreen",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["src/.../alert.service.ts",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/home/home.module.ts",{"_index":706,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":695,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/interfaces/ibarcode.ts",{"_index":709,"title":{},"body":{"interfaces/IBarcode.html":{},"coverage.html":{}}}],["src/app/interfaces/ibookstand.ts",{"_index":541,"title":{},"body":{"interfaces/Bookstand.html":{},"coverage.html":{}}}],["src/app/interfaces/ibrand.ts",{"_index":585,"title":{},"body":{"interfaces/Brand.html":{},"coverage.html":{}}}],["src/app/interfaces/icategory.ts",{"_index":607,"title":{},"body":{"interfaces/Category.html":{},"coverage.html":{}}}],["src/app/interfaces/idropdownitems.ts",{"_index":694,"title":{},"body":{"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"coverage.html":{}}}],["src/app/interfaces/iitems.ts",{"_index":710,"title":{},"body":{"interfaces/Items.html":{},"coverage.html":{}}}],["src/app/interfaces/istorehouses.ts",{"_index":982,"title":{},"body":{"interfaces/Storehouses.html":{},"coverage.html":{}}}],["src/app/members/barcode/barcode.module.ts",{"_index":534,"title":{},"body":{"modules/BarcodePageModule.html":{}}}],["src/app/members/barcode/barcode.page.ts",{"_index":398,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{}}}],["src/app/members/barcode/barcode.page.ts:110",{"_index":515,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:120",{"_index":511,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:124",{"_index":508,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:128",{"_index":510,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:132",{"_index":509,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:136",{"_index":517,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:145",{"_index":518,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:163",{"_index":519,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:18",{"_index":527,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:182",{"_index":631,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:185",{"_index":635,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:186",{"_index":639,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:187",{"_index":636,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:188",{"_index":638,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:189",{"_index":640,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:190",{"_index":637,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:191",{"_index":633,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:195",{"_index":632,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:203",{"_index":634,"title":{},"body":{"classes/ClassItems.html":{}}}],["src/app/members/barcode/barcode.page.ts:210",{"_index":626,"title":{},"body":{"classes/ClassDropdownMe.html":{}}}],["src/app/members/barcode/barcode.page.ts:213",{"_index":628,"title":{},"body":{"classes/ClassDropdownMe.html":{}}}],["src/app/members/barcode/barcode.page.ts:214",{"_index":629,"title":{},"body":{"classes/ClassDropdownMe.html":{}}}],["src/app/members/barcode/barcode.page.ts:215",{"_index":627,"title":{},"body":{"classes/ClassDropdownMe.html":{}}}],["src/app/members/barcode/barcode.page.ts:219",{"_index":404,"title":{},"body":{"classes/BarcodeData.html":{}}}],["src/app/members/barcode/barcode.page.ts:222",{"_index":408,"title":{},"body":{"classes/BarcodeData.html":{}}}],["src/app/members/barcode/barcode.page.ts:223",{"_index":407,"title":{},"body":{"classes/BarcodeData.html":{}}}],["src/app/members/barcode/barcode.page.ts:224",{"_index":406,"title":{},"body":{"classes/BarcodeData.html":{}}}],["src/app/members/barcode/barcode.page.ts:23",{"_index":520,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:26",{"_index":526,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:27",{"_index":528,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:31",{"_index":522,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:33",{"_index":523,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:35",{"_index":521,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:37",{"_index":524,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:38",{"_index":525,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:39",{"_index":507,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:56",{"_index":516,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:63",{"_index":512,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:78",{"_index":514,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/barcode/barcode.page.ts:94",{"_index":513,"title":{},"body":{"components/BarcodePage.html":{}}}],["src/app/members/dashboard/dashboard.module.ts",{"_index":690,"title":{},"body":{"modules/DashboardPageModule.html":{}}}],["src/app/members/dashboard/dashboard.page.ts",{"_index":641,"title":{},"body":{"components/DashboardPage.html":{},"coverage.html":{}}}],["src/app/members/dashboard/dashboard.page.ts:10",{"_index":650,"title":{},"body":{"components/DashboardPage.html":{}}}],["src/app/members/dashboard/dashboard.page.ts:11",{"_index":649,"title":{},"body":{"components/DashboardPage.html":{}}}],["src/app/members/dashboard/dashboard.page.ts:22",{"_index":646,"title":{},"body":{"components/DashboardPage.html":{}}}],["src/app/members/dashboard/dashboard.page.ts:25",{"_index":648,"title":{},"body":{"components/DashboardPage.html":{}}}],["src/app/members/dashboard/dashboard.page.ts:28",{"_index":647,"title":{},"body":{"components/DashboardPage.html":{}}}],["src/app/members/member",{"_index":876,"title":{},"body":{"modules/MemberRoutingModule.html":{}}}],["src/app/public/login/login.module.ts",{"_index":858,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/public/login/login.page.ts",{"_index":750,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/public/login/login.page.ts:106",{"_index":767,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:19",{"_index":768,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:20",{"_index":780,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:23",{"_index":779,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:28",{"_index":761,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:42",{"_index":765,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:45",{"_index":762,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:49",{"_index":764,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/login/login.page.ts:87",{"_index":763,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/public/register/register.module.ts",{"_index":912,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/public/register/register.page.ts",{"_index":879,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/public/register/register.page.ts:11",{"_index":892,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/public/register/register.page.ts:12",{"_index":886,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/public/register/register.page.ts:19",{"_index":887,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/public/register/register.page.ts:22",{"_index":888,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/public/register/register.page.ts:31",{"_index":889,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/public/register/register.page.ts:45",{"_index":891,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/services/alert.service.ts",{"_index":6,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/alert.service.ts:10",{"_index":19,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:18",{"_index":37,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:43",{"_index":27,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:53",{"_index":40,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:64",{"_index":32,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/api",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:106",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:112",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:14",{"_index":1009,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/authentication.service.ts:15",{"_index":1008,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/authentication.service.ts:24",{"_index":914,"title":{},"body":{"classes/Response.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":915,"title":{},"body":{"classes/Response.html":{}}}],["src/app/services/authentication.service.ts:26",{"_index":916,"title":{},"body":{"classes/Response.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":917,"title":{},"body":{"classes/Response.html":{}}}],["src/app/services/authentication.service.ts:28",{"_index":918,"title":{},"body":{"classes/Response.html":{}}}],["src/app/services/authentication.service.ts:29",{"_index":919,"title":{},"body":{"classes/Response.html":{}}}],["src/app/services/authentication.service.ts:36",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:40",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:42",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:58",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:84",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:88",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:98",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/bookstand.service.ts",{"_index":546,"title":{},"body":{"injectables/BookstandService.html":{},"coverage.html":{}}}],["src/app/services/bookstand.service.ts:16",{"_index":557,"title":{},"body":{"injectables/BookstandService.html":{}}}],["src/app/services/bookstand.service.ts:33",{"_index":554,"title":{},"body":{"injectables/BookstandService.html":{}}}],["src/app/services/bookstand.service.ts:57",{"_index":556,"title":{},"body":{"injectables/BookstandService.html":{}}}],["src/app/services/bookstand.service.ts:67",{"_index":559,"title":{},"body":{"injectables/BookstandService.html":{}}}],["src/app/services/bookstand.service.ts:9",{"_index":552,"title":{},"body":{"injectables/BookstandService.html":{}}}],["src/app/services/brand.service.ts",{"_index":586,"title":{},"body":{"injectables/BrandService.html":{},"coverage.html":{}}}],["src/app/services/brand.service.ts:15",{"_index":595,"title":{},"body":{"injectables/BrandService.html":{}}}],["src/app/services/brand.service.ts:28",{"_index":592,"title":{},"body":{"injectables/BrandService.html":{}}}],["src/app/services/brand.service.ts:44",{"_index":594,"title":{},"body":{"injectables/BrandService.html":{}}}],["src/app/services/brand.service.ts:54",{"_index":597,"title":{},"body":{"injectables/BrandService.html":{}}}],["src/app/services/brand.service.ts:9",{"_index":590,"title":{},"body":{"injectables/BrandService.html":{}}}],["src/app/services/category.service.ts",{"_index":608,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/services/category.service.ts:14",{"_index":618,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:27",{"_index":615,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:43",{"_index":617,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:53",{"_index":620,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:9",{"_index":613,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/items.service.ts",{"_index":719,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["src/app/services/items.service.ts:10",{"_index":727,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/items.service.ts:17",{"_index":734,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/items.service.ts:31",{"_index":729,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/items.service.ts:53",{"_index":731,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/items.service.ts:63",{"_index":736,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/items.service.ts:80",{"_index":738,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/items.service.ts:98",{"_index":733,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/app/services/itemsnewvaluehandler.service.ts",{"_index":711,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{},"coverage.html":{}}}],["src/app/services/itemsnewvaluehandler.service.ts:12",{"_index":714,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{}}}],["src/app/services/itemsnewvaluehandler.service.ts:20",{"_index":716,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{}}}],["src/app/services/login.service.ts",{"_index":860,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/services/login.service.ts:12",{"_index":871,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:17",{"_index":863,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:26",{"_index":866,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:38",{"_index":864,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/session.service.ts",{"_index":920,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{}}}],["src/app/services/session.service.ts:11",{"_index":935,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:12",{"_index":930,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:17",{"_index":937,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:25",{"_index":939,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:31",{"_index":941,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:38",{"_index":943,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:44",{"_index":945,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:5",{"_index":933,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:51",{"_index":947,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:57",{"_index":949,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:6",{"_index":931,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:61",{"_index":951,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:65",{"_index":953,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:7",{"_index":934,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:72",{"_index":955,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:9",{"_index":932,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/storehouses.service.ts",{"_index":983,"title":{},"body":{"injectables/StorehousesService.html":{},"coverage.html":{}}}],["src/app/services/storehouses.service.ts:10",{"_index":989,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["src/app/services/storehouses.service.ts:16",{"_index":996,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["src/app/services/storehouses.service.ts:29",{"_index":991,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["src/app/services/storehouses.service.ts:48",{"_index":993,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["src/app/services/storehouses.service.ts:58",{"_index":998,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["src/app/services/storehouses.service.ts:73",{"_index":995,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["src/app/services/user",{"_index":1010,"title":{},"body":{"injectables/UserApiService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":653,"title":{},"body":{"components/DashboardPage.html":{}}}],["startedediting",{"_index":1012,"title":{},"body":{"injectables/UserApiService.html":{}}}],["state",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["statements",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{}}}],["statusbar",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["statusitem",{"_index":495,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"injectables/ItemsService.html":{}}}],["storage",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["storehouses",{"_index":498,"title":{"interfaces/Storehouses.html":{}},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/Items.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"coverage.html":{}}}],["storehouses.location",{"_index":1003,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["storehouses.service",{"_index":560,"title":{},"body":{"injectables/BookstandService.html":{}}}],["storehouses/delete/${storehouses.id",{"_index":1005,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["storehouses/new",{"_index":1002,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["storehouses/update/${storehouses.id",{"_index":1006,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["storehouses?location=${location",{"_index":1007,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["storehouses_id",{"_index":542,"title":{},"body":{"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{}}}],["storehouses_id_id",{"_index":543,"title":{},"body":{"interfaces/Bookstand.html":{}}}],["storehouses_location",{"_index":544,"title":{},"body":{"interfaces/Bookstand.html":{}}}],["storehousesservice",{"_index":226,"title":{"injectables/StorehousesService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BookstandService.html":{},"injectables/StorehousesService.html":{},"coverage.html":{},"index.html":{}}}],["string",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"interfaces/Brand.html":{},"interfaces/Category.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":501,"title":{},"body":{"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["styleurls",{"_index":412,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subheader",{"_index":71,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subject",{"_index":1046,"title":{},"body":{"injectables/UserApiService.html":{}}}],["submit",{"_index":836,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscribe((response",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["success",{"_index":76,"title":{},"body":{"injectables/AlertService.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{}}}],["support",{"_index":1159,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1160,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":664,"title":{},"body":{"components/DashboardPage.html":{}}}],["tab",{"_index":665,"title":{},"body":{"components/DashboardPage.html":{}}}],["table",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":61,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["templateurl",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["text",{"_index":28,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"interfaces/IBarcode.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["then((response",{"_index":126,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"injectables/BookstandService.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/StorehousesService.html":{},"injectables/UserApiService.html":{}}}],["then(data",{"_index":787,"title":{},"body":{"components/LoginPage.html":{},"injectables/UserApiService.html":{}}}],["then(res",{"_index":1058,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this._authorizationuser",{"_index":967,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._currenttheme",{"_index":974,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._currentuser",{"_index":963,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._isadmin",{"_index":979,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._role",{"_index":972,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.alertctrl.create",{"_index":68,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.alertservice.showerror('bad",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.alertservice.showerror('disabled",{"_index":797,"title":{},"body":{"components/LoginPage.html":{}}}],["this.alertservice.showerror('empty",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.alertservice.showerror('error",{"_index":488,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.alertservice.showerror('incorrect",{"_index":478,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.alertservice.showerror('inncorrect",{"_index":474,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.alertservice.showitem(response.data",{"_index":479,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.alertservice.shownotification('bottom",{"_index":800,"title":{},"body":{"components/LoginPage.html":{}}}],["this.alertservice.showsuccess('updated",{"_index":486,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.auth.isauthenticated",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.auth.register(this.registercredentials).subscribe(success",{"_index":900,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.authenticationservice.authenticationstate.subscribe(state",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.logout",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationstate.next(false",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.authenticationstate.next(true",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.authenticationstate.next(value",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.authenticationstate.value",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.authorizationuser",{"_index":965,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.authservice.auth(this.registercredentials.username",{"_index":786,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.logout",{"_index":652,"title":{},"body":{"components/DashboardPage.html":{}}}],["this.authservice.setauthenticationstate(true",{"_index":798,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.token",{"_index":788,"title":{},"body":{"components/LoginPage.html":{}}}],["this.barcodepage.updatenewitem(item",{"_index":718,"title":{},"body":{"injectables/ItemsNewValueHandlerService.html":{}}}],["this.barcodescanner.scan().then(barcodedata",{"_index":470,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.barcodescanneroptions",{"_index":430,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.bookstandservice.getbookstands",{"_index":438,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.bookstandslist",{"_index":439,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.brandservice.getbrands",{"_index":451,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.brandslist",{"_index":452,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.categorieslist",{"_index":446,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.categoryservice.getcategories",{"_index":445,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.checktoken",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.createsuccess",{"_index":901,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.currentuser",{"_index":959,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.dropdowninterfacebookstand.find(item",{"_index":463,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.dropdowninterfacebookstand.push",{"_index":441,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.dropdowninterfacebrand.find(item",{"_index":468,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.dropdowninterfacebrand.push",{"_index":453,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.dropdowninterfacecategories.find(item",{"_index":466,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.dropdowninterfacecategories.push",{"_index":447,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.email",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.findbookstand(item.bookstands.id",{"_index":483,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.findbrand(item.brands.id",{"_index":484,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.findcategory(item.category.id",{"_index":481,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.finduserbyusername",{"_index":789,"title":{},"body":{"components/LoginPage.html":{}}}],["this.getbookstandslist",{"_index":434,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.getbrandslist",{"_index":436,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.getcategireslis",{"_index":435,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.getcontent",{"_index":873,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.httpclient.post(`${api_url}/login",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.initializeapp",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isadmin",{"_index":978,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.itemslist",{"_index":458,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.itemslist.indexof(this.selecteditem",{"_index":461,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.itemsservice.getitem(this.scanneddata.text",{"_index":477,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.itemsservice.getitems",{"_index":457,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.itemsservice.updateitem(item",{"_index":485,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.itemsservice.updateitemalert(item",{"_index":125,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.loading.dismiss",{"_index":805,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginservice.signup(user.username",{"_index":1072,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.messagelist.try_again",{"_index":803,"title":{},"body":{"components/LoginPage.html":{}}}],["this.name",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.nav.navigateforward('register",{"_index":782,"title":{},"body":{"components/LoginPage.html":{}}}],["this.nav.navigateroot('dashboard",{"_index":799,"title":{},"body":{"components/LoginPage.html":{}}}],["this.nav.poptoroot",{"_index":907,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.ngoninit",{"_index":487,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.path",{"_index":1052,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.platform.ready().then",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["this.plt.ready().then",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.registercredentials.password",{"_index":784,"title":{},"body":{"components/LoginPage.html":{}}}],["this.registercredentials.username",{"_index":785,"title":{},"body":{"components/LoginPage.html":{}}}],["this.role",{"_index":970,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.router.navigate(['login",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['members",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scanneddata",{"_index":471,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.searchitembycode",{"_index":472,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["this.sessionservice.currentuser",{"_index":791,"title":{},"body":{"components/LoginPage.html":{}}}],["this.sessionservice.currentuser.active",{"_index":796,"title":{},"body":{"components/LoginPage.html":{}}}],["this.sessionservice.currentuser.data.id",{"_index":745,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.sessionservice.currentuser.roleadmin",{"_index":794,"title":{},"body":{"components/LoginPage.html":{}}}],["this.sessionservice.isadmin",{"_index":804,"title":{},"body":{"components/LoginPage.html":{}}}],["this.setauthorities(isadmin",{"_index":795,"title":{},"body":{"components/LoginPage.html":{}}}],["this.showerror('error",{"_index":122,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.showerror('server",{"_index":131,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.showpopup('error",{"_index":904,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.showpopup('success",{"_index":902,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.showsuccess('item",{"_index":128,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.splashscreen.hide",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(token_key).then(res",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.storage.remove(token_key).then",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.storage.set('token",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["this.userapiservice.finduserbyusername(this.registercredentials.username",{"_index":790,"title":{},"body":{"components/LoginPage.html":{}}}],["time",{"_index":870,"title":{},"body":{"injectables/LoginService.html":{}}}],["time_out",{"_index":869,"title":{},"body":{"injectables/LoginService.html":{}}}],["timer",{"_index":58,"title":{},"body":{"injectables/AlertService.html":{}}}],["title",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardPage.html":{},"components/RegisterPage.html":{}}}],["todo",{"_index":899,"title":{},"body":{"components/RegisterPage.html":{},"injectables/UserApiService.html":{}}}],["token",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["token_auth_password",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_auth_username",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["top",{"_index":809,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["totality",{"_index":88,"title":{},"body":{"injectables/AlertService.html":{}}}],["tree",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["true",{"_index":84,"title":{},"body":{"injectables/AlertService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":867,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserApiService.html":{}}}],["try_again",{"_index":772,"title":{},"body":{"components/LoginPage.html":{},"injectables/LoginService.html":{}}}],["type",{"_index":23,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/BarcodePage.html":{},"interfaces/Bookstand.html":{},"injectables/BookstandService.html":{},"interfaces/Brand.html":{},"injectables/BrandService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/IBarcode.html":{},"interfaces/Items.html":{},"injectables/ItemsNewValueHandlerService.html":{},"injectables/ItemsService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"interfaces/Storehouses.html":{},"injectables/StorehousesService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":476,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/LoginPage.html":{}}}],["update",{"_index":1085,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateactive",{"_index":1018,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateactive(user",{"_index":1035,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateactive/${user.id",{"_index":1057,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updatebookstand",{"_index":550,"title":{},"body":{"injectables/BookstandService.html":{}}}],["updatebookstand(bookstand",{"_index":558,"title":{},"body":{"injectables/BookstandService.html":{}}}],["updatebrand",{"_index":589,"title":{},"body":{"injectables/BrandService.html":{}}}],["updatebrand(brand",{"_index":596,"title":{},"body":{"injectables/BrandService.html":{}}}],["updatecategory",{"_index":612,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategory(category",{"_index":619,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updated",{"_index":129,"title":{},"body":{"injectables/AlertService.html":{}}}],["updateitem",{"_index":724,"title":{},"body":{"injectables/ItemsService.html":{}}}],["updateitem(item",{"_index":735,"title":{},"body":{"injectables/ItemsService.html":{}}}],["updateitemalert",{"_index":725,"title":{},"body":{"injectables/ItemsService.html":{}}}],["updateitemalert(item",{"_index":737,"title":{},"body":{"injectables/ItemsService.html":{}}}],["updatenewitem",{"_index":505,"title":{},"body":{"components/BarcodePage.html":{}}}],["updatenewitem(item",{"_index":480,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["updatestorehouse",{"_index":988,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["updatestorehouse(storehouses",{"_index":997,"title":{},"body":{"injectables/StorehousesService.html":{}}}],["updateuser",{"_index":1019,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuser(user",{"_index":1038,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuserimage",{"_index":1020,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuserimage(user",{"_index":1040,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuserinfo",{"_index":1021,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuserinfo(user",{"_index":1043,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuserrequest",{"_index":1041,"title":{},"body":{"injectables/UserApiService.html":{}}}],["upgrade",{"_index":490,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["upper",{"_index":659,"title":{},"body":{"components/DashboardPage.html":{}}}],["url",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardPage.html":{}}}],["urlencoded",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/ItemsService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["useclass",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":333,"title":{"classes/User.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"classes/Response.html":{},"injectables/SessionService.html":{},"classes/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["user.email",{"_index":1070,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.id",{"_index":1078,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.password",{"_index":1071,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.roleadmin",{"_index":1067,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.roles",{"_index":1063,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.username",{"_index":1069,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user_id",{"_index":744,"title":{},"body":{"injectables/ItemsService.html":{}}}],["userapiservice",{"_index":227,"title":{"injectables/UserApiService.html":{}},"body":{"modules/AppModule.html":{},"components/LoginPage.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"index.html":{}}}],["userlist",{"_index":1034,"title":{},"body":{"injectables/UserApiService.html":{}}}],["username",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"classes/Response.html":{},"classes/User.html":{},"injectables/UserApiService.html":{}}}],["username=${encodeuricomponent(username)}&password=${encodeuricomponent(password)}&grant_type=password",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["userrole",{"_index":1062,"title":{},"body":{"injectables/UserApiService.html":{}}}],["userrole.name",{"_index":1065,"title":{},"body":{"injectables/UserApiService.html":{}}}],["users/update/${user.id",{"_index":1055,"title":{},"body":{"injectables/UserApiService.html":{}}}],["users/update/info/${user.id}/${user.roleadmin",{"_index":1054,"title":{},"body":{"injectables/UserApiService.html":{}}}],["users/updateimage/${user.id",{"_index":1079,"title":{},"body":{"injectables/UserApiService.html":{}}}],["value",{"_index":80,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"components/DashboardPage.html":{},"interfaces/DropDownBookstand.html":{},"interfaces/DropDownMe.html":{},"interfaces/Items.html":{},"components/LoginPage.html":{},"injectables/LoginService.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":50,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["variable",{"_index":415,"title":{},"body":{"classes/BarcodeData.html":{},"components/BarcodePage.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{},"coverage.html":{}}}],["variables",{"_index":1165,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BarcodePage.html":{},"components/DashboardPage.html":{},"injectables/ItemsNewValueHandlerService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/SessionService.html":{}}}],["webview",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["weight",{"_index":849,"title":{},"body":{"components/LoginPage.html":{}}}],["welcome",{"_index":654,"title":{},"body":{"components/DashboardPage.html":{}}}],["wez",{"_index":573,"title":{},"body":{"injectables/BookstandService.html":{}}}],["white",{"_index":840,"title":{},"body":{"components/LoginPage.html":{}}}],["whitelist",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":845,"title":{},"body":{"components/LoginPage.html":{}}}],["world",{"_index":699,"title":{},"body":{"components/HomePage.html":{}}}],["www",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BookstandService.html":{},"injectables/ItemsService.html":{},"classes/Response.html":{},"classes/User.html":{}}}],["xy7kmzonzl100",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":405,"title":{},"body":{"classes/BarcodeData.html":{},"classes/ClassDropdownMe.html":{},"classes/ClassItems.html":{}}}],["z",{"_index":574,"title":{},"body":{"injectables/BookstandService.html":{}}}],["zamiast",{"_index":571,"title":{},"body":{"injectables/BookstandService.html":{}}}],["zone.js",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/BarcodePageModule.html":{},"modules/DashboardPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                showError\n                            \n                            \n                                    Async\n                                showItem\n                            \n                            \n                                showNotification\n                            \n                            \n                                    Async\n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertCtrl: AlertController, itemsService: ItemsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemsService\n                                                  \n                                                        \n                                                                        ItemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showError(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showItem(item: Items)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Items\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowNotification(from, align, type, message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    align\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showSuccess(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ItemsNewValueHandlerService } from './itemsNewValueHandler.service';\nimport { BarcodePage } from './../members/barcode/barcode.page';\nimport { AlertController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { ItemsService } from './items.service';\n\ndeclare var alert: any;\n\n@Injectable()\nexport class AlertService {\n\n    constructor(\n        private alertCtrl: AlertController,\n        private itemsService: ItemsService\n    ) {\n    }\n\n    showNotification(from, align, type, message) {\n        alert.notify({\n            icon: 'notifications',\n            message: message\n\n        }, {\n                type: type,\n                timer: 1000,\n                placement: {\n                    from: from,\n                    align: align\n                },\n                template: '' +\n                    '  close' +\n                    'notifications ' +\n                    '{1} ' +\n                    '{2}' +\n                    '' +\n                    '' +\n                    '' +\n                    '' +\n                    ''\n            });\n    }\n\n    async showError(text) {\n\n        const alertct = await this.alertCtrl.create({\n            // message: text,\n            header: 'Fail',\n            subHeader: text,\n            buttons: ['OK']\n        });\n        return await alertct.present();\n    }\n    async showSuccess(text) {\n\n        const alertct = await this.alertCtrl.create({\n            // message: text,\n            header: 'Success',\n            subHeader: text,\n            buttons: ['OK']\n        });\n        return await alertct.present();\n    }\n\n    async showItem(item: Items) {\n        const alertct = await this.alertCtrl.create({\n            header: 'Item',\n            inputs: [\n                {\n                    name: 'Serial number',\n                    type: 'text',\n                    value: `Serial number: ${item.serialNumberItem}`,\n                    placeholder: `Serial number: ${item.serialNumberItem}`,\n                    disabled: true,\n                    label: 'Serial number'\n                },\n                {\n                    name: 'Item name',\n                    type: 'text',\n                    id: 'item-name',\n                    value: `Item name: ${item.itemName}`,\n                    placeholder: `Item name: ${item.itemName}`,\n                    disabled: true,\n                    label: 'Item name'\n                },\n                {\n                    name: 'Totality of item',\n                    type: 'text',\n                    id: 'Totality-of-item',\n                    value: `Totality of item ${item.numberItem}`,\n                    placeholder: `Totality of item: ${item.numberItem}`,\n                    disabled: true,\n                    label: 'Totality of item'\n                },\n                {\n                    name: 'newTotalityOfItem',\n                    type: 'number',\n                    value: item.newNumberItem,\n                    placeholder: 'New totality of item',\n                    label: 'New totality of item',\n                    checked: false\n                },\n                {\n                    name: 'Status item',\n                    type: 'text',\n                    value: `Status item: 1`,\n                    placeholder: 'Status item: 1',\n                    disabled: true,\n                    label: 'Status item'\n                },\n                {\n                    name: 'Category',\n                    type: 'text',\n                    value: `Category ${item.category.id} : ${item.category.namecategory}`,\n                    placeholder: `Category ${item.category.id} : ${item.category.namecategory}`,\n                    disabled: true,\n                    label: 'id : Category'\n                },\n                {\n                    name: 'Bookstands',\n                    type: 'text',\n                    value: `Bookstands ${item.bookstands.numberBookstand} : ${item.bookstands.storehouses.location}`,\n                    placeholder: `Bookstands ${item.bookstands.numberBookstand} : ${item.bookstands.storehouses.location}`,\n                    disabled: true,\n                    label: 'Number of bookstand : Location'\n                },\n                {\n                    name: 'Brands',\n                    type: 'text',\n                    value: `Brand: ${item.brands.name}`,\n                    placeholder: `${item.brands.name}`,\n                    disabled: true,\n                    label: 'Brands'\n                },\n            ],\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    cssClass: 'secondary',\n                    handler: () => {\n                        console.log('Confirm Cancel');\n                    }\n                }, {\n                    text: 'Ok',\n                    handler: data => {\n                        debugger;\n                        if (\n                            item.category === null ||\n                            item.serialNumberItem === null ||\n                            item.numberItem === null ||\n                            item.id === null ||\n                            item.brands === null ||\n                            item.itemName === null ||\n                            // item.newNumberItem === null ||\n                            data.newTotalityOfItem === null ||\n                            item.statusItem === null ||\n                            item.bookstands == null\n                        ) {\n                            this.showError('Error empty value of new totality of item');\n                        } else {\n                            if (Number(item.newNumberItem)) {\n                                this.itemsService.updateItemAlert(item, data.newTotalityOfItem)\n                                    .then((response => {\n                                        if (response !== null ) {\n                                            this.showSuccess('Item updated');\n                                        }\n                                    }))\n                                    .catch((error => {\n                                        this.showError('Server error');\n                                    }));\n                            } else if (Number(data.newTotalityOfItem)) {\n                                this.itemsService.updateItemAlert(item, data.newTotalityOfItem)\n                                    .then((response => {\n                                        if (response !== null ) {\n                                            this.showSuccess('Item updated');\n                                        }\n                                    }))\n                                    .catch((error => {\n                                        this.showError('Server error');\n                                    }));\n                            }\n\n                        }\n                    }\n                }\n            ]\n        });\n        return await alertct.present();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Home',\n      url: '/dashboard',\n      icon: 'home'\n    },\n    {\n      title: 'Barcode',\n      url: '/barcode',\n      icon: 'barcode'\n    },\n    {\n      title: 'Logout',\n      url: '',\n      icon: 'log-out'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  public appPages = [\n    {\n      title: 'Home',\n      url: '/dashboard',\n      icon: 'home'\n    },\n    {\n      title: 'Barcode',\n      url: '/barcode',\n      icon: 'barcode'\n    },\n    {\n      title: 'Logout',\n      url: '',\n      icon: 'log-out'\n    }\n  ];\n\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private authenticationService: AuthenticationService,\n    private router: Router,\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n\n      this.authenticationService.authenticationState.subscribe(state => {\n        if (state) {\n          this.router.navigate(['members', 'dashboard']);\n        } else {\n          this.router.navigate(['login']);\n        }\n      });\n    });\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n -->\n\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          Menu\n        \n      \n      \n        \n          \n            \n              \n              \n                {{p.title}}\n              \n            \n            \n              \n              \n                Logout\n              \n             -->\n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                                                        Menu                                                                                              {{p.title}}                                                                                  Logout                           -->                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarcodePage', 'selector': 'app-barcode'},{'name': 'DashboardPage', 'selector': 'app-dashboard'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAlertService\n\nAlertService\n\nAppModule -->\n\nAlertService->AppModule\n\n\n\n\n\nBookstandService\n\nBookstandService\n\nAppModule -->\n\nBookstandService->AppModule\n\n\n\n\n\nBrandService\n\nBrandService\n\nAppModule -->\n\nBrandService->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nAppModule -->\n\nCategoryService->AppModule\n\n\n\n\n\nItemsNewValueHandlerService\n\nItemsNewValueHandlerService\n\nAppModule -->\n\nItemsNewValueHandlerService->AppModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nAppModule -->\n\nItemsService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nStorehousesService\n\nStorehousesService\n\nAppModule -->\n\nStorehousesService->AppModule\n\n\n\n\n\nUserApiService\n\nUserApiService\n\nAppModule -->\n\nUserApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AlertService\n                        \n                        \n                            BookstandService\n                        \n                        \n                            BrandService\n                        \n                        \n                            CategoryService\n                        \n                        \n                            ItemsNewValueHandlerService\n                        \n                        \n                            ItemsService\n                        \n                        \n                            LoginService\n                        \n                        \n                            SessionService\n                        \n                        \n                            StorehousesService\n                        \n                        \n                            UserApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ItemsNewValueHandlerService } from './services/itemsNewValueHandler.service';\nimport { BrandService } from './services/brand.service';\nimport { StorehousesService } from './services/storehouses.service';\nimport { BookstandService } from './services/bookstand.service';\nimport { CategoryService } from './services/category.service';\nimport { ItemsService } from './services/items.service';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { CommonModule } from '@angular/common';\nimport { LoginService } from './services/login.service';\nimport { UserApiService } from './services/user-api.service';\nimport { SessionService } from './services/session.service';\nimport { AlertService } from './services/alert.service';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HttpClientModule } from '@angular/common/http';\n// import { HTTP } from '@ionic-native/http/ngx';\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    IonicStorageModule.forRoot(),\n    CommonModule,\n    HttpClientModule,\n    // HTTP\n  ],\n  providers: [\n    StatusBar,\n    ItemsService,\n    CategoryService,\n    BookstandService,\n    StorehousesService,\n    BrandService,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    AlertService,\n    SessionService,\n    UserApiService,\n    LoginService,\n    ItemsNewValueHandlerService,\n    CommonModule,\n    BarcodeScanner\n  ],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuardService } from './services/auth-guard.service';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'home', loadChildren: './home/home.module#HomePageModule', canActivate: [AuthGuardService] },\n  { path: 'barcode', loadChildren: './members/barcode/barcode.module#BarcodePageModule', canActivate: [AuthGuardService] },\n  { path: 'login', loadChildren: './public/login/login.module#LoginPageModule' },\n  { path: 'register', loadChildren: './public/register/register.module#RegisterPageModule' },\n  { path: 'dashboard', loadChildren: './members/dashboard/dashboard.module#DashboardPageModule', canActivate: [AuthGuardService]},\n  { path: 'members',\n    canActivate: [AuthGuardService],\n    loadChildren: './members/member-routing.module#MemberRoutingModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-guard.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-guard.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(public auth: AuthenticationService) { }\n\n  canActivate(): boolean {\n    return this.auth.isAuthenticated();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticationState\n                            \n                            \n                                currentUser\n                            \n                            \n                                loading\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                checkToken\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                setAuthenticationState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage, plt: Platform, alertService: AlertService, alertCtrl: AlertController, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plt\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            auth\n                        \n                        \n                    \n                \n            \n            \n                \nauth(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToken\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAuthenticationState\n                        \n                        \n                    \n                \n            \n            \n                \nsetAuthenticationState(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoadingController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { AlertService } from './alert.service';\nimport { TOKEN_AUTH_USERNAME, TOKEN_AUTH_PASSWORD, API_URL } from './api-connect';\nimport { Platform, LoadingController, AlertController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\nimport axios from 'axios';\n\nconst TOKEN_KEY = 'auth-token';\n\nexport class User {\n  name: string;\n  email: string;\n\n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n}\n\nexport class Response {\n  access_token: string;\n  expires_in: number;\n  jti: string;\n  refresh_token: string;\n  scope: string;\n  token_type: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  token = '';\n\n  loading: LoadingController;\n\n  currentUser: User;\n\n  authenticationState = new BehaviorSubject(false);\n\n  constructor(\n    private storage: Storage,\n    private plt: Platform,\n    private alertService: AlertService,\n    private alertCtrl: AlertController,\n    private httpClient: HttpClient\n  ) {\n    this.plt.ready().then(() => {\n      console.log('this.storage constructor AuthService CheckToken');\n      console.log(this.storage);\n      this.checkToken();\n    });\n  }\n\n  auth(username: string, password: string): Promise {\n    if (username === '' || password === '' || username === null || password === null) {\n      this.alertService.showError('Empty credentials');\n    } else {\n      return new Promise((resolve, reject) => {\n        const body = `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}&grant_type=password`;\n        this.httpClient.post(`${API_URL}/login`, body, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(TOKEN_AUTH_USERNAME + ':' + TOKEN_AUTH_PASSWORD)\n          }\n        })\n          .subscribe((response: Response) => {\n              localStorage.setItem('token', `Bearer ${response.access_token}`);\n              this.storage.set('token', `Bearer ${response.access_token}`);\n              resolve(response.access_token);\n              return response;\n          }, error => {\n            console.log(error);\n            this.alertService.showError('Bad credentials');\n          });\n      });\n    }\n\n  }\n\n  setAuthenticationState(value: boolean) {\n    return this.authenticationState.next(value);\n  }\n\n  checkToken() {\n    this.storage.get(TOKEN_KEY).then(res => {\n      if (res) {\n        console.log('this.storage checkToken');\n        console.log(this.storage);\n        this.authenticationState.next(true);\n      }\n    });\n  }\n\n  logout() {\n    return this.storage.remove(TOKEN_KEY).then(() => {\n      console.log('this.storage logout()');\n      console.log(this.storage);\n      this.authenticationState.next(false);\n    });\n  }\n\n  isAuthenticated() {\n    console.log('this.storage isAuth()');\n    console.log(this.storage);\n    return this.authenticationState.value;\n  }\n\n  register(credentials) {\n    return null;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BarcodeData.html":{"url":"classes/BarcodeData.html","title":"class - BarcodeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BarcodeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/members/barcode/barcode.page.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IBarcode\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                cancelled\n                            \n                            \n                                    Public\n                                    Optional\n                                format\n                            \n                            \n                                    Public\n                                    Optional\n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text?, format?, cancelled?)\n                    \n                \n                        \n                            \n                                Defined in src/app/members/barcode/barcode.page.ts:219\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        format\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancelled\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            cancelled\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            format\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:223\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            text\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:222\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BrandService } from './../../services/brand.service';\nimport { CategoryService } from './../../services/category.service';\nimport { BookstandService } from './../../services/bookstand.service';\nimport { AlertService } from './../../services/alert.service';\nimport { SessionService } from './../../services/session.service';\nimport { ItemsService } from './../../services/items.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BarcodeScannerOptions, BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n\n\n@Component({\n  selector: 'app-barcode',\n  templateUrl: './barcode.page.html',\n  styleUrls: ['./barcode.page.scss'],\n})\nexport class BarcodePage implements OnInit {\n  // Barcode scanner variable\n  scannedData: BarcodeData = new BarcodeData(\n    null,\n    null,\n    false\n  );\n  barcodeScannerOptions: BarcodeScannerOptions;\n\n  // Items list\n  itemsList: Items[] = [];\n  selectedItem: Items;\n\n\n  // Brands List\n  brandsList: Brand[] = [];\n  // Categories List\n  categoriesList: Category[] = [];\n  // Bookstands List\n  bookstandsList: Bookstand[] = [];\n  // Dropdown interafce\n  dropDownInterfaceBookstand: ClassDropdownMe[] = [];\n  dropDownInterfaceCategories: ClassDropdownMe[] = [];\n  dropDownInterfaceBrand: ClassDropdownMe[] = [];\n\n  constructor(\n    private barcodeScanner: BarcodeScanner,\n    private itemsService: ItemsService,\n    private sessionService: SessionService,\n    private alertService: AlertService,\n    private bookstandService: BookstandService,\n    private categoryService: CategoryService,\n    private brandService: BrandService) {\n\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n\n  ngOnInit(\n  ) {\n    this.getBookstandsList();\n    this.getCategiresLis();\n    this.getBrandsList();\n  }\n\n  getBookstandsList() {\n    this.bookstandService.getBookstands()\n      .then((response) => {\n        this.bookstandsList = response.data;\n        for (const bookstand of this.bookstandsList) {\n          this.dropDownInterfaceBookstand.push(\n            {\n              name: bookstand.storehouses.location,\n              value: bookstand.id,\n              label: `${bookstand.id} : ${bookstand.storehouses.location}`\n            }\n          );\n        }\n      });\n  }\n  getCategiresLis() {\n    this.categoryService.getCategories()\n      .then((response) => {\n        this.categoriesList = response.data;\n        for (const category of this.categoriesList) {\n          this.dropDownInterfaceCategories.push(\n            {\n              name: category.namecategory,\n              value: category.id,\n              label: `${category.id} : ${category.namecategory}`\n            }\n          );\n        }\n      });\n\n  }\n  getBrandsList() {\n    this.brandService.getBrands()\n      .then((response) => {\n        this.brandsList = response.data;\n        for (const brand of this.brandsList) {\n          this.dropDownInterfaceBrand.push(\n            {\n              name: brand.name,\n              value: brand.id,\n              label: `${brand.id} : ${brand.name}`\n            }\n          );\n        }\n      });\n  }\n\n  getItemsList() {\n    this.itemsService.getItems()\n      .then((response: any) => {\n        this.itemsList = response.data.content;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  findSelectedItemIndex(): number {\n    return this.itemsList.indexOf(this.selectedItem);\n  }\n\n  findBookstand(bookstand): ClassDropdownMe {\n    return this.dropDownInterfaceBookstand.find(item => item.value === bookstand);\n  }\n\n  findCategory(category): ClassDropdownMe {\n    return this.dropDownInterfaceCategories.find(item => item.value === category);\n  }\n\n  findBrand(brand): ClassDropdownMe {\n    return this.dropDownInterfaceBrand.find(item => item.value === brand);\n  }\n\n  scanCode() {\n    this.barcodeScanner.scan().then(barcodeData => {\n      this.scannedData = barcodeData;\n      this.searchItemByCode();\n  }).catch(err => {\n    this.alertService.showError('Inncorrect barcode!');\n    });\n  }\n\n  searchItemByCode() {\n    if (this.scannedData === null || this.scannedData === undefined) {\n      this.alertService.showError('Empty serial number!');\n    } else {\n      this.itemsService.getItem(this.scannedData.text)\n        .then((response: any) => {\n          if (response === undefined) {\n            this.alertService.showError('Incorrect barcode!');\n          } else {\n            this.alertService.showItem(response.data);\n          }\n        }, (error) => {\n          this.alertService.showError('Incorrect barcode!');\n          console.log(error);\n        });\n    }\n  }\n\n  updateNewItem(item) {\n    item.category = this.findCategory(item.category.id);\n    item.bookstand = this.findBookstand(item.bookstands.id);\n    item.brands = this.findBrand(item.brands.id);\n    this.itemsService.updateItem(item)\n      .then((response) => {\n        this.alertService.showSuccess('Updated item');\n        this.ngOnInit();\n      })\n      .catch((error) => {\n        console.log(error);\n        this.alertService.showError('Error during upgrade');\n        this.ngOnInit();\n      });\n\n  }\n\n}\n\nclass ClassItems implements Items {\n\n  constructor(\n    public id?,\n    public serialNumberItem?,\n    public itemName?,\n    public numberItem?,\n    public statusItem?,\n    public newNumberItem?,\n    public brands?: {\n      id?: number,\n      name?: string\n    },\n    public bookstands?: {\n      id?: number,\n      numberBookstand?: number,\n      storehouses?: {\n        id?: number,\n        location?: string\n      },\n    },\n    public category?: {\n      id?: number,\n      namecategory?: string\n    }) {\n  }\n}\n\nclass ClassDropdownMe implements DropDownMe {\n\n  constructor(\n    public name?,\n    public value?,\n    public label?\n  ) { }\n}\n\nclass BarcodeData implements IBarcode {\n\n  constructor(\n    public text?,\n    public format?,\n    public cancelled?\n  ) { }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BarcodePage.html":{"url":"components/BarcodePage.html","title":"component - BarcodePage","body":"\n                   \n\n\n\n\n\n  Components\n  BarcodePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/members/barcode/barcode.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-barcode\n            \n\n            \n                styleUrls\n                ./barcode.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./barcode.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barcodeScannerOptions\n                            \n                            \n                                bookstandsList\n                            \n                            \n                                brandsList\n                            \n                            \n                                categoriesList\n                            \n                            \n                                dropDownInterfaceBookstand\n                            \n                            \n                                dropDownInterfaceBrand\n                            \n                            \n                                dropDownInterfaceCategories\n                            \n                            \n                                itemsList\n                            \n                            \n                                scannedData\n                            \n                            \n                                selectedItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBookstand\n                            \n                            \n                                findBrand\n                            \n                            \n                                findCategory\n                            \n                            \n                                findSelectedItemIndex\n                            \n                            \n                                getBookstandsList\n                            \n                            \n                                getBrandsList\n                            \n                            \n                                getCategiresLis\n                            \n                            \n                                getItemsList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scanCode\n                            \n                            \n                                searchItemByCode\n                            \n                            \n                                updateNewItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(barcodeScanner: BarcodeScanner, itemsService: ItemsService, sessionService: SessionService, alertService: AlertService, bookstandService: BookstandService, categoryService: CategoryService, brandService: BrandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/members/barcode/barcode.page.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        barcodeScanner\n                                                  \n                                                        \n                                                                    BarcodeScanner\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemsService\n                                                  \n                                                        \n                                                                        ItemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookstandService\n                                                  \n                                                        \n                                                                        BookstandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        brandService\n                                                  \n                                                        \n                                                                        BrandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBookstand\n                        \n                        \n                    \n                \n            \n            \n                \nfindBookstand(bookstand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookstand\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ClassDropdownMe\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBrand\n                        \n                        \n                    \n                \n            \n            \n                \nfindBrand(brand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brand\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ClassDropdownMe\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findCategory\n                        \n                        \n                    \n                \n            \n            \n                \nfindCategory(category)\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ClassDropdownMe\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findSelectedItemIndex\n                        \n                        \n                    \n                \n            \n            \n                \nfindSelectedItemIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookstandsList\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookstandsList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrandsList\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrandsList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCategiresLis\n                        \n                        \n                    \n                \n            \n            \n                \ngetCategiresLis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsList\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scanCode\n                        \n                        \n                    \n                \n            \n            \n                \nscanCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchItemByCode\n                        \n                        \n                    \n                \n            \n            \n                \nsearchItemByCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateNewItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateNewItem(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/barcode/barcode.page.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            barcodeScannerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BarcodeScannerOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookstandsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Bookstand[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brandsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Brand[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoriesList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropDownInterfaceBookstand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassDropdownMe[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropDownInterfaceBrand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassDropdownMe[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropDownInterfaceCategories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassDropdownMe[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Items[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scannedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BarcodeData\n\n                        \n                    \n                    \n                        \n                            Default value : new BarcodeData(\n    null,\n    null,\n    false\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Items\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { BrandService } from './../../services/brand.service';\nimport { CategoryService } from './../../services/category.service';\nimport { BookstandService } from './../../services/bookstand.service';\nimport { AlertService } from './../../services/alert.service';\nimport { SessionService } from './../../services/session.service';\nimport { ItemsService } from './../../services/items.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BarcodeScannerOptions, BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n\n\n@Component({\n  selector: 'app-barcode',\n  templateUrl: './barcode.page.html',\n  styleUrls: ['./barcode.page.scss'],\n})\nexport class BarcodePage implements OnInit {\n  // Barcode scanner variable\n  scannedData: BarcodeData = new BarcodeData(\n    null,\n    null,\n    false\n  );\n  barcodeScannerOptions: BarcodeScannerOptions;\n\n  // Items list\n  itemsList: Items[] = [];\n  selectedItem: Items;\n\n\n  // Brands List\n  brandsList: Brand[] = [];\n  // Categories List\n  categoriesList: Category[] = [];\n  // Bookstands List\n  bookstandsList: Bookstand[] = [];\n  // Dropdown interafce\n  dropDownInterfaceBookstand: ClassDropdownMe[] = [];\n  dropDownInterfaceCategories: ClassDropdownMe[] = [];\n  dropDownInterfaceBrand: ClassDropdownMe[] = [];\n\n  constructor(\n    private barcodeScanner: BarcodeScanner,\n    private itemsService: ItemsService,\n    private sessionService: SessionService,\n    private alertService: AlertService,\n    private bookstandService: BookstandService,\n    private categoryService: CategoryService,\n    private brandService: BrandService) {\n\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n\n  ngOnInit(\n  ) {\n    this.getBookstandsList();\n    this.getCategiresLis();\n    this.getBrandsList();\n  }\n\n  getBookstandsList() {\n    this.bookstandService.getBookstands()\n      .then((response) => {\n        this.bookstandsList = response.data;\n        for (const bookstand of this.bookstandsList) {\n          this.dropDownInterfaceBookstand.push(\n            {\n              name: bookstand.storehouses.location,\n              value: bookstand.id,\n              label: `${bookstand.id} : ${bookstand.storehouses.location}`\n            }\n          );\n        }\n      });\n  }\n  getCategiresLis() {\n    this.categoryService.getCategories()\n      .then((response) => {\n        this.categoriesList = response.data;\n        for (const category of this.categoriesList) {\n          this.dropDownInterfaceCategories.push(\n            {\n              name: category.namecategory,\n              value: category.id,\n              label: `${category.id} : ${category.namecategory}`\n            }\n          );\n        }\n      });\n\n  }\n  getBrandsList() {\n    this.brandService.getBrands()\n      .then((response) => {\n        this.brandsList = response.data;\n        for (const brand of this.brandsList) {\n          this.dropDownInterfaceBrand.push(\n            {\n              name: brand.name,\n              value: brand.id,\n              label: `${brand.id} : ${brand.name}`\n            }\n          );\n        }\n      });\n  }\n\n  getItemsList() {\n    this.itemsService.getItems()\n      .then((response: any) => {\n        this.itemsList = response.data.content;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  findSelectedItemIndex(): number {\n    return this.itemsList.indexOf(this.selectedItem);\n  }\n\n  findBookstand(bookstand): ClassDropdownMe {\n    return this.dropDownInterfaceBookstand.find(item => item.value === bookstand);\n  }\n\n  findCategory(category): ClassDropdownMe {\n    return this.dropDownInterfaceCategories.find(item => item.value === category);\n  }\n\n  findBrand(brand): ClassDropdownMe {\n    return this.dropDownInterfaceBrand.find(item => item.value === brand);\n  }\n\n  scanCode() {\n    this.barcodeScanner.scan().then(barcodeData => {\n      this.scannedData = barcodeData;\n      this.searchItemByCode();\n  }).catch(err => {\n    this.alertService.showError('Inncorrect barcode!');\n    });\n  }\n\n  searchItemByCode() {\n    if (this.scannedData === null || this.scannedData === undefined) {\n      this.alertService.showError('Empty serial number!');\n    } else {\n      this.itemsService.getItem(this.scannedData.text)\n        .then((response: any) => {\n          if (response === undefined) {\n            this.alertService.showError('Incorrect barcode!');\n          } else {\n            this.alertService.showItem(response.data);\n          }\n        }, (error) => {\n          this.alertService.showError('Incorrect barcode!');\n          console.log(error);\n        });\n    }\n  }\n\n  updateNewItem(item) {\n    item.category = this.findCategory(item.category.id);\n    item.bookstand = this.findBookstand(item.bookstands.id);\n    item.brands = this.findBrand(item.brands.id);\n    this.itemsService.updateItem(item)\n      .then((response) => {\n        this.alertService.showSuccess('Updated item');\n        this.ngOnInit();\n      })\n      .catch((error) => {\n        console.log(error);\n        this.alertService.showError('Error during upgrade');\n        this.ngOnInit();\n      });\n\n  }\n\n}\n\nclass ClassItems implements Items {\n\n  constructor(\n    public id?,\n    public serialNumberItem?,\n    public itemName?,\n    public numberItem?,\n    public statusItem?,\n    public newNumberItem?,\n    public brands?: {\n      id?: number,\n      name?: string\n    },\n    public bookstands?: {\n      id?: number,\n      numberBookstand?: number,\n      storehouses?: {\n        id?: number,\n        location?: string\n      },\n    },\n    public category?: {\n      id?: number,\n      namecategory?: string\n    }) {\n  }\n}\n\nclass ClassDropdownMe implements DropDownMe {\n\n  constructor(\n    public name?,\n    public value?,\n    public label?\n  ) { }\n}\n\nclass BarcodeData implements IBarcode {\n\n  constructor(\n    public text?,\n    public format?,\n    public cancelled?\n  ) { }\n}\n\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Barcode\n    \n  \n\n\n\n  \n    \n      \n        \n          \n            Scan barcode\n          \n\n          \n            Scan\n          \n        \n        \n          \n            \n              \n            \n            \n              Find\n                item\n            \n\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./barcode.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Barcode                                                Scan barcode                                Scan                                                                                                    Find                item                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarcodePage', 'selector': 'app-barcode'},{'name': 'DashboardPage', 'selector': 'app-dashboard'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BarcodePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BarcodePageModule.html":{"url":"modules/BarcodePageModule.html","title":"module - BarcodePageModule","body":"\n                   \n\n\n\n\n    Modules\n    BarcodePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BarcodePageModule\n\n\n\ncluster_BarcodePageModule_declarations\n\n\n\n\nBarcodePage\n\nBarcodePage\n\n\n\nBarcodePageModule\n\nBarcodePageModule\n\nBarcodePageModule -->\n\nBarcodePage->BarcodePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/members/barcode/barcode.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BarcodePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuardService } from './../../services/auth-guard.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BarcodePage } from './barcode.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BarcodePage,\n    canActivate: [AuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BarcodePage]\n})\nexport class BarcodePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bookstand.html":{"url":"interfaces/Bookstand.html","title":"interface - Bookstand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bookstand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IBookstand.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        numberBookstand\n                                \n                                \n                                            Optional\n                                        storehouses\n                                \n                                \n                                            Optional\n                                        storehouses_id\n                                \n                                \n                                            Optional\n                                        storehouses_id_id\n                                \n                                \n                                            Optional\n                                        storehouses_location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberBookstand\n                                    \n                                \n                                \n                                    \n                                        numberBookstand:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storehouses\n                                    \n                                \n                                \n                                    \n                                        storehouses:         Storehouses\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Storehouses\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storehouses_id\n                                    \n                                \n                                \n                                    \n                                        storehouses_id:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storehouses_id_id\n                                    \n                                \n                                \n                                    \n                                        storehouses_id_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storehouses_location\n                                    \n                                \n                                \n                                    \n                                        storehouses_location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Bookstand {\n    id?: number,\n    numberBookstand?: number,\n    storehouses_id?: {\n        id?: number,\n        location?: string\n    },\n    storehouses_location?: string,\n    storehouses_id_id?: number,\n    storehouses?: Storehouses\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookstandService.html":{"url":"injectables/BookstandService.html","title":"injectable - BookstandService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookstandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bookstand.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewBookstand\n                            \n                            \n                                deleteBookstand\n                            \n                            \n                                getBookstands\n                            \n                            \n                                updateBookstand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storehousesService: StorehousesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bookstand.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storehousesService\n                                                  \n                                                        \n                                                                        StorehousesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewBookstand\n                        \n                        \n                    \n                \n            \n            \n                \naddNewBookstand(bookstand: Bookstand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookstand.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookstand\n                                    \n                                                Bookstand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBookstand\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBookstand(bookstand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookstand.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookstand\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookstands\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookstands()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookstand.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBookstand\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBookstand(bookstand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookstand.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookstand\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\nimport { StorehousesService } from './storehouses.service';\nimport { Injectable } from '@angular/core';\nimport axios from 'axios';\n\n\n\n@Injectable()\nexport class BookstandService {\n\n\n    constructor(\n        private storehousesService: StorehousesService) {\n    }\n\n    getBookstands(): any {\n        const path = API_URL + `/bookstands`;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .then((response) => {\n                return response;\n            })\n            .catch((error) => {\n                console.log('Brand service getBrands');\n                console.log(error);\n            });\n    }\n\n    addNewBookstand(bookstand: Bookstand) {\n        console.log('Bookstand');\n        console.log(bookstand);\n        const path = API_URL + `/bookstands/new`;\n        const body = {\n            numberBookstand: bookstand.numberBookstand,\n            storehouses_id: bookstand.storehouses_location\n        };\n        //                 /\\ zamiast dwojki wez z bookstand id!!!!!\n        console.log('body');\n        console.log(body);\n        return axios.post(path, body, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .catch((error) => {\n                console.log('Brand service - add new brand');\n                console.log(error);\n            });\n    }\n\n\n\n    deleteBookstand(bookstand) {\n        const path = API_URL + `/bookstands/delete/${bookstand.id}`;\n        return axios.delete(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateBookstand(bookstand) {\n        const path = API_URL + `/bookstands/update/${bookstand.id}`;\n        const body = {\n            numberBookstand: bookstand.numberBookstand,\n            storehouses_id: bookstand.storehouses[0].id\n        };\n        return axios.put(path, body, {headers: {\n            'Authorization': localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n        }});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand.html":{"url":"interfaces/Brand.html","title":"interface - Brand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IBrand.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Brand {\n    id?: number,\n    name?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandService.html":{"url":"injectables/BrandService.html","title":"injectable - BrandService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BrandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/brand.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewBrand\n                            \n                            \n                                deleteBrand\n                            \n                            \n                                getBrands\n                            \n                            \n                                updateBrand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/brand.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewBrand\n                        \n                        \n                    \n                \n            \n            \n                \naddNewBrand(brand: Brand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/brand.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brand\n                                    \n                                                Brand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBrand\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBrand(brand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/brand.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brand\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrands\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrands()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/brand.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBrand\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBrand(brand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/brand.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brand\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport axios, { AxiosPromise } from 'axios';\n\n\n@Injectable()\nexport class BrandService {\n\n\n    constructor() {\n    }\n\n    getBrands(): any {\n        const path = API_URL + `/brands`;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n            .catch((error) => {\n                console.log('Brand service getBrands');\n                console.log(error);\n            });\n    }\n\n    addNewBrand(brand: Brand) {\n        const path = API_URL + `/brands/new`;\n        const body = {\n            brandName: brand.name\n        };\n        return axios.post(path, body, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .catch((error) => {\n                console.log('Brand service - add new brand');\n                console.log(error);\n            });\n    }\n\n    deleteBrand(brand) {\n        const path = API_URL + `/brand/delete/${brand.id}`;\n        return axios.delete(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateBrand(brand) {\n        const path = API_URL + `/brand/update/${brand.id}`;\n        const body = {\n            brandName: brand.name\n        };\n        return axios.put(path, body, {headers: {\n            'Authorization': localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n        }});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ICategory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        namecategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namecategory\n                                    \n                                \n                                \n                                    \n                                        namecategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Category {\n    id?: number,\n    namecategory?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategories\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewCategory\n                        \n                        \n                    \n                \n            \n            \n                \naddNewCategory(category: Category)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                Category\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCategory\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCategories\n                        \n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCategory\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCategory(category)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport axios, { AxiosPromise } from 'axios';\n\n\n@Injectable()\nexport class CategoryService {\n\n    constructor() {\n    }\n\n    getCategories(): any {\n        const path = API_URL + `/category`;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n            .catch((error) => {\n                console.log('Category service getCategorys');\n                console.log(error);\n            });\n    }\n\n    addNewCategory(category: Category) {\n        const path = API_URL + `/category/new`;\n        const body = {\n            nameCategory: category.namecategory\n        };\n        return axios.post(path, body, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .catch((error) => {\n                console.log('Category service - not add new category');\n                console.log(error);\n            });\n    }\n\n    deleteCategory(category) {\n        const path = API_URL + `/category/delete/${category.id}`;\n        return axios.delete(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateCategory(category) {\n        const path = API_URL + `/category/update/${category.id}`;\n        const body = {\n            nameCategory: category.namecategory\n        };\n        return axios.put(path, body, {headers: {\n            'Authorization': localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n        }});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassDropdownMe.html":{"url":"classes/ClassDropdownMe.html","title":"class - ClassDropdownMe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassDropdownMe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/members/barcode/barcode.page.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            DropDownMe\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                label\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?, value?, label?)\n                    \n                \n                        \n                            \n                                Defined in src/app/members/barcode/barcode.page.ts:210\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            label\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:215\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:214\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BrandService } from './../../services/brand.service';\nimport { CategoryService } from './../../services/category.service';\nimport { BookstandService } from './../../services/bookstand.service';\nimport { AlertService } from './../../services/alert.service';\nimport { SessionService } from './../../services/session.service';\nimport { ItemsService } from './../../services/items.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BarcodeScannerOptions, BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n\n\n@Component({\n  selector: 'app-barcode',\n  templateUrl: './barcode.page.html',\n  styleUrls: ['./barcode.page.scss'],\n})\nexport class BarcodePage implements OnInit {\n  // Barcode scanner variable\n  scannedData: BarcodeData = new BarcodeData(\n    null,\n    null,\n    false\n  );\n  barcodeScannerOptions: BarcodeScannerOptions;\n\n  // Items list\n  itemsList: Items[] = [];\n  selectedItem: Items;\n\n\n  // Brands List\n  brandsList: Brand[] = [];\n  // Categories List\n  categoriesList: Category[] = [];\n  // Bookstands List\n  bookstandsList: Bookstand[] = [];\n  // Dropdown interafce\n  dropDownInterfaceBookstand: ClassDropdownMe[] = [];\n  dropDownInterfaceCategories: ClassDropdownMe[] = [];\n  dropDownInterfaceBrand: ClassDropdownMe[] = [];\n\n  constructor(\n    private barcodeScanner: BarcodeScanner,\n    private itemsService: ItemsService,\n    private sessionService: SessionService,\n    private alertService: AlertService,\n    private bookstandService: BookstandService,\n    private categoryService: CategoryService,\n    private brandService: BrandService) {\n\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n\n  ngOnInit(\n  ) {\n    this.getBookstandsList();\n    this.getCategiresLis();\n    this.getBrandsList();\n  }\n\n  getBookstandsList() {\n    this.bookstandService.getBookstands()\n      .then((response) => {\n        this.bookstandsList = response.data;\n        for (const bookstand of this.bookstandsList) {\n          this.dropDownInterfaceBookstand.push(\n            {\n              name: bookstand.storehouses.location,\n              value: bookstand.id,\n              label: `${bookstand.id} : ${bookstand.storehouses.location}`\n            }\n          );\n        }\n      });\n  }\n  getCategiresLis() {\n    this.categoryService.getCategories()\n      .then((response) => {\n        this.categoriesList = response.data;\n        for (const category of this.categoriesList) {\n          this.dropDownInterfaceCategories.push(\n            {\n              name: category.namecategory,\n              value: category.id,\n              label: `${category.id} : ${category.namecategory}`\n            }\n          );\n        }\n      });\n\n  }\n  getBrandsList() {\n    this.brandService.getBrands()\n      .then((response) => {\n        this.brandsList = response.data;\n        for (const brand of this.brandsList) {\n          this.dropDownInterfaceBrand.push(\n            {\n              name: brand.name,\n              value: brand.id,\n              label: `${brand.id} : ${brand.name}`\n            }\n          );\n        }\n      });\n  }\n\n  getItemsList() {\n    this.itemsService.getItems()\n      .then((response: any) => {\n        this.itemsList = response.data.content;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  findSelectedItemIndex(): number {\n    return this.itemsList.indexOf(this.selectedItem);\n  }\n\n  findBookstand(bookstand): ClassDropdownMe {\n    return this.dropDownInterfaceBookstand.find(item => item.value === bookstand);\n  }\n\n  findCategory(category): ClassDropdownMe {\n    return this.dropDownInterfaceCategories.find(item => item.value === category);\n  }\n\n  findBrand(brand): ClassDropdownMe {\n    return this.dropDownInterfaceBrand.find(item => item.value === brand);\n  }\n\n  scanCode() {\n    this.barcodeScanner.scan().then(barcodeData => {\n      this.scannedData = barcodeData;\n      this.searchItemByCode();\n  }).catch(err => {\n    this.alertService.showError('Inncorrect barcode!');\n    });\n  }\n\n  searchItemByCode() {\n    if (this.scannedData === null || this.scannedData === undefined) {\n      this.alertService.showError('Empty serial number!');\n    } else {\n      this.itemsService.getItem(this.scannedData.text)\n        .then((response: any) => {\n          if (response === undefined) {\n            this.alertService.showError('Incorrect barcode!');\n          } else {\n            this.alertService.showItem(response.data);\n          }\n        }, (error) => {\n          this.alertService.showError('Incorrect barcode!');\n          console.log(error);\n        });\n    }\n  }\n\n  updateNewItem(item) {\n    item.category = this.findCategory(item.category.id);\n    item.bookstand = this.findBookstand(item.bookstands.id);\n    item.brands = this.findBrand(item.brands.id);\n    this.itemsService.updateItem(item)\n      .then((response) => {\n        this.alertService.showSuccess('Updated item');\n        this.ngOnInit();\n      })\n      .catch((error) => {\n        console.log(error);\n        this.alertService.showError('Error during upgrade');\n        this.ngOnInit();\n      });\n\n  }\n\n}\n\nclass ClassItems implements Items {\n\n  constructor(\n    public id?,\n    public serialNumberItem?,\n    public itemName?,\n    public numberItem?,\n    public statusItem?,\n    public newNumberItem?,\n    public brands?: {\n      id?: number,\n      name?: string\n    },\n    public bookstands?: {\n      id?: number,\n      numberBookstand?: number,\n      storehouses?: {\n        id?: number,\n        location?: string\n      },\n    },\n    public category?: {\n      id?: number,\n      namecategory?: string\n    }) {\n  }\n}\n\nclass ClassDropdownMe implements DropDownMe {\n\n  constructor(\n    public name?,\n    public value?,\n    public label?\n  ) { }\n}\n\nclass BarcodeData implements IBarcode {\n\n  constructor(\n    public text?,\n    public format?,\n    public cancelled?\n  ) { }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassItems.html":{"url":"classes/ClassItems.html","title":"class - ClassItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/members/barcode/barcode.page.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Items\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                bookstands\n                            \n                            \n                                    Public\n                                    Optional\n                                brands\n                            \n                            \n                                    Public\n                                    Optional\n                                category\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                itemName\n                            \n                            \n                                    Public\n                                    Optional\n                                newNumberItem\n                            \n                            \n                                    Public\n                                    Optional\n                                numberItem\n                            \n                            \n                                    Public\n                                    Optional\n                                serialNumberItem\n                            \n                            \n                                    Public\n                                    Optional\n                                statusItem\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?, serialNumberItem?, itemName?, numberItem?, statusItem?, newNumberItem?, brands?: literal type, bookstands?: literal type, category?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/members/barcode/barcode.page.ts:182\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        serialNumberItem\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemName\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        numberItem\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusItem\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        newNumberItem\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        brands\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookstands\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        category\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            bookstands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:195\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:191\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:203\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:185\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            itemName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            newNumberItem\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:190\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            numberItem\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            serialNumberItem\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            statusItem\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/members/barcode/barcode.page.ts:189\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BrandService } from './../../services/brand.service';\nimport { CategoryService } from './../../services/category.service';\nimport { BookstandService } from './../../services/bookstand.service';\nimport { AlertService } from './../../services/alert.service';\nimport { SessionService } from './../../services/session.service';\nimport { ItemsService } from './../../services/items.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BarcodeScannerOptions, BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n\n\n@Component({\n  selector: 'app-barcode',\n  templateUrl: './barcode.page.html',\n  styleUrls: ['./barcode.page.scss'],\n})\nexport class BarcodePage implements OnInit {\n  // Barcode scanner variable\n  scannedData: BarcodeData = new BarcodeData(\n    null,\n    null,\n    false\n  );\n  barcodeScannerOptions: BarcodeScannerOptions;\n\n  // Items list\n  itemsList: Items[] = [];\n  selectedItem: Items;\n\n\n  // Brands List\n  brandsList: Brand[] = [];\n  // Categories List\n  categoriesList: Category[] = [];\n  // Bookstands List\n  bookstandsList: Bookstand[] = [];\n  // Dropdown interafce\n  dropDownInterfaceBookstand: ClassDropdownMe[] = [];\n  dropDownInterfaceCategories: ClassDropdownMe[] = [];\n  dropDownInterfaceBrand: ClassDropdownMe[] = [];\n\n  constructor(\n    private barcodeScanner: BarcodeScanner,\n    private itemsService: ItemsService,\n    private sessionService: SessionService,\n    private alertService: AlertService,\n    private bookstandService: BookstandService,\n    private categoryService: CategoryService,\n    private brandService: BrandService) {\n\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n\n  ngOnInit(\n  ) {\n    this.getBookstandsList();\n    this.getCategiresLis();\n    this.getBrandsList();\n  }\n\n  getBookstandsList() {\n    this.bookstandService.getBookstands()\n      .then((response) => {\n        this.bookstandsList = response.data;\n        for (const bookstand of this.bookstandsList) {\n          this.dropDownInterfaceBookstand.push(\n            {\n              name: bookstand.storehouses.location,\n              value: bookstand.id,\n              label: `${bookstand.id} : ${bookstand.storehouses.location}`\n            }\n          );\n        }\n      });\n  }\n  getCategiresLis() {\n    this.categoryService.getCategories()\n      .then((response) => {\n        this.categoriesList = response.data;\n        for (const category of this.categoriesList) {\n          this.dropDownInterfaceCategories.push(\n            {\n              name: category.namecategory,\n              value: category.id,\n              label: `${category.id} : ${category.namecategory}`\n            }\n          );\n        }\n      });\n\n  }\n  getBrandsList() {\n    this.brandService.getBrands()\n      .then((response) => {\n        this.brandsList = response.data;\n        for (const brand of this.brandsList) {\n          this.dropDownInterfaceBrand.push(\n            {\n              name: brand.name,\n              value: brand.id,\n              label: `${brand.id} : ${brand.name}`\n            }\n          );\n        }\n      });\n  }\n\n  getItemsList() {\n    this.itemsService.getItems()\n      .then((response: any) => {\n        this.itemsList = response.data.content;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  findSelectedItemIndex(): number {\n    return this.itemsList.indexOf(this.selectedItem);\n  }\n\n  findBookstand(bookstand): ClassDropdownMe {\n    return this.dropDownInterfaceBookstand.find(item => item.value === bookstand);\n  }\n\n  findCategory(category): ClassDropdownMe {\n    return this.dropDownInterfaceCategories.find(item => item.value === category);\n  }\n\n  findBrand(brand): ClassDropdownMe {\n    return this.dropDownInterfaceBrand.find(item => item.value === brand);\n  }\n\n  scanCode() {\n    this.barcodeScanner.scan().then(barcodeData => {\n      this.scannedData = barcodeData;\n      this.searchItemByCode();\n  }).catch(err => {\n    this.alertService.showError('Inncorrect barcode!');\n    });\n  }\n\n  searchItemByCode() {\n    if (this.scannedData === null || this.scannedData === undefined) {\n      this.alertService.showError('Empty serial number!');\n    } else {\n      this.itemsService.getItem(this.scannedData.text)\n        .then((response: any) => {\n          if (response === undefined) {\n            this.alertService.showError('Incorrect barcode!');\n          } else {\n            this.alertService.showItem(response.data);\n          }\n        }, (error) => {\n          this.alertService.showError('Incorrect barcode!');\n          console.log(error);\n        });\n    }\n  }\n\n  updateNewItem(item) {\n    item.category = this.findCategory(item.category.id);\n    item.bookstand = this.findBookstand(item.bookstands.id);\n    item.brands = this.findBrand(item.brands.id);\n    this.itemsService.updateItem(item)\n      .then((response) => {\n        this.alertService.showSuccess('Updated item');\n        this.ngOnInit();\n      })\n      .catch((error) => {\n        console.log(error);\n        this.alertService.showError('Error during upgrade');\n        this.ngOnInit();\n      });\n\n  }\n\n}\n\nclass ClassItems implements Items {\n\n  constructor(\n    public id?,\n    public serialNumberItem?,\n    public itemName?,\n    public numberItem?,\n    public statusItem?,\n    public newNumberItem?,\n    public brands?: {\n      id?: number,\n      name?: string\n    },\n    public bookstands?: {\n      id?: number,\n      numberBookstand?: number,\n      storehouses?: {\n        id?: number,\n        location?: string\n      },\n    },\n    public category?: {\n      id?: number,\n      namecategory?: string\n    }) {\n  }\n}\n\nclass ClassDropdownMe implements DropDownMe {\n\n  constructor(\n    public name?,\n    public value?,\n    public label?\n  ) { }\n}\n\nclass BarcodeData implements IBarcode {\n\n  constructor(\n    public text?,\n    public format?,\n    public cancelled?\n  ) { }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardPage.html":{"url":"components/DashboardPage.html","title":"component - DashboardPage","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/members/dashboard/dashboard.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                rootPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/members/dashboard/dashboard.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/dashboard/dashboard.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/members/dashboard/dashboard.page.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'dashboard',\n      url: '/dashboard',\n      icon: 'home'\n    },\n    {\n      title: 'barcode',\n      url: '/barcode',\n      icon: 'list'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/dashboard/dashboard.page.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'LoginPage'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/members/dashboard/dashboard.page.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './../../services/authentication.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n  rootPage: any = 'LoginPage';\n  public appPages = [\n    {\n      title: 'dashboard',\n      url: '/dashboard',\n      icon: 'home'\n    },\n    {\n      title: 'barcode',\n      url: '/barcode',\n      icon: 'list'\n    }\n  ];\n  constructor(private authService: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Home\n    \n  \n\n\n\n  \n    \n    \n      Get Started\n      Welcome to iTechnologies App\n    \n    \n      Quick Guide\n      Click on the menu on the upper left corner of the screen next switch to the barcode tab. Scan your barcode or manually\n      enter the barcode and after that add the new number of items. And Done!\n    \n  \n  \n    \n      Resources\n    \n    \n      \n      Open source licence\n     -->\n    \n      \n      Any bugs? Create an issue here.\n    \n    \n      \n      Author\n    \n  \n\n    \n\n    \n                \n                    ./dashboard.page.scss\n                \n                .welcome-card ion-img {\n    max-height: 35vh;\n    overflow: hidden;\n}\n\n.home {\n    background: #56CA96;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Home                      Get Started      Welcome to iTechnologies App              Quick Guide      Click on the menu on the upper left corner of the screen next switch to the barcode tab. Scan your barcode or manually      enter the barcode and after that add the new number of items. And Done!                  Resources                    Open source licence     -->                Any bugs? Create an issue here.                    Author      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarcodePage', 'selector': 'app-barcode'},{'name': 'DashboardPage', 'selector': 'app-dashboard'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardPageModule.html":{"url":"modules/DashboardPageModule.html","title":"module - DashboardPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardPageModule\n\n\n\ncluster_DashboardPageModule_declarations\n\n\n\n\nDashboardPage\n\nDashboardPage\n\n\n\nDashboardPageModule\n\nDashboardPageModule\n\nDashboardPageModule -->\n\nDashboardPage->DashboardPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/members/dashboard/dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuardService } from './../../services/auth-guard.service';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/compiler/src/core';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPage } from './dashboard.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage,\n    canActivate: [AuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropDownBookstand.html":{"url":"interfaces/DropDownBookstand.html","title":"interface - DropDownBookstand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropDownBookstand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IDropdownItems.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface DropDownMe {\n    name?: string,\n    value?: number,\n    label?: string\n}\n\ninterface DropDownBookstand {\n    name?: string,\n    value?: number,\n    label?: string\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropDownMe.html":{"url":"interfaces/DropDownMe.html","title":"interface - DropDownMe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropDownMe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IDropdownItems.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface DropDownMe {\n    name?: string,\n    value?: number,\n    label?: string\n}\n\ninterface DropDownBookstand {\n    name?: string,\n    value?: number,\n    label?: string\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n}\n\n    \n\n    \n        \n  \n    \n      Ionic Blank\n    \n  \n\n\n\n  The world is your oyster.\n  If you get lost, the docs will be your guide.\n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Ionic Blank        The world is your oyster.  If you get lost, the docs will be your guide.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarcodePage', 'selector': 'app-barcode'},{'name': 'DashboardPage', 'selector': 'app-dashboard'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBarcode.html":{"url":"interfaces/IBarcode.html","title":"interface - IBarcode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBarcode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IBarcode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cancelled\n                                \n                                \n                                            Optional\n                                        format\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelled\n                                    \n                                \n                                \n                                    \n                                        cancelled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IBarcode {\n    text?: string;\n    format?: string;\n    cancelled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Items.html":{"url":"interfaces/Items.html","title":"interface - Items","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Items\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IItems.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bookstand\n                                \n                                \n                                            Optional\n                                        bookstands\n                                \n                                \n                                            Optional\n                                        brands\n                                \n                                \n                                            Optional\n                                        category\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        itemName\n                                \n                                \n                                            Optional\n                                        newNumberItem\n                                \n                                \n                                            Optional\n                                        numberItem\n                                \n                                \n                                            Optional\n                                        serialNumberItem\n                                \n                                \n                                            Optional\n                                        statusItem\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookstand\n                                    \n                                \n                                \n                                    \n                                        bookstand:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bookstands\n                                    \n                                \n                                \n                                    \n                                        bookstands:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brands\n                                    \n                                \n                                \n                                    \n                                        brands:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemName\n                                    \n                                \n                                \n                                    \n                                        itemName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newNumberItem\n                                    \n                                \n                                \n                                    \n                                        newNumberItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberItem\n                                    \n                                \n                                \n                                    \n                                        numberItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialNumberItem\n                                    \n                                \n                                \n                                    \n                                        serialNumberItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusItem\n                                    \n                                \n                                \n                                    \n                                        statusItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Items {\n    id?: number,\n    serialNumberItem?: number,\n    itemName?: string,\n    numberItem?: number,\n    statusItem?: number,\n    newNumberItem?: number,\n    brands?: {\n        id?: number,\n        name?: string\n    },\n    bookstands?: {\n        id?: number,\n        numberBookstand?: number,\n        storehouses?: {\n            id?: number,\n            location?: string\n        },\n    },\n    category?: {\n        id?: number,\n        namecategory?: string,\n        name?: string\n    }\n    bookstand?: {\n        name?: string,\n        value?: number,\n        label?: string\n    }\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsNewValueHandlerService.html":{"url":"injectables/ItemsNewValueHandlerService.html","title":"injectable - ItemsNewValueHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemsNewValueHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/itemsNewValueHandler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setNewValueOfTotalityItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(barcodePage: BarcodePage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/itemsNewValueHandler.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        barcodePage\n                                                  \n                                                        \n                                                                        BarcodePage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNewValueOfTotalityItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetNewValueOfTotalityItem(data, item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/itemsNewValueHandler.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BarcodePage } from './../members/barcode/barcode.page';\nimport { API_URL } from './api-connect';\nimport { SessionService } from './session.service';\nimport { Injectable } from '@angular/core';\nimport { AlertService } from './alert.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport axios, { AxiosPromise } from 'axios';\n\n\n@Injectable()\nexport class ItemsNewValueHandlerService {\n\n    constructor(\n        private barcodePage: BarcodePage\n    ) {\n\n    }\n\n    setNewValueOfTotalityItem( data, item ) {\n        this.barcodePage.updateNewItem(item);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsService.html":{"url":"injectables/ItemsService.html","title":"injectable - ItemsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/items.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewItem\n                            \n                            \n                                deleteItem\n                            \n                            \n                                getItem\n                            \n                            \n                                getItems\n                            \n                            \n                                updateItem\n                            \n                            \n                                updateItemAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/items.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewItem\n                        \n                        \n                    \n                \n            \n            \n                \naddNewItem(item: Items)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/items.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Items\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/items.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(serialNumberItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/items.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serialNumberItem\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItems\n                        \n                        \n                    \n                \n            \n            \n                \ngetItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/items.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItem(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/items.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItemAlert\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItemAlert(item, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/items.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\nimport { SessionService } from './session.service';\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport axios, { AxiosPromise } from 'axios';\n\n\n@Injectable()\nexport class ItemsService {\n\n\n    constructor(\n        private sessionService: SessionService) {\n    }\n\n    getItems() {\n        const path = API_URL + `/items`;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .catch((error) => {\n                console.log('Item service getItems');\n                console.log(error);\n            });\n    }\n\n    addNewItem(item: Items) {\n        const path = API_URL + `/item/new2`;\n        const body = {\n            serialNumberItem: item.serialNumberItem,\n            itemName: item.itemName,\n            statusItem: 0,\n            numberItem: +item.numberItem,\n            newNumberItem: item.newNumberItem,\n            brands: item.brands.name,\n            bookstands: item.bookstand.value ,\n            category: item.category.name,\n            user_id: this.sessionService.currentUser.data.id\n        };\n        console.log(body);\n        return axios.post(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json',\n            }\n        });\n    }\n\n    deleteItem(item) {\n        const path = API_URL + `/items/delete/${item.serialNumberItem}`;\n        return axios.delete(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateItem(item) {\n        const path = API_URL + `/items/update`;\n        const body = {\n            serialNumberItem: item.serialNumberItem,\n            itemName: item.itemName,\n            numberItem: item.numberItem,\n            statusItem: 0,\n            newNumberItem: item.newNumberItem\n        };\n        return axios.put(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateItemAlert(item, data) {\n        debugger;\n        const path = API_URL + `/items/update`;\n        const body = {\n            serialNumberItem: item.serialNumberItem,\n            itemName: item.itemName,\n            numberItem: item.numberItem,\n            statusItem: 1,\n            newNumberItem: data\n        };\n        return axios.put(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    getItem(serialNumberItem) {\n        const path = API_URL + `/item/${serialNumberItem}`;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        })\n            .then((response => {\n                console.log(response);\n                return response;\n            }))\n            .catch((error) => {\n                console.log('Item service getItem');\n                console.log(error);\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/login/login.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                messageList\n                            \n                            \n                                registerCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createAccount\n                            \n                            \n                                findUserByUsername\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAuthorities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, loadingCtrl: LoadingController, nav: NavController, alertCtrl: AlertController, alertService: AlertService, userApiService: UserApiService, sessionService: SessionService, storage: Storage, itemsService: ItemsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/login/login.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                        UserApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemsService\n                                                  \n                                                        \n                                                                        ItemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/login/login.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findUserByUsername\n                        \n                        \n                    \n                \n            \n            \n                \nfindUserByUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/login/login.page.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/login/login.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/login/login.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAuthorities\n                        \n                        \n                    \n                \n            \n            \n                \nsetAuthorities(role: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/login/login.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoadingController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/login/login.page.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    LOGIN_SUCCESS: 'Logged',\n    TRY_AGAIN: 'An error occured running of server',\n    DISABLED: 'Disabled account',\n    BAD_CREDENTIALS: 'Incorrect data',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/login/login.page.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { username: '', password: '' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/login/login.page.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ItemsService } from './../../services/items.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SessionService } from './../../services/session.service';\nimport { async } from '@angular/core/testing';\nimport { AlertService } from './../../services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './../../services/authentication.service';\nimport { LoadingController, NavController, AlertController } from '@ionic/angular';\nimport { UserApiService } from '../../services/user-api.service';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loading: LoadingController;\n  registerCredentials = { username: '', password: '' };\n\n\n  messageList = {\n    LOGIN_SUCCESS: 'Logged',\n    TRY_AGAIN: 'An error occured running of server',\n    DISABLED: 'Disabled account',\n    BAD_CREDENTIALS: 'Incorrect data',\n  };\n\n  constructor(\n    private authService: AuthenticationService,\n    private loadingCtrl: LoadingController,\n    private nav: NavController,\n    private alertCtrl: AlertController,\n    private alertService: AlertService,\n    private userApiService: UserApiService,\n    private sessionService: SessionService,\n    private storage: Storage,\n    private itemsService: ItemsService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public createAccount() {\n    this.nav.navigateForward('register');\n  }\n\n  login() {\n    let run = true;\n\n    if (\n      this.registerCredentials.password === '' ||\n      this.registerCredentials.username === ''\n    ) {\n      run = false;\n    }\n    if (\n      this.registerCredentials.username === null ||\n      this.registerCredentials.password === null\n    ) {\n      run = false;\n    }\n    if (this.registerCredentials.username === undefined ||\n      this.registerCredentials.password === undefined\n    ) {\n      run = false;\n    }\n    if (run) {\n      this.authService.auth(this.registerCredentials.username, this.registerCredentials.password)\n        .then(data => {\n          this.authService.token = localStorage.getItem('token');\n          this.findUserByUsername();\n        }, (error) => {\n          console.log(error);\n        }\n        ).catch((error => {\n          console.log(error);\n        }\n        ));\n    } else {\n      this.alertService.showError('Empty credentials');\n    }\n\n  }\n\n  findUserByUsername() {\n    this.userApiService.findUserByUsername(this.registerCredentials.username)\n      .then((response: any) => {\n        this.sessionService.currentUser = response.data;\n        // console.log(this.sessionService.currentUser);\n        const isAdmin = this.sessionService.currentUser.roleAdmin;\n        this.setAuthorities(isAdmin);\n        if (this.sessionService.currentUser.active === false) {\n          this.alertService.showError('Disabled user');\n        } else {\n          this.authService.setAuthenticationState(true);\n          this.nav.navigateRoot('dashboard');\n        }\n      }, (error) => {\n        this.alertService.showNotification('bottom', 'right', 'danger', this.messageList.TRY_AGAIN);\n        console.log(error);\n      });\n  }\n\n  setAuthorities(role: boolean) {\n    this.sessionService.isAdmin = role;\n  }\n}\n\n\n  // async showError(text: String) {\n  //   this.loading.dismiss();\n\n  //   const alertct  = await this.alertCtrl.create({\n  //     message: text,\n  //     header: 'Fail',\n  //     subHeader: 'Fail',\n  //     buttons: ['OK']\n  //   });\n  //   await alertct.present();\n  // }\n// }\n\n    \n\n    \n        \n  \n    \n      \n        \n          iTechnologies\n        \n        \n          \n            \n          \n\n          \n            \n          \n        \n\n        \n          Login\n        \n      \n    \n  \n\n\n\n  \n    \n    \n      \n    \n    \n  \n  \n    \n      \n        \n          \n\n            \n              \n            \n\n            \n              \n            \n\n          \n        \n      \n\n      \n        \n          Login\n          Create New Account\n        \n      \n\n    \n  \n -->\n\n\n  Login\n  Register\n -->\n    \n\n    \n                \n                    ./login.page.scss\n                \n                \n// // app-login {\n\n// .login-content {\n//     background: #56CA96;\n\n//     .logo-row {\n//         padding-top: 50px;\n//         padding-bottom: 20px;\n//     }\n\n//     .login-box {\n//         background: #399F8B;\n//         padding: 20px 20px 0px 20px;\n//         margin-top: 30px;\n//     }\n\n//     ion-row {\n//         align-items: center;\n//         text-align: center;\n//     }\n\n//     ion-item {\n//         border-radius: 30px !important;\n//         padding-left: 30px !important;\n//         font-size: 0.9em;\n//         margin-bottom: 10px;\n//         border: 1px solid #ffffff;\n//         border-bottom: 0px !important;\n//         box-shadow: none !important;\n//     }\n\n//     .signup-col {\n//         margin: 0px 16px 0px 16px;\n//         padding-bottom: 20px;\n//     }\n\n//     .item-inner {\n//         border-bottom-color: #ffffff !important;\n//         box-shadow: none !important;\n//     }\n\n//     .submit-btn {\n//         background: #51CFB1;\n//         border-radius: 30px !important;\n//         border: 1px solid #ffffff;\n//     }\n\n//     .register-btn {\n//         color: #ffffff;\n//         font-size: 0.8em;\n//     }\n// }\n\n// // }\n\napp-login {}\n\n$white-color: #fff;\n$height100: 100%;\n\nion-grid {\n    width: 100%;\n    height: $height100;\n    background: #dfdfdf;\n}\n\nion-row {\n    height: $height100;\n}\n\nion-col {\n    border: 1px solid #488aff;\n    background: $white-color;\n}\n\nion-button {\n    font-weight: 300;\n}\n\n@media (min-width: 240px) and (max-width: 768px) {\n    ion-grid {\n        background: $white-color;\n    }\n\n    ion-col {\n        border: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              iTechnologies                                                                                                          Login                                                                                                                                                                                                        Login          Create New Account                     -->  Login  Register -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarcodePage', 'selector': 'app-barcode'},{'name': 'DashboardPage', 'selector': 'app-dashboard'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/public/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getContent\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getContent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/login.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \nsignUp(username, email, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/login.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        LOGIN_SUCCESS: 'Logged',\n        TRY_AGAIN: 'Try again',\n        DISABLED: 'Disabled account',\n        TIME_OUT: 'Time out!',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/login.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\n\nimport { Injectable } from '@angular/core';\nimport { AlertService } from './alert.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport axios from 'axios';\n\n\n@Injectable()\nexport class LoginService {\n    messageList = {\n        LOGIN_SUCCESS: 'Logged',\n        TRY_AGAIN: 'Try again',\n        DISABLED: 'Disabled account',\n        TIME_OUT: 'Time out!',\n    };\n\n    constructor\n        (\n        private alertService: AlertService\n        ) {\n    }\n\n\n    signUp(username, email, password) {\n        const body = {\n            username: username,\n            email: email,\n            password: password\n        };\n        const path = `${API_URL}/register`;\n        const headers = this.getContent();\n\n        return axios.post(path, body, { headers: headers });\n    }\n\n    private getContent() {\n        return new HttpHeaders()\n            .set('Content-Type', 'application/json');\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberRoutingModule.html":{"url":"modules/MemberRoutingModule.html","title":"module - MemberRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/members/member-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuardService } from './../services/auth-guard.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardPageModule', canActivate: [AuthGuardService]},\n  { path: 'barcode', loadChildren: './barcode/barcode.module#BarcodePageModule', canActivate: [AuthGuardService]}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MemberRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/register/register.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createSuccess\n                            \n                            \n                                registerCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                presentAlert\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                showPopup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nav: NavController, auth: AuthenticationService, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/public/register/register.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/register/register.page.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \npresentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/register/register.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/register/register.page.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showPopup\n                        \n                        \n                    \n                \n            \n            \n                \nshowPopup(title, text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/register/register.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/register/register.page.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { email: '', password: '' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/register/register.page.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AuthenticationService } from './../../services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AlertController, LoadingController, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  createSuccess = false;\n  registerCredentials = { email: '', password: '' };\n\n  constructor(\n    private nav: NavController,\n    private auth: AuthenticationService,\n    private alertCtrl: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  presentAlert() {\n    const alert = this.alertCtrl.create({\n      message: 'Low battery',\n      subHeader: '10% of battery remaining',\n      buttons: ['Dismiss']\n    });\n    // alert.present(); #TODO alert\n  }\n\n  public register() {\n    this.auth.register(this.registerCredentials).subscribe(success => {\n      if (success) {\n        this.createSuccess = true;\n        this.showPopup('Success', 'Account created.');\n      } else {\n        this.showPopup('Error', 'Problem creating account.');\n      }\n    },\n      error => {\n        this.showPopup('Error', error);\n      });\n  }\n\n  showPopup(title, text) {\n    let alert = this.alertCtrl.create({\n      message: title,\n      subHeader: text,\n      buttons: [\n        {\n          text: 'OK',\n          // handler: data => {\n          //   if (this.createSuccess) {\n          //     this.nav.popToRoot();\n          //   }\n          // }\n        }\n      ]\n    });\n    // alert.present(); #TODO alert\n  }\n}\n\n    \n\n    \n        \n  \n    Register\n  \n\n\n\n  \n\n    \n      \n        \n          \n\n            \n              \n            \n\n            \n              \n            \n\n          \n        \n      \n\n      \n        \n          Register\n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .login-content {\n    background: #56CA96;\n\n    .login-box {\n        background: #509287;\n        padding: 20px 20px 0px 20px;\n        margin-top: 30px;\n    }\n\n    ion-row {\n        align-items: center;\n        text-align: center;\n    }\n\n    ion-item {\n        border-radius: 30px !important;\n        padding-left: 30px !important;\n        font-size: 0.9em;\n        margin-bottom: 10px;\n        border: 1px solid #ffffff;\n        border-bottom: 0px !important;\n        box-shadow: none !important;\n    }\n\n    .signup-col {\n        margin: 0px 16px 0px 16px;\n        padding-bottom: 20px;\n    }\n\n    .item-inner {\n        border-bottom-color: #ffffff !important;\n        box-shadow: none !important;\n    }\n\n    .submit-btn {\n        background: #51CFB1;\n        border-radius: 30px !important;\n        border: 1px solid #ffffff;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Register                                                                                                                                                            Register                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarcodePage', 'selector': 'app-barcode'},{'name': 'DashboardPage', 'selector': 'app-dashboard'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/public/register/register.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response.html":{"url":"classes/Response.html","title":"class - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                expires_in\n                            \n                            \n                                jti\n                            \n                            \n                                refresh_token\n                            \n                            \n                                scope\n                            \n                            \n                                token_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jti\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { AlertService } from './alert.service';\nimport { TOKEN_AUTH_USERNAME, TOKEN_AUTH_PASSWORD, API_URL } from './api-connect';\nimport { Platform, LoadingController, AlertController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\nimport axios from 'axios';\n\nconst TOKEN_KEY = 'auth-token';\n\nexport class User {\n  name: string;\n  email: string;\n\n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n}\n\nexport class Response {\n  access_token: string;\n  expires_in: number;\n  jti: string;\n  refresh_token: string;\n  scope: string;\n  token_type: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  token = '';\n\n  loading: LoadingController;\n\n  currentUser: User;\n\n  authenticationState = new BehaviorSubject(false);\n\n  constructor(\n    private storage: Storage,\n    private plt: Platform,\n    private alertService: AlertService,\n    private alertCtrl: AlertController,\n    private httpClient: HttpClient\n  ) {\n    this.plt.ready().then(() => {\n      console.log('this.storage constructor AuthService CheckToken');\n      console.log(this.storage);\n      this.checkToken();\n    });\n  }\n\n  auth(username: string, password: string): Promise {\n    if (username === '' || password === '' || username === null || password === null) {\n      this.alertService.showError('Empty credentials');\n    } else {\n      return new Promise((resolve, reject) => {\n        const body = `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}&grant_type=password`;\n        this.httpClient.post(`${API_URL}/login`, body, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(TOKEN_AUTH_USERNAME + ':' + TOKEN_AUTH_PASSWORD)\n          }\n        })\n          .subscribe((response: Response) => {\n              localStorage.setItem('token', `Bearer ${response.access_token}`);\n              this.storage.set('token', `Bearer ${response.access_token}`);\n              resolve(response.access_token);\n              return response;\n          }, error => {\n            console.log(error);\n            this.alertService.showError('Bad credentials');\n          });\n      });\n    }\n\n  }\n\n  setAuthenticationState(value: boolean) {\n    return this.authenticationState.next(value);\n  }\n\n  checkToken() {\n    this.storage.get(TOKEN_KEY).then(res => {\n      if (res) {\n        console.log('this.storage checkToken');\n        console.log(this.storage);\n        this.authenticationState.next(true);\n      }\n    });\n  }\n\n  logout() {\n    return this.storage.remove(TOKEN_KEY).then(() => {\n      console.log('this.storage logout()');\n      console.log(this.storage);\n      this.authenticationState.next(false);\n    });\n  }\n\n  isAuthenticated() {\n    console.log('this.storage isAuth()');\n    console.log(this.storage);\n    return this.authenticationState.value;\n  }\n\n  register(credentials) {\n    return null;\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/session.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authorizationUser\n                            \n                            \n                                    Private\n                                _currentTheme\n                            \n                            \n                                    Private\n                                _currentUser\n                            \n                            \n                                    Private\n                                _isAdmin\n                            \n                            \n                                    Private\n                                _role\n                            \n                            \n                                searchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                                \n                                    authorizationUser\n                                \n                                \n                                    role\n                                \n                                \n                                    currentTheme\n                                \n                                \n                                    isAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/session.service.ts:12\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authorizationUser\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _currentTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'success'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _currentUser\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _role\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchUser\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:17\n                                \n                            \n\n                \n                    \n                        setcurrentUser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        authorizationUser\n                    \n                \n\n                \n                    \n                        getauthorizationUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:31\n                                \n                            \n\n                \n                    \n                        setauthorizationUser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:44\n                                \n                            \n\n                \n                    \n                        setrole(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        currentTheme\n                    \n                \n\n                \n                    \n                        getcurrentTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:57\n                                \n                            \n\n                \n                    \n                        setcurrentTheme(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:61\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:65\n                                \n                            \n\n                \n                    \n                        setisAdmin(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:72\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SessionService {\n    private _currentUser;\n    private _authorizationUser;\n    private _role;\n\n    private _currentTheme = 'success';\n\n    searchUser;\n    private _isAdmin = false;\n\n    constructor() {\n    }\n\n    get currentUser(): any {\n        console.log(localStorage);\n        let user = localStorage.getItem('user');\n        user = JSON.parse(user);\n        this.currentUser = user;\n        return user;\n    }\n\n    set currentUser(value) {\n        const user = JSON.stringify(value);\n        this._currentUser = user;\n        localStorage.setItem('user', user);\n    }\n\n    get authorizationUser(): any {\n        let user = localStorage.getItem('user');\n        user = JSON.parse(user);\n        this.authorizationUser = user;\n        return user;\n    }\n\n    set authorizationUser(value) {\n        const user = JSON.stringify(value);\n        this._authorizationUser = user;\n        localStorage.setItem('user', user);\n    }\n\n    get role() {\n        let role = localStorage.getItem('role');\n        role = JSON.parse(role);\n        this.role = role;\n        return role;\n    }\n\n    set role(value) {\n        const role = JSON.stringify(value);\n        this._role = role;\n        localStorage.setItem('role', role);\n    }\n\n    get currentTheme(): string {\n        return this._currentTheme;\n    }\n\n    set currentTheme(value: string) {\n        this._currentTheme = value;\n    }\n\n    get isAdmin(): boolean {\n        let isAdmin: any = localStorage.getItem('isAdmin');\n        isAdmin = JSON.parse(isAdmin);\n        this.isAdmin = isAdmin;\n        return this._isAdmin;\n    }\n\n    set isAdmin(value: boolean) {\n        const isAdmin = JSON.stringify(value);\n        this._isAdmin = value;\n        localStorage.setItem('isAdmin', isAdmin);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Storehouses.html":{"url":"interfaces/Storehouses.html","title":"interface - Storehouses","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Storehouses\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/IStorehouses.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Storehouses {\n    id?: number,\n    location?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorehousesService.html":{"url":"injectables/StorehousesService.html","title":"injectable - StorehousesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorehousesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storehouses.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewStorehouses\n                            \n                            \n                                deleteStorehouse\n                            \n                            \n                                findStorehousesByLocation\n                            \n                            \n                                getStorehouses\n                            \n                            \n                                updateStorehouse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storehouses.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewStorehouses\n                        \n                        \n                    \n                \n            \n            \n                \naddNewStorehouses(storehouses: Storehouses)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storehouses.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storehouses\n                                    \n                                                Storehouses\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteStorehouse\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteStorehouse(storehouses)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storehouses.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storehouses\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findStorehousesByLocation\n                        \n                        \n                    \n                \n            \n            \n                \nfindStorehousesByLocation(location: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storehouses.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStorehouses\n                        \n                        \n                    \n                \n            \n            \n                \ngetStorehouses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storehouses.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateStorehouse\n                        \n                        \n                    \n                \n            \n            \n                \nupdateStorehouse(storehouses)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storehouses.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storehouses\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\nimport { Injectable } from '@angular/core';\nimport { AlertService } from './alert.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport axios, { AxiosPromise } from 'axios';\n\n\n@Injectable()\nexport class StorehousesService {\n\n\n    constructor() {\n    }\n\n    getStorehouses() {\n        const path = API_URL + `/storehouses`;\n        return  axios.get(path)\n            .then((response => {\n                console.log(response.data);\n                return response.data;\n            }))\n            .catch((error => {\n                console.log('Storehouses service - get array of storehouses');\n                console.log(error);\n            }));\n    }\n\n    addNewStorehouses(storehouses: Storehouses) {\n        const path = API_URL + `/storehouses/new`;\n        const body = {\n            location: storehouses.location\n        };\n        return axios.post(path, body, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log('Response from addNewStorehouses');\n            console.log(response);\n        })\n            .catch((error) => {\n                console.log('Storehouses service - add new storehouses');\n                console.log(error);\n            });\n    }\n\n    deleteStorehouse(storehouses) {\n        const path = API_URL + `/storehouses/delete/${storehouses.id}`;\n        return axios.delete(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateStorehouse(storehouses) {\n        const path = API_URL + `/storehouses/update/${storehouses.id}`;\n        const body = {\n            location: storehouses.location\n        };\n        return axios.put(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        }\n        );\n    }\n\n\n    findStorehousesByLocation(location: string): any {\n        const path = API_URL + `/storehouses?location=${location}`;\n        return axios.get(path)\n            .then((response) => {\n                console.log('Response from findStorehousesByLocation');\n                console.log(response.data);\n            })\n            .catch((error) => {\n                console.log('Storehouses service findStorehousesByLocation');\n                console.log(error);\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { AlertService } from './alert.service';\nimport { TOKEN_AUTH_USERNAME, TOKEN_AUTH_PASSWORD, API_URL } from './api-connect';\nimport { Platform, LoadingController, AlertController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\nimport axios from 'axios';\n\nconst TOKEN_KEY = 'auth-token';\n\nexport class User {\n  name: string;\n  email: string;\n\n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n}\n\nexport class Response {\n  access_token: string;\n  expires_in: number;\n  jti: string;\n  refresh_token: string;\n  scope: string;\n  token_type: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  token = '';\n\n  loading: LoadingController;\n\n  currentUser: User;\n\n  authenticationState = new BehaviorSubject(false);\n\n  constructor(\n    private storage: Storage,\n    private plt: Platform,\n    private alertService: AlertService,\n    private alertCtrl: AlertController,\n    private httpClient: HttpClient\n  ) {\n    this.plt.ready().then(() => {\n      console.log('this.storage constructor AuthService CheckToken');\n      console.log(this.storage);\n      this.checkToken();\n    });\n  }\n\n  auth(username: string, password: string): Promise {\n    if (username === '' || password === '' || username === null || password === null) {\n      this.alertService.showError('Empty credentials');\n    } else {\n      return new Promise((resolve, reject) => {\n        const body = `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}&grant_type=password`;\n        this.httpClient.post(`${API_URL}/login`, body, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(TOKEN_AUTH_USERNAME + ':' + TOKEN_AUTH_PASSWORD)\n          }\n        })\n          .subscribe((response: Response) => {\n              localStorage.setItem('token', `Bearer ${response.access_token}`);\n              this.storage.set('token', `Bearer ${response.access_token}`);\n              resolve(response.access_token);\n              return response;\n          }, error => {\n            console.log(error);\n            this.alertService.showError('Bad credentials');\n          });\n      });\n    }\n\n  }\n\n  setAuthenticationState(value: boolean) {\n    return this.authenticationState.next(value);\n  }\n\n  checkToken() {\n    this.storage.get(TOKEN_KEY).then(res => {\n      if (res) {\n        console.log('this.storage checkToken');\n        console.log(this.storage);\n        this.authenticationState.next(true);\n      }\n    });\n  }\n\n  logout() {\n    return this.storage.remove(TOKEN_KEY).then(() => {\n      console.log('this.storage logout()');\n      console.log(this.storage);\n      this.authenticationState.next(false);\n    });\n  }\n\n  isAuthenticated() {\n    console.log('this.storage isAuth()');\n    console.log(this.storage);\n    return this.authenticationState.value;\n  }\n\n  register(credentials) {\n    return null;\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserApiService.html":{"url":"injectables/UserApiService.html","title":"injectable - UserApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                            \n                                startedEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewAdminUser\n                            \n                            \n                                addNewUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                findUserByUsername\n                            \n                            \n                                getUserList\n                            \n                            \n                                setPermissionsForUsers\n                            \n                            \n                                updateActive\n                            \n                            \n                                updateUser\n                            \n                            \n                                updateUserImage\n                            \n                            \n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewAdminUser\n                        \n                        \n                    \n                \n            \n            \n                \naddNewAdminUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewUser\n                        \n                        \n                    \n                \n            \n            \n                \naddNewUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findUserByUsername\n                        \n                        \n                    \n                \n            \n            \n                \nfindUserByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserList\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPermissionsForUsers\n                        \n                        \n                    \n                \n            \n            \n                \nsetPermissionsForUsers(userList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateActive\n                        \n                        \n                    \n                \n            \n            \n                \nupdateActive(user, isActiveValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isActiveValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(user, body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserImage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserImage(user, updateUserRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserRequest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserInfo(user, body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${API_URL}/users`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-api.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedEditing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-api.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { API_URL } from './api-connect';\nimport { LoginService } from './login.service';\nimport { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\nimport axios, { AxiosPromise } from 'axios';\nimport { LeftTrimPipe } from 'ngx-pipes';\nimport { SessionService } from './session.service';\n\n\n@Injectable()\nexport class UserApiService {\n    startedEditing = new Subject();\n    path = `${API_URL}/users`;\n\n    constructor(\n        // private http: HttpClient,\n        private sessionService: SessionService,\n        private loginService: LoginService) {\n    }\n\n    findUserByUsername(username: string) {\n        const path = this.path + `/name?username=${encodeURIComponent(username)}`;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        }\n        );\n    }\n\n    updateUserInfo(user, body) {\n        const path = API_URL + `/users/update/info/${user.id}/${user.roleAdmin}`;\n        return axios.put(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateUser(user, body) {\n        const path = API_URL + `/users/update/${user.id}`;\n        return axios.put(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateActive(user, isActiveValue) {\n        const body = {\n            active: isActiveValue\n        };\n        const path = this.path + `/updateActive/${user.id}`;\n        return axios.put(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    getUserList(): any {\n        const path = this.path;\n        return axios.get(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        // .then(res => res.data)\n        // .then(data => { return data; })\n    }\n\n    setPermissionsForUsers(userList) {\n        console.log(userList);\n        for (let user of userList) {\n            console.log(user);\n            for (const userRole of user.roles) {\n                console.log(userRole);\n                if (userRole.name == 'admin') {\n                    user.roleAdmin = true;\n                    break;\n                } else {\n                    user.roleAdmin = false;\n                }\n            }\n        }\n        return userList;\n    }\n\n    addNewAdminUser(user) {\n        const body = {\n            active: user.username,\n            email: user.email,\n            password: user.password\n        };\n        const path = this.path;\n        return axios.post(path, body, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    addNewUser(user) {\n        try {\n            return this.loginService.signUp(user.username, user.email, user.password)\n        } catch (err) {\n            // invalid date\n            console.log(err);\n        }\n    }\n\n    deleteUser(user) {\n        const path = this.path + `/ ${user.id} `;\n        return axios.delete(path, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    updateUserImage(user, updateUserRequest) {\n        const path = API_URL + `/users/updateImage/${user.id}`;\n        console.log(path);\n        console.log(user);\n        console.log(updateUserRequest);\n        return axios.patch(path, updateUserRequest, {\n            headers: {\n                'Authorization': localStorage.getItem('token'),\n                'Content-Type': 'application/json'\n            }\n        }\n        )\n        // .then((response => {\n        //     debugger;   #TODO CORS Policy error!\n        //     console.log('Response from update user image');\n        //     console.log(response);\n        // }\n        // ))\n        // .catch((error => {\n        //     console.log('Error from update user image');\n        //     console.log(error);\n        // }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/IBarcode.ts\n            \n            interface\n            IBarcode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/IBookstand.ts\n            \n            interface\n            Bookstand\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/IBrand.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/ICategory.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/IDropdownItems.ts\n            \n            interface\n            DropDownBookstand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/IDropdownItems.ts\n            \n            interface\n            DropDownMe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/IItems.ts\n            \n            interface\n            Items\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/IStorehouses.ts\n            \n            interface\n            Storehouses\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/members/barcode/barcode.page.ts\n            \n            component\n            BarcodePage\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/members/barcode/barcode.page.ts\n            \n            class\n            BarcodeData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/members/barcode/barcode.page.ts\n            \n            class\n            ClassDropdownMe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/members/barcode/barcode.page.ts\n            \n            class\n            ClassItems\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/members/dashboard/dashboard.page.ts\n            \n            component\n            DashboardPage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/public/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/public/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            variable\n            alert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api-connect.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api-connect.ts\n            \n            variable\n            TOKEN_AUTH_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api-connect.ts\n            \n            variable\n            TOKEN_AUTH_USERNAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth-guard.service.ts\n            \n            injectable\n            AuthGuardService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            class\n            Response\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/bookstand.service.ts\n            \n            injectable\n            BookstandService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/brand.service.ts\n            \n            injectable\n            BrandService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/items.service.ts\n            \n            injectable\n            ItemsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/itemsNewValueHandler.service.ts\n            \n            injectable\n            ItemsNewValueHandlerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/storehouses.service.ts\n            \n            injectable\n            StorehousesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/user-api.service.ts\n            \n            injectable\n            UserApiService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~7.1.4\n        \n            @angular/core : ~7.1.4\n        \n            @angular/forms : ~7.1.4\n        \n            @angular/http : ~7.1.4\n        \n            @angular/platform-browser : ~7.1.4\n        \n            @angular/platform-browser-dynamic : ~7.1.4\n        \n            @angular/router : ~7.1.4\n        \n            @ionic-native/barcode-scanner : ^5.0.0-beta.23\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/http : ^5.0.0\n        \n            @ionic-native/splash-screen : 5.0.0-beta.21\n        \n            @ionic-native/status-bar : 5.0.0-beta.21\n        \n            @ionic/angular : 4.0.0-rc.1\n        \n            @ionic/storage : ^2.2.0\n        \n            and : 0.0.3\n        \n            axios : ^0.18.0\n        \n            cordova-android : 7.1.4\n        \n            cordova-plugin-advanced-http : ^2.0.4\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : ^6.0.1\n        \n            cordova-plugin-http : ^1.2.0\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^2.3.2\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            core-js : ^2.5.4\n        \n            crypto-js : ^3.1.9-1\n        \n            ngx-pipes : ^2.3.6\n        \n            phonegap-plugin-barcodescanner : 8.0.1\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BarcodePageModule\n\n\n\ncluster_BarcodePageModule_declarations\n\n\n\ncluster_DashboardPageModule\n\n\n\ncluster_DashboardPageModule_declarations\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAlertService\n\nAlertService\n\nAppModule -->\n\nAlertService->AppModule\n\n\n\n\n\nBookstandService\n\nBookstandService\n\nAppModule -->\n\nBookstandService->AppModule\n\n\n\n\n\nBrandService\n\nBrandService\n\nAppModule -->\n\nBrandService->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nAppModule -->\n\nCategoryService->AppModule\n\n\n\n\n\nItemsNewValueHandlerService\n\nItemsNewValueHandlerService\n\nAppModule -->\n\nItemsNewValueHandlerService->AppModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nAppModule -->\n\nItemsService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nStorehousesService\n\nStorehousesService\n\nAppModule -->\n\nStorehousesService->AppModule\n\n\n\n\n\nUserApiService\n\nUserApiService\n\nAppModule -->\n\nUserApiService->AppModule\n\n\n\n\n\nBarcodePage\n\nBarcodePage\n\n\n\nBarcodePageModule\n\nBarcodePageModule\n\nBarcodePageModule -->\n\nBarcodePage->BarcodePageModule\n\n\n\n\n\nDashboardPage\n\nDashboardPage\n\n\n\nDashboardPageModule\n\nDashboardPageModule\n\nDashboardPageModule -->\n\nDashboardPage->DashboardPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        19 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BarcodePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alert   (src/.../alert.service.ts)\n                        \n                        \n                            API_URL   (src/.../api-connect.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            TOKEN_AUTH_PASSWORD   (src/.../api-connect.ts)\n                        \n                        \n                            TOKEN_AUTH_USERNAME   (src/.../api-connect.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/alert.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alert\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/api-connect.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.1.159:8080/api/it'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_AUTH_PASSWORD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'XY7kmzoNzl100'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_AUTH_USERNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'autocenterjwtclientid'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth-token'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
